{"version":3,"sources":["webpack:///./node_modules/@react-pdf/fontkit/dist/fontkit.browser.es.js"],"names":["fontkit$1","formats","cache","target","key","descriptor","get","value","call","this","Object","defineProperty","fn","Map","memoized","_len","arguments","length","args","Array","_key","has","result","apply","set","registerFormat","format","push","openSync","filename","postscriptName","Error","open","callback","create","buffer","i","probe","font","DecodeStream","getFont","SubHeader","Struct","firstCode","uint16","entryCount","idDelta","int16","idRangeOffset","CmapGroup","startCharCode","uint32","endCharCode","glyphID","UnicodeValueRange","startUnicodeValue","uint24","additionalCount","uint8","UVSMapping","unicodeValue","DefaultUVS","NonDefaultUVS","VarSelectorRecord","varSelector","defaultUVS","Pointer","type","nonDefaultUVS","CmapSubtable","VersionedStruct","0","language","codeMap","LazyArray","2","subHeaderKeys","subHeaderCount","t","Math","max","subHeaders","glyphIndexArray","4","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCode","reservedPad","Reserved","startCode","_currentOffset","6","glyphIndices","8","reserved","is32","nGroups","groups","10","12","13","14","numRecords","varSelectors","CmapEntry","platformID","encodingID","table","lazy","cmap","version","numSubtables","tables","head","int32","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","Bitfield","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","HmtxEntry","advance","bearing","hmtx","metrics","parent","bearings","maxp","numGlyphs","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","getEncoding","languageID","undefined","MAC_LANGUAGE_ENCODINGS","ENCODINGS","15","17","18","24","25","26","27","28","30","37","38","39","40","143","146","LANGUAGES","60","90","1","31","61","91","32","62","92","3","33","63","93","34","64","94","5","35","65","128","36","66","129","7","67","130","68","131","9","69","132","70","133","11","41","71","134","42","72","135","43","73","136","44","74","137","45","75","138","16","46","76","139","47","77","140","48","78","141","19","49","79","142","20","50","80","21","51","81","144","22","52","82","145","23","53","83","54","84","147","55","85","148","56","86","149","57","87","150","58","88","151","29","59","89","NameRecord","nameID","string","String","relativeTo","allowNull","LangTagRecord","tag","NameTable","count","stringOffset","records","langTagCount","langTags","NAMES","process","stream","_iterator","_isArray","isArray","_i","Symbol","iterator","_ref","next","done","record","obj","preEncode","val","indexOf","Buffer","byteLength","en","size","OS2","header","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulCharRange","vendorID","fsSelection","usFirstCharIndex","usLastCharIndex","typoAscender","typoDescender","typoLineGap","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContent","usLowerOpticalPointSize","usUpperOpticalPointSize","versions","post","fixed32","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","names","2.5","offsets","map","cvt","controlValues","fpgm","instructions","loca","prep","controlValueProgram","glyf","_typeof","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","props","enumerable","configurable","writable","protoProps","staticProps","inherits","subClass","superClass","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","CFFIndex","getCFFVersion","ctx","hdrSize","decode","readUInt32BE","readUInt16BE","offSize","readUInt8","offsetType","pos","ret","startPos","start","end","offset","arr","item","encode","writeUInt16BE","sizes","s","writeUInt8","_iterator2","_isArray2","_i2","_ref2","_iterator3","_isArray3","_i3","_ref3","_item","FLOAT_LOOKUP","FLOAT_ENCODE_LOOKUP","CFFOperand","readInt16BE","readInt32BE","str","b","n1","n2","parseFloat","forceLarge","ceil","Number","writeInt32BE","writeInt16BE","c1","c2","FLOAT_EOF","CFFDict","ops","fields","field","decodeOperands","operands","_this","op","encodeOperands","_this2","_startOffset","_field","dict","includePointers","pointerSize","startOffset","len","k","pointers","pointerOffset","_iterator4","_isArray4","_i4","_ref4","_iterator5","_isArray5","_i5","_ref5","_op","ptr","CFFPointer","_r$Pointer","options","Ptr","valueOf","CFFPrivateDict","CFFBlendOp","numBlends","pop","standardStrings","StandardEncoding","ISOAdobeCharset","LangSysTable","reqFeatureIndex","featureCount","featureIndexes","LangSysRecord","langSys","Script","defaultLangSys","langSysRecords","ScriptRecord","script","ScriptList","Feature","featureParams","lookupCount","lookupListIndexes","FeatureRecord","feature","FeatureList","LookupFlags","markAttachmentType","LookupList","SubTable","Lookup","lookupType","subTableCount","subTables","markFilteringSet","Optional","useMarkFilteringSet","_","RangeRecord","startCoverageIndex","Coverage","glyphCount","glyphs","rangeCount","rangeRecords","ClassRangeRecord","class","ClassDef","startGlyph","classValueArray","classRangeCount","classRangeRecord","Device","a","deltaFormat","LookupRecord","sequenceIndex","lookupListIndex","Rule","input","lookupRecords","RuleSet","ClassRule","classes","ClassSet","Context","coverage","ruleSetCount","ruleSets","classDef","classSetCnt","classSet","coverages","ChainRule","backtrackGlyphCount","backtrack","inputGlyphCount","lookaheadGlyphCount","lookahead","ChainRuleSet","ChainingContext","chainCount","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","backtrackCoverage","inputCoverage","lookaheadCoverage","F2DOT14","Fixed","RegionAxisCoordinates","startCoord","peakCoord","endCoord","VariationRegionList","axisCount","regionCount","variationRegions","DeltaSet","shortDeltas","shortDeltaCount","regionDeltas","int8","regionIndexCount","deltas","concat","ItemVariationData","itemCount","regionIndexes","deltaSets","ItemVariationStore","variationRegionList","variationDataCount","itemVariationData","ConditionTable","axisIndex","filterRangeMinValue","filterRangeMaxValue","ConditionSet","conditionCount","conditionTable","FeatureTableSubstitutionRecord","featureIndex","alternateFeatureTable","FeatureTableSubstitution","substitutionCount","substitutions","FeatureVariationRecord","conditionSet","featureTableSubstitution","FeatureVariations","majorVersion","minorVersion","featureVariationRecordCount","featureVariationRecords","PredefinedOp","predefinedOps","index","CFFEncodingVersion","_r$Number","Range1","first","nLeft","Range2","CFFEncoding","nCodes","codes","nRanges","ranges","RangeArray","_r$Array","res","range","CFFCharset","CharStrings","FDRange3","fd","FDRange4","FDSelect","fds","sentinel","CFFPrivateOp","FontDict","CFFTopDict","VariationStore","itemVariationStore","CFF2TopDict","CFFTop","fixed16","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","CFFFont","top","isCIDFont","ROS","sid","getCharString","glyph","readBuffer","getGlyphName","gid","charset","fdForGlyph","low","high","mid","privateDictForGlyph","FDArray","Private","FullName","FamilyName","VerticalOrigin","glyphIndex","vertOriginY","VORG","defaultVertOriginY","numVertOriginYMetrics","BigMetrics","height","width","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","SmallMetrics","bearingX","bearingY","EBDTComponent","xOffset","yOffset","ByteAligned","BitAligned","SBitLineMetrics","data","pad","numComponents","components","dataLen","ascender","descender","widthMax","caretSlopeNumerator","caretSlopeDenominator","minOriginSB","minAdvanceSB","maxBeforeBL","minAfterBL","CodeOffsetPair","glyphCode","IndexSubtable","imageFormat","imageDataOffset","offsetArray","lastGlyphIndex","firstGlyphIndex","imageSize","bigMetrics","glyphArray","glyphCodeArray","IndexSubtableArray","subtable","BitmapSizeTable","indexSubTableArray","indexTablesSize","numberOfIndexSubTables","colorRef","hori","vert","startGlyphIndex","endGlyphIndex","ppemX","ppemY","bitDepth","EBLC","numSizes","ImageTable","ppem","resolution","imageOffsets","sbix","numImgTables","imageTables","LayerRecord","paletteIndex","BaseGlyphRecord","firstLayerIndex","numLayers","COLR","numBaseGlyphRecords","baseGlyphRecord","layerRecords","numLayerRecords","ColorRecord","blue","green","red","alpha","CPAL","numPaletteEntries","numPalettes","numColorRecords","colorRecords","colorRecordIndices","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","BaseCoord","coordinate","referenceGlyph","baseCoordPoint","deviceTable","BaseValues","defaultIndex","baseCoordCount","baseCoords","FeatMinMaxRecord","minCoord","maxCoord","MinMax","featMinMaxCount","featMinMaxRecords","BaseLangSysRecord","minMax","BaseScript","baseValues","defaultMinMax","baseLangSysCount","baseLangSysRecords","BaseScriptRecord","BaseScriptList","BaseTagList","Axis","baseTagList","baseScriptList","BASE","horizAxis","vertAxis","AttachPoint","AttachList","attachPoints","CaretValue","caretValuePoint","LigGlyph","LigCaretList","ligGlyphCount","ligGlyphs","MarkGlyphSetsDef","markSetTableFormat","markSetCount","GDEF","glyphClassDef","attachList","ligCaretList","markAttachClassDef","markGlyphSetsDef","ValueFormat","types","xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice","ValueRecord","buildStruct","struct","rel","PairValueRecord","secondGlyph","value1","value2","PairSet","Class2Record","Anchor","xCoordinate","yCoordinate","anchorPoint","xDeviceTable","yDeviceTable","EntryExitRecord","entryAnchor","exitAnchor","MarkRecord","markAnchor","MarkArray","BaseRecord","classCount","BaseArray","ComponentRecord","LigatureAttach","LigatureArray","GPOSLookup","valueFormat","valueCount","values","valueFormat1","valueFormat2","pairSetCount","pairSets","classDef1","classDef2","class1Count","class2Count","classRecords","entryExitCount","entryExitRecords","markCoverage","baseCoverage","markArray","baseArray","ligatureCoverage","ligatureArray","mark1Coverage","mark2Coverage","mark1Array","mark2Array","posFormat","extension","GPOS","scriptList","featureList","lookupList","featureVariations","Sequence","AlternateSet","Ligature","compCount","LigatureSet","GSUBLookup","deltaGlyphID","substitute","substFormat","sequences","alternateSet","ligatureSets","substitutes","GSUB","JstfGSUBModList","JstfPriority","shrinkageEnableGSUB","shrinkageDisableGSUB","shrinkageEnableGPOS","shrinkageDisableGPOS","shrinkageJstfMax","extensionEnableGSUB","extensionDisableGSUB","extensionEnableGPOS","extensionDisableGPOS","extensionJstfMax","JstfLangSys","JstfLangSysRecord","jstfLangSys","JstfScript","extenderGlyphs","langSysCount","JstfScriptRecord","JSTF","scriptCount","VariableSizeNumber","_size","readUInt24BE","MapDataEntry","entry","entryFormat","outerIndex","innerIndex","DeltaSetIndexMap","mapCount","mapData","HVAR","advanceWidthMapping","LSBMapping","RSBMapping","Signature","SignatureBlock","cbSignature","signature","DSIG","ulVersion","usNumSigs","usFlag","signatures","signatureBlocks","GaspRange","rangeMaxPPEM","rangeGaspBehavior","gasp","numRanges","gaspRanges","DeviceRecord","pixelSize","maximumWidth","widths","hdmx","sizeDeviceRecord","KernPair","left","right","ClassTable","firstGlyph","nGlyphs","Kern2Array","off","leftTable","rowWidth","KernSubtable","nPairs","pairs","rightTable","array","kernValueCount","leftClassCount","rightClassCount","kernValue","leftClass","rightClass","kernIndex","KernTable","subVersion","padding","tupleIndex","kern","nTables","LTSH","yPels","PCLT","fontNumber","pitch","style","typeFamily","symbolSet","typeface","characterComplement","fileName","strokeWeight","widthType","serifStyle","Ratio","bCharSet","xRatio","yStartRatio","yEndRatio","vTable","yPelHeight","VdmxGroup","recs","startsz","endsz","entries","VDMX","numRecs","numRatios","ratioRanges","vhea","advanceHeightMax","minTopSideBearing","minBottomSideBearing","yMaxExtent","VmtxEntry","vmtx","shortFrac","Correspondence","fromCoord","toCoord","Segment","pairCount","correspondence","avar","segment","UnboundedArrayAccessor","base","_items","getItem","inspect","name","UnboundedArray","LookupTable","ValueType","Shadow","BinarySearchHeader","unitSize","nUnits","LookupSegmentSingle","lastGlyph","LookupSegmentArray","LookupSingle","binarySearchHeader","segments","StateTable","entryData","assign","newState","Entry","StateArray","nClasses","StateHeader","classTable","stateArray","entryTable","BslnSubtable","mappingData","standardGlyph","controlPoints","bsln","defaultBaseline","Setting","setting","fontFeatures","FeatureName","nSettings","settingTable","featureFlags","defaultSetting","feat","featureNameCount","reserved1","reserved2","featureNames","Axis$1","axisTag","minValue","defaultValue","maxValue","Instance","coord","postscriptNameID","instanceSize","fvar","offsetToData","countSizePairs","axisSize","instanceCount","axis","shortFrac$1","Offset","gvar","globalCoordCount","globalCoords","ClassTable$1","subFeatureFlags","stateTable","ClassLookupTable","newStateOffset","StateHeader1","WidthDeltaRecord","justClass","beforeGrowLimit","beforeShrinkLimit","afterGrowLimit","afterShrinkLimit","growFlags","shrinkFlags","WidthDeltaCluster","ActionData","lowerLimit","upperLimit","order","addGlyph","substThreshold","substGlyph","variationAxis","minimumLimit","noStretchValue","maximumLimit","Action","actionClass","actionType","actionLength","actionData","PostcompensationAction","PostCompensationTable","lookupTable","JustificationTable","wdcOffset","postCompensationTable","widthDeltaClusters","just","horizontal","vertical","LigatureData","action","ContextualData","markIndex","currentIndex","InsertionData","currentInsertIndex","markedInsertIndex","SubstitutionTable","items","SubtableData","substitutionTable","ligatureActions","ligatureList","insertionActions","Subtable","FeatureEntry","featureType","featureSetting","enableFlags","disableFlags","MorxChain","defaultFlags","chainLength","nFeatureEntries","nSubtables","features","subtables","morx","unused","nChains","chains","OpticalBounds","bottom","opbd","CBLC","_class$1","TableEntry","checkSum","Directory","numTables","binarySearch","cmp","min","_applyDecoratedDescriptor$1","property","decorators","context","desc","forEach","initializer","slice","reverse","reduce","decorator","tables$$1","VoidPointer","floor","log","LN2","iconv","err","CmapProcessor","cmapTable","encoding","findSubtable","encodingExists","uvs","lookup","codepoint","variationSelector","buf","fromCodePoint","getVariationSelector","rangeOffset","_gid","_min","_max","_mid","group","selectors","toArray","x","sel","getCharacterSet","endCodes","tail","_res","codePointsForGlyph","_res2","delta","c","g","_res3","_i6","_ref6","_res4","_iterator6","_isArray6","_i7","_ref7","_group","getOwnPropertyDescriptor","KernProcessor","positions","id","getKerning","crossStream","variation","pairIdx","pair","leftOffset","rightOffset","override","UnicodeLayoutEngine","positionGlyphs","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","copy","codePoints","minX","yGap","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","codePoint","BBox","Infinity","addPoint","y","abs","UNICODE_SCRIPTS","Caucasian_Albanian","Arabic","Imperial_Aramaic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bopomofo","Brahmi","Braille","Buginese","Buhid","Chakma","Canadian_Aboriginal","Carian","Cham","Cherokee","Coptic","Cypriot","Cyrillic","Devanagari","Deseret","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gurmukhi","Hangul","Han","Hanunoo","Hebrew","Hiragana","Pahawh_Hmong","Katakana_Or_Hiragana","Old_Italic","Javanese","Kayah_Li","Katakana","Kharoshthi","Khmer","Khojki","Kannada","Kaithi","Tai_Tham","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Mandaic","Manichaean","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Malayalam","Modi","Mongolian","Mro","Meetei_Mayek","Myanmar","Old_North_Arabian","Nabataean","Nko","Ogham","Ol_Chiki","Old_Turkic","Oriya","Osmanya","Palmyrene","Pau_Cin_Hau","Old_Permic","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Miao","Inscriptional_Parthian","Rejang","Runic","Samaritan","Old_South_Arabian","Saurashtra","Shavian","Sharada","Siddham","Khudawadi","Sinhala","Sora_Sompeng","Sundanese","Syloti_Nagri","Syriac","Tagbanwa","Takri","Tai_Le","New_Tai_Lue","Tamil","Tai_Viet","Telugu","Tifinagh","Tagalog","Thaana","Thai","Tibetan","Tirhuta","Ugaritic","Vai","Warang_Citi","Old_Persian","Cuneiform","Yi","Inherited","Common","Unknown","OPENTYPE_SCRIPTS","RTL","arab","hebr","syrc","thaa","cprt","khar","phnx","lydi","avst","armi","phli","prti","sarb","orkh","samr","mand","merc","mero","mani","mend","nbat","narb","palm","phlp","direction","GlyphRun","direction$$1","stringIndices","bbox","p","GlyphPosition","allTypographicFeatures","code","exclusive","allTypeFeatures","ligatures","requiredLigatures","commonLigatures","rareLigatures","rebusPictures","diphthongLigatures","squaredLigatures","abbrevSquaredLigatures","symbolLigatures","contextualLigatures","historicalLigatures","cursiveConnection","unconnected","partiallyConnected","cursive","letterCase","verticalSubstitution","substituteVerticalForms","linguisticRearrangement","numberSpacing","monospacedNumbers","proportionalNumbers","thirdWidthNumbers","quarterWidthNumbers","smartSwash","wordInitialSwashes","wordFinalSwashes","nonFinalSwashes","diacritics","showDiacritics","hideDiacritics","decomposeDiacritics","verticalPosition","normalPosition","superiors","inferiors","ordinals","scientificInferiors","fractions","noFractions","verticalFractions","diagonalFractions","overlappingCharacters","preventOverlap","typographicExtras","slashedZero","mathematicalExtras","mathematicalGreek","ornamentSets","noOrnaments","dingbats","piCharacters","fleurons","decorativeBorders","internationalSymbols","mathSymbols","characterAlternatives","noAlternates","designComplexity","designLevel1","designLevel2","designLevel3","designLevel4","designLevel5","styleOptions","noStyleOptions","displayText","engravedText","illuminatedCaps","titlingCaps","tallCaps","characterShape","traditionalCharacters","simplifiedCharacters","JIS1978Characters","JIS1983Characters","JIS1990Characters","traditionalAltOne","traditionalAltTwo","traditionalAltThree","traditionalAltFour","traditionalAltFive","expertCharacters","JIS2004Characters","hojoCharacters","NLCCharacters","traditionalNamesCharacters","numberCase","lowerCaseNumbers","upperCaseNumbers","textSpacing","proportionalText","monospacedText","halfWidthText","thirdWidthText","quarterWidthText","altProportionalText","altHalfWidthText","transliteration","noTransliteration","annotation","noAnnotation","boxAnnotation","roundedBoxAnnotation","circleAnnotation","invertedCircleAnnotation","parenthesisAnnotation","periodAnnotation","romanNumeralAnnotation","diamondAnnotation","invertedBoxAnnotation","invertedRoundedBoxAnnotation","kanaSpacing","fullWidthKana","proportionalKana","ideographicSpacing","fullWidthIdeographs","proportionalIdeographs","halfWidthIdeographs","unicodeDecomposition","canonicalComposition","compatibilityComposition","transcodingComposition","rubyKana","CJKSymbolAlternatives","noCJKSymbolAlternatives","CJKSymbolAltOne","CJKSymbolAltTwo","CJKSymbolAltThree","CJKSymbolAltFour","CJKSymbolAltFive","ideographicAlternatives","noIdeographicAlternatives","ideographicAltOne","ideographicAltTwo","ideographicAltThree","ideographicAltFour","ideographicAltFive","CJKVerticalRomanPlacement","CJKVerticalRomanCentered","CJKVerticalRomanHBaseline","italicCJKRoman","CJKItalicRoman","caseSensitiveLayout","caseSensitiveSpacing","alternateKana","alternateHorizKana","alternateVertKana","stylisticAlternatives","noStylisticAlternates","stylisticAltOne","stylisticAltTwo","stylisticAltThree","stylisticAltFour","stylisticAltFive","stylisticAltSix","stylisticAltSeven","stylisticAltEight","stylisticAltNine","stylisticAltTen","stylisticAltEleven","stylisticAltTwelve","stylisticAltThirteen","stylisticAltFourteen","stylisticAltFifteen","stylisticAltSixteen","stylisticAltSeventeen","stylisticAltEighteen","stylisticAltNineteen","stylisticAltTwenty","contextualAlternates","swashAlternates","contextualSwashAlternates","lowerCase","defaultLowerCase","lowerCaseSmallCaps","lowerCasePetiteCaps","upperCase","defaultUpperCase","upperCaseSmallCaps","upperCasePetiteCaps","languageTag","CJKRomanSpacing","halfWidthCJKRoman","proportionalCJKRoman","defaultCJKRoman","fullWidthCJKRoman","selector","OTMapping","rlig","clig","dlig","hlig","liga","hist","smcp","pcap","frac","dnom","numr","afrc","case","ccmp","cpct","valt","swsh","cswh","curs","c2pc","c2sc","init","fin2","medi","med2","fin3","fina","pkna","half","halt","hkna","vkna","ital","lnum","onum","mgrk","calt","vrt2","tnum","pnum","sups","subs","ordn","pwid","hwid","qwid","twid","fwid","palt","trad","smpl","jp78","jp83","jp90","jp04","expt","hojo","nlck","tnam","ruby","titl","zero","ss01","ss02","ss03","ss04","ss05","ss06","ss07","ss08","ss09","ss10","ss11","ss12","ss13","ss14","ss15","ss16","ss17","ss18","ss19","ss20","_class$3","AATMapping","ot","aat","mapFeatureStrings","f","isNaN","typeCode","settingCode","_class$2","AATLookupTable","seg","glyphsForValue","classValue","_segment","AATStateMachine","processEntry","currentState","dir","classCode","shouldAdvance","entryIndex","traverse","opts","state","visited","Set","add","_stateTable","row","enter","exit","AATMorxProcessor","_applyDecoratedDescriptor$2","processIndicRearragement","bind","processContextualSubstitution","processLigature","processNoncontextualSubstitutions","processGlyphInsertion","inputCache","chain","processSubtable","splice","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","verb","swap","reorderGlyphs","subsitutions","getGlyph","_lookup","_lookupTable","_ligatureStack","actions","actionIndex","last","ligatureIndex","ligatureGlyphs","_codePoints","componentGlyph","unshift","store","ligatureEntry","_insertGlyphs","insertionActionIndex","isBefore","_glyphs","insertions","_count","_isBefore","getSupportedFeatures","generateInputs","generateInputCache","_iterator7","_isArray7","generateInputsForSubtable","stack","found","_cache","_stack$pop","rangeA","rangeB","reverseA","reverseB","_class$4","_temp","AATLayoutEngine","morxProcessor","fallbackPosition","glyphRun","r$$1","mapOTToAAT","getAvailableFeatures","_feature","_r","_f","keys","mapAATToOT","stringsForGlyph","glyphStrings","_addStrings","strings","_cmapProcessor","ShapingPlan","stages","globalFeatures","allFeatures","_addFeatures","global","stageIndex","stage","arg","local","addStage","setFeatureOverrides","assignGlobalFeatures","processor","applyFeatures","VARIATION_FEATURES","COMMON_FEATURES","FRACTIONAL_FEATURES","HORIZONTAL_FEATURES","DIRECTIONAL_FEATURES","ltr","rtl","DefaultShaper","plan","_plan","planPreprocessing","planFeatures","planPostprocessing","assignFeatures","userFeatures","isDigit","zeroMarkWidths","trieData","trie","Uint8Array","FEATURES","ShapingClasses","ISOL","FINA","STATE_TABLE","ArabicShaper","_DefaultShaper","prev","curAction","prevAction","type$$1","getShapingClass","_STATE_TABLE$state$ty","category","getCategory","_class$5","_temp$1","GlyphIterator","reset","shouldIgnore","ignoreMarks","ignoreBaseGlyphs","isBase","ignoreLigatures","isLigature","move","peek","idx","increment","peekIndex","DEFAULT_SCRIPTS","OTProcessor","scriptTag","lookups","variationsIndex","_variationProcessor","findVariationsIndex","normalizedCoords","selectScript","ligatureID","currentFeature","findScript","changed","repeat","lang","substituteFeature","substituteFeatureForVariations","lookupsForFeatures","exclude","lookupIndex","sort","substitution","coords","variations","conditions","variationConditionsMatch","every","condition","advances","applyLookups","glyphIterator","_iterator8","_isArray8","_i8","_ref8","_ref9","cur","_iterator9","_isArray9","_i9","_ref10","applyLookup","applyLookupList","_iterator10","_isArray10","_i10","_ref11","lookupRecord","_iterator11","_isArray11","_i11","_ref12","coverageIndex","_iterator12","_isArray12","_i12","_ref13","match","sequence","matched","sequenceMatches","component","sequenceMatchIndices","coverageSequenceMatches","getClassID","_iterator13","_isArray13","_i13","_ref14","classSequenceMatches","_this3","classID","applyContext","set$$1","_iterator14","_isArray14","_i14","_ref15","rule","_iterator15","_isArray15","_i15","_ref16","_rule","applyChainingContext","_iterator16","_isArray16","_i16","_ref17","rules","_iterator17","_isArray17","_i17","_ref18","_rule2","GlyphInfo","_font","ligatureComponent","isLigated","cursiveAttachment","markAttachment","shaperInfo","substituted","isMultiplied","_id","advanceWidth","HangulShaper","getType","STATE_TABLE$1","DECOMPOSE","hasGlyphForCodePoint","decompose","COMPOSE","compose","TONE_MARK","reorderToneMark","INVALID","insertDottedCircle","isL","isV","isT","HANGUL_END","isLV","isLVT","isTone","glyphForCodePoint","l","v","ljmo","vjmo","insert","tjmo","prevType","lv","L_BASE","isCombiningL","V_BASE","isCombiningV","T_BASE","isCombiningT","del","getLength","dottedCircle","_class$6","_temp$2","indicMachine","accepting","tags","useData","categories","decompositions","CATEGORIES","POSITIONS","Start","Ra_To_Become_Reph","Pre_M","Pre_C","Base_C","After_Main","Above_C","Before_Sub","Below_C","After_Sub","Before_Post","Post_C","After_Post","Final_C","SMVD","End","CONSONANT_FLAGS","JOINER_FLAGS","HALANT_OR_COENG_FLAGS","INDIC_CONFIGS","Default","hasOldSpec","virama","basePos","rephPos","rephMode","blwfMode","INDIC_DECOMPOSITIONS","trieData$1","trie$1","IndicShaper","setupSyllables","initialReordering","finalReordering","unicodeScript","fromOpenType","indicConfig","isOldSpec","_loop","d","decomposed","indicCategory","indicPosition","IndicInfo","syllableType","syllable","tags$$1","isConsonant","isJoiner","isHalantOrCoeng","wouldSubstitute","_glyph$features","_layoutEngine","engine","GSUBProcessor","consonantPosition","consonant","info","nextSyllable","_glyphs$start$shaperI","limit","hasReph","rphf","_g","seenBelow","_info","_info2","j","disallowDoubleHalants","_j","lastPos","_info3","_j2","_j3","blwf","abvf","pstf","pref","_i18","_j4","cfar","_i19","nonJoiner","_j5","tryPref","BASE_C","_i20","newPos","_i21","oldPos","tmp","newRephPos","_i22","reph","_i23","_newPos","_oldPos2","_oldPos","_tmp","test","_class$7","_temp$3","trieData$2","categories$1","decompositions$2","trie$2","stateMachine$1","UniversalShaper","setupSyllables$1","clearSubstitutionFlags","recordRphf","recordPref","reorder","useCategory","USEInfo","nextSyllable$1","isHalant","SHAPERS","mong","phag","hang","bng2","beng","dev2","deva","gjr2","gujr","guru","gur2","knda","knd2","mlm2","mlym","ory2","orya","taml","tml2","telu","tel2","khmr","bali","batk","brah","bugi","buhd","cakm","cham","dupl","egyp","gran","hano","java","kthi","kali","khoj","sind","lepc","limb","mahj","mtei","modi","hmng","rjng","saur","shrd","sidd","sinh","sund","sylo","tglg","tagb","tale","lana","tavt","takr","tibt","tfng","tirh","latn","DFLT","_OTProcessor","_index","curGlyph","replacement","_index2","_index3","ligature","_curGlyph","characters","_index4","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","matchIndex","GPOSProcessor","applyPositionValue","variationProcessor","variationStore","getDelta","nextGlyph","_pair","class1","class2","nextIndex","_nextGlyph","curRecord","nextRecord","getAnchor","rightToLeft","baseGlyphIndex","baseIndex","markRecord","baseAnchor","applyAnchor","_markIndex","_baseGlyphIndex","ligIndex","ligAttach","markGlyph","ligGlyph","compIndex","_markRecord","_baseAnchor","mark1Index","prevIndex","_cur","good","mark2Index","_markRecord2","_baseAnchor2","markCoords","markPos","anchor","fixCursiveAttachment","fixMarkAttachment","_k","OTLayoutEngine","setup","shaper","choose","zeroMarkAdvances","cleanup","glyphInfos","LayoutEngine","unicodeLayoutEngine","kernProcessor","layout","charCodeAt","_script","getScript","forString","glyphsForString","hideDefaultIgnorables","glyphInfo","nextState","positioned","space","isDefaultIgnorable","ch","plane","from","SVG_COMMANDS","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath","Path","commands","_bbox","_cbox","toFunction","cmds","command","join","Function","toSVG","round","mapPoints","path","_fn","transform","m0","m1","m2","m3","m4","m5","translate","rotate","angle","cos","sin","scale","scaleX","scaleY","freeze","cx","cy","pow","p0","p1","p2","p3","_c$args","_c$args2","qp1x","qp1y","cp1x","cp1y","cp2x","p3x","cp2y","p3y","_c$args3","b2ac","t1","sqrt","t2","_arr","_class$8","StandardNames","_applyDecoratedDescriptor$4","_class","Glyph","_getPath","_getCBox","_getBBox","_getTableMetrics","metric","_getMetrics","_metrics","_getTableMetrics2","leftBearing","_getTableMetrics3","advanceHeight","topBearing","os2","getAdvanceAdjustment","getScaledPath","_getName","fromCharCode","render","save","fill","restore","GlyfHeader","numberOfContours","Point","onCurve","endContour","Component","dx","dy","scale01","scale10","TTFGlyph","_Glyph","internal","_getTableStream","_parseGlyphCoord","short","same","_decode","glyfPos","_decodeSimple","_decodeComposite","points","endPtsOfContours","numCoords","flag","point","px","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","readInt8","_getContours","_contours","contour","_point","directory","contours","firstPt","lastPt","curvePt","pt","prevPt","midX","midY","CFFGlyph","CFF2","bias","cff","trans","nStems","usedGsubrs","usedSubrs","_usedGsubrs","_usedSubrs","gsubrs","gsubrsBias","privateDict","subrs","Subrs","subrsBias","vstore","vsindex","checkWidth","shift","nominalWidthX","parseStems","parse","phase","c1x","c1y","c2x","c2y","subr","e","blendVector","getBlendVector","numOperands","sum","s1","s2","v1","v2","random","n","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","SBIXImage","originX","originY","buflen","SBIXGlyph","_TTFGlyph","getImageForSize","img","image","renderOutlines","COLRLayer","color","COLRGlyph","layers","fillColor","cpal","colr","rec","baseLayer","_getBaseGlyph","GlyphVariationProcessor","normalizeCoords","blendVectors","normalized","EPSILON","glyphPoints","tupleCount","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleCoords","startCoords","_a","endCoords","_a2","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","Uint16Array","run","runCount","readUInt16","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","_p","out","ref","_table$advanceWidthMa","itemStore","varData","deltaSet","netAdjustment","master","scalar","regionIndex","axes","Subset","mapping","includeGlyph","encodeStream","EncodeStream","nextTick","Point$1","Glyf","xPoints","yPoints","TTFGlyphEncoder","encodeSimple","lastX","lastY","lastFlag","pointCount","_encodePoint","shortFlag","sameFlag","diff","TTFSubset","_Subset","glyphEncoder","_addGlyph","curOffset","nextOffset","CFFSubset","subsetCharstrings","charstrings","subsetSubrs","used","subsetFontdict","used_fds","used_subrs","FontName","createCIDFontdict","addString","Encoding","CIDCount","_applyDecoratedDescriptor","TTFFont","variationCoords","_directoryPos","_tables","_decodeDirectory","_getTable","toString","_decodeTable","logErrors","console","error","getName","createSubset","getVariation","settings","namedVariations","trim","default","WOFFDirectoryEntry","compLength","origChecksum","WOFFDirectory","flavor","totalSfntSize","metaOffset","metaLength","metaOrigLength","privOffset","privLength","WOFFFont","_TTFFont","outBuffer","alloc","TTCHeader","numFonts","dsigTag","dsigLength","dsigOffset","TrueTypeCollection","readString","fonts","DFontName","Ref","nameOffset","attr","dataOffset","handle","Type","maxTypeIndex","refList","TypeList","DFontMap","typeList","nameListOffset","DFontHeader","dataLength","mapLength","DFont","sfnt"],"mappings":"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CR,KAAQ,KACR,MAAQ,QACR,KAAQ,KACR,MAAQ,QACR,KAAQ,KACR,MAAQ,QACR,KAAQ,QACR,KAAQ,QACR,KAAQ,KACR,KAAQ,QACR,MAAQ,QACR,MAAQ,QACR,KAAQ,MACR,KAAQ,QACR,MAAQ,QACR,KAAQ,QACR,KAAQ,KACR,KAAQ,QACR,MAAQ,QACR,KAAQ,KACR,KAAQ,KACR,MAAQ,QACR,KAAQ,QACR,MAAQ,QACR,KAAQ,QACR,MAAQ,QACR,KAAQ,MACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,MAAQ,QACR,MAAQ,QACR,KAAQ,MACR,KAAQ,KACR,KAAQ,QACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,MAAQ,QACR,MAAQ,QACR,KAAQ,QACR,KAAQ,MACR,KAAQ,QACR,KAAQ,MACR,KAAQ,QACR,KAAQ,KACR,MAAQ,QACR,MAAQ,QACR,KAAQ,KACR,KAAQ,MACR,MAAQ,QACR,KAAQ,QACR,KAAQ,QACR,KAAQ,KACR,MAAQ,QACR,KAAQ,KACR,KAAQ,QACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,UACR,KAAQ,KACR,KAAQ,KACR,MAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,MAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,MACR,KAAQ,QACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,UACR,KAAQ,QACR,KAAQ,QACR,KAAQ,MACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KA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AAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,GAAI,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,kBAAmB,CAAC,wBAwDn7UC,GAAU,CACZC,WAnDe,CAAC,IAAK,MAAO,IAAK,KAAM,IAAK,KAAM,MAAO,QAAS,QAAS,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,IAAK,QAAS,QAAS,OAAQ,KAAM,IAAK,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,OAAQ,MAAO,KAAM,KAAM,IAAK,KAAM,QAoD9QC,eAnDqB,CACrB,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,KAAM,MACrB,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,KAAM,MACrB,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,KAAM,MACrB,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,KAAM,MACrB,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,KAAM,MACf,MAAS,CAAC,MAAO,OACjB,MAAS,CAAC,MAAO,OACjB,MAAS,CAAC,MAAO,OACjB,MAAS,CAAC,MAAO,OACjB,MAAS,CAAC,MAAO,OACjB,MAAS,CAAC,MAAO,OACjB,MAAS,CAAC,MAAO,OACjB,MAAS,CAAC,MAAO,OACjB,MAAS,CAAC,MAAO,QAQjB16B,WANij2Ms6B,UANgB,EAAC,GAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAOvVC,KANW,CAAC,GAAI,CAAC,kBAAmB,CAAC,uBAAwB,CAAC,kBAAmB,CAAC,oBAAqB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,mBAAoB,CAAC,kBAAmB,CAAC,uBAAwB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,6BAA8B,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,mBAAoB,CAAC,oCAAqC,CAAC,oBAAqB,CAAC,oBAAqB,CAAC,qBAUtnCI,GACC,EADDA,GAIC,EAJDA,GAKC,GALDA,GAMI,GANJA,GAOG,GAPHA,GAQC,IARDA,GAcE,KAdFA,GAkBK,MAlBLA,GAoBE,MApBFA,GAqBE,GAAK,GAMPC,GAAY,CACdC,MAAO,EACPC,kBAAmB,EACnBC,MAAO,EACPC,MAAO,EACPC,OAAQ,GACRC,WAAY,GACZC,QAAS,GACTC,WAAY,IACZC,QAAS,IACTC,UAAW,IACXC,YAAa,KACbC,OAAQ,KACRC,WAAY,KACZC,QAAS,KACTC,KAAM,MACNC,IAAK,OAEHC,GA3CC,EA2CgClB,GAAgBA,GA1ChD,EASU,KACE,KAiCbmB,GAAenB,GAAiBA,GAChCoB,GAAwBpB,GA/BnB,MAgCLqB,GAAgB,CAClBC,QAAS,CACPC,YAAY,EACZC,OAAQ,EACRC,QAAS,OACTC,QAASzB,GAAUW,YACnBe,SAAU,WACVC,SAAU,gBAEZ5vB,WAAY,CACVuvB,YAAY,EACZC,OAAQ,KACRC,QAAS,OACTC,QAASzB,GAAUW,YACnBe,SAAU,WACVC,SAAU,gBAEZ1wB,QAAS,CACPqwB,YAAY,EACZC,OAAQ,KACRC,QAAS,OACTC,QAASzB,GAAUU,UACnBgB,SAAU,WACVC,SAAU,gBAEZhvB,SAAU,CACR2uB,YAAY,EACZC,OAAQ,KACRC,QAAS,OACTC,QAASzB,GAAUQ,WACnBkB,SAAU,WACVC,SAAU,gBAEZjvB,SAAU,CACR4uB,YAAY,EACZC,OAAQ,KACRC,QAAS,OACTC,QAASzB,GAAUW,YACnBe,SAAU,WACVC,SAAU,gBAEZnsB,MAAO,CACL8rB,YAAY,EACZC,OAAQ,KACRC,QAAS,OACTC,QAASzB,GAAUM,WACnBoB,SAAU,WACVC,SAAU,gBAEZtqB,MAAO,CACLiqB,YAAY,EACZC,OAAQ,KACRC,QAAS,OACTC,QAASzB,GAAUa,WACnBa,SAAU,WACVC,SAAU,gBAEZpqB,OAAQ,CACN+pB,YAAY,EACZC,OAAQ,KACRC,QAAS,OACTC,QAASzB,GAAUa,WACnBa,SAAU,WACVC,SAAU,aAEZjuB,QAAS,CACP4tB,YAAY,EACZC,OAAQ,KACRC,QAAS,OACTC,QAASzB,GAAUa,WACnBa,SAAU,WACVC,SAAU,aAEZ/sB,UAAW,CACT0sB,YAAY,EACZC,OAAQ,KACRC,QAAS,OACTC,QAASzB,GAAUM,WACnBoB,SAAU,YACVC,SAAU,gBAWZnuB,MAAO,CACL8tB,YAAY,EACZC,OAAQ,KACRC,QAAS,QACTC,QAASzB,GAAUE,kBACnBwB,SAAU,YACVC,SAAU,iBAIVC,GAAuB,CAEzB,KAAQ,CAAC,KAAQ,MACjB,KAAQ,CAAC,KAAQ,MACjB,KAAQ,CAAC,KAAQ,MACjB,KAAQ,CAAC,KAAQ,MACjB,KAAQ,CAAC,KAAQ,OAIfx7f/B,GAAiBF,GAAQE,eACzBgC,GAAS,IAAI,IAAY,IAAIrN,WAAWoN,KACxCnT,GAAe,IAAI,IAAa+Q,IAMhCsC,IAAevC,GAAUD,GAAW,SAAUvK,GAGhD,SAAS+M,IAEP,OADAzqD,EAAexX,KAAMiiE,GACdxpD,GAA0BzY,KAAMk1D,EAAep0D,MAAMd,KAAMO,YAmDpE,OAvDA6X,GAAS6pD,EAAa/M,GAOtB+M,EAAY9N,aAAe,SAAsBH,GAC/CA,EAAKb,SAAS+O,IACdlO,EAAKb,SAAS,CAAC,OAAQ,SACvBa,EAAKb,SAASgP,IACdnO,EAAKb,SAAS,QACda,EAAKb,SAAS,QACda,EAAKb,SAAS,QAAQ,GACtBa,EAAKb,SAAS,QACda,EAAKb,SAAS,QAAQ,GACtBa,EAAKb,SAAS,QAAQ,GACtBa,EAAKb,SAAS,QAAQ,GACtBa,EAAKb,SAAS,QAAQ,GACtBa,EAAKb,SAAS,QAAQ,GACtBa,EAAKb,SAAS,QACda,EAAKb,SAAS,QACda,EAAKb,SAAS,QAAQ,GACtBa,EAAKb,SAASiP,IACdpO,EAAKb,SAAS,CACZD,MAAO,CAAC,QACRJ,OAAQ,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,UAGnFkB,EAAKqO,cAriHT,SAAsBzwD,GACpB,OAAO6mC,GAAiB7mC,GAoiHD0wD,CAAatO,EAAK90C,QACvC80C,EAAKuO,YAAcjB,GAActN,EAAKqO,gBAAkBf,GAAcC,QACtEvN,EAAKwO,UAAYxO,EAAKuO,YAAYf,YAAsD,MAAxCxN,EAAK90C,OAAO80C,EAAK90C,OAAO1e,OAAS,IAGnFyhE,EAAY5N,eAAiB,SAAwBL,EAAMrzC,GAgBzD,IAfA,IAAI8hD,EAAQ,SAAe9gE,GACzB,IAAIuqC,EAAYvrB,EAAOhf,GAAG6tC,WAAW,GACjCkzB,EAAIZ,GAAqB51B,IAAc8zB,GAAe9zB,GAE1D,GAAIw2B,EAAG,CACL,IAAIC,EAAaD,EAAE9rD,KAAI,SAAU42B,GAC/B,IAAIC,EAAIumB,EAAKnyD,KAAK08D,kBAAkB/wB,GACpC,OAAO,IAAIivB,GAAUzI,EAAKnyD,KAAM4rC,EAAEa,GAAI,CAACd,GAAI7sB,EAAOhf,GAAG4nC,aAEvD5oB,EAAO6tC,OAAO1tD,MAAM6f,EAAQ,CAAChf,EAAG,GAAGijB,OAAO+9C,MAMrChhE,EAAIgf,EAAOngB,OAAS,EAAGmB,GAAK,EAAGA,IACtC8gE,EAAM9gE,IAIHsgE,EAxD+B,CAyDtClO,IAAgB0L,GAASjL,eAAiB,OAAQkL,IAEpD,SAASkD,GAAcr5C,GACrB,OAAOy4C,GAAOniE,IAAI0pB,EAAMimB,WAAW,KAAO,EAG5C,SAASqzB,GAAct5C,GACrB,OAAO,IAAwC,IAAlCy4C,GAAOniE,IAAI0pB,EAAMimB,WAAW,KAG3C,IAAIszB,GAAY,SAASA,EAAUrN,EAAU5lB,EAAUkzB,EAAcC,GACnExrD,EAAexX,KAAM8iE,GACrB9iE,KAAKy1D,SAAWA,EAChBz1D,KAAK6vC,SAAWA,EAChB7vC,KAAK+iE,aAAeA,EACpB/iE,KAAKgjE,SAAWA,GAGlB,SAASd,GAAergE,EAAM8e,GAC5B,IAAIqiD,EAAW,EACXvT,EAAO,EAEFn9C,EAAYs8C,GAAauL,MAAMx5C,EAAO/J,IAAIgsD,KAAiBrwD,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAA9G,IAAiHH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CAClL,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAGZ,IAAIwa,EAAQ1H,EACR6G,EAAQa,EAAM,GACdZ,EAAMY,EAAM,GACZ2oD,EAAU3oD,EAAM,GAEpB,GAAIb,EAAQg2C,EAAM,GACduT,EAEF,IAAK,IAAI3oD,EAAMo1C,EAAMp1C,EAAMZ,EAAOY,IAChCsG,EAAOtG,GAAK0iD,WAAa,IAAI+F,GAAU7C,GAAcC,GAAUgB,IAAK,oBAAqB8B,KAI3FA,EAEF,IAAK,IAAIvoD,EAAMhB,EAAOgB,GAAOf,EAAKe,IAChCkG,EAAOlG,GAAKsiD,WAAa,IAAI+F,GAAU,GAAKF,GAAcjiD,EAAOlG,IAAOooD,GAAcliD,EAAOlG,IAAOwoD,EAAQ,GAAID,GAGlHvT,EAAO/1C,EAAM,EAGf,GAAI+1C,EAAO9uC,EAAOngB,OAAQ,GACtBwiE,EAEF,IAAK,IAAIrhE,EAAI8tD,EAAM9tD,EAAIgf,EAAOngB,OAAQmB,IACpCgf,EAAOhf,GAAGo7D,WAAa,IAAI+F,GAAU7C,GAAcC,GAAUgB,IAAK,oBAAqB8B,IAK7F,SAASE,GAAY35C,GACnB,OAAOA,EAAMwzC,WAAWtH,SAAW0L,GAGrC,SAASgC,GAAS55C,GAChB,OAAOA,EAAMwzC,WAAWtH,SAAW2L,GAGrC,SAASgC,GAAgB75C,GACvB,OAAOA,EAAMwzC,WAAWtH,SAAW4L,GAGrC,SAASgC,GAAgB1iD,EAAQlB,GAC1B,IAAItF,EAAawG,EAAQvG,EAAY1Z,MAAM8R,QAAQ2H,GAAaiD,EAAM,EAA3E,IAA8EjD,EAAaC,EAAYD,EAAaA,EAAWzH,OAAOC,cAAe,CACnJ,IAAI2wD,EAEA5oD,EAEJ,GAAIN,EAAW,CACb,GAAIgD,GAAOjD,EAAW3Z,OAAQ,MAC9Bka,EAAQP,EAAWiD,SACd,CAEL,IADAA,EAAMjD,EAAWtH,QACTC,KAAM,MACd4H,EAAQ0C,EAAItd,MAGF4a,EACN6uB,WAAY+5B,EAAkB,IAAoB7jD,IAAW,EAAM6jD,GAK3E,OAFW3iD,EAAO,GAAG+7C,MAAM6G,cAAcC,OAAOC,cAC3ClQ,cAAc,CAAC9zC,GAAUkB,GACL,IAAlBA,EAAOngB,OAGhB,SAASkjE,GAAkB7hE,EAAM8hE,EAAWlC,GAC1C,IAAI9gD,EAAS,CAAC8gD,EAAQkC,EAAWlC,GAEjC,OAAI4B,GAAgB1iD,EAAOqqB,MAAM,EAAG,GAAI,SAAWq4B,GAAgB1iD,EAAOqqB,MAAM,EAAG,GAAI,QAC9Ek1B,GAAUS,QACR0C,GAAgB1iD,EAAOqqB,MAAM,EAAG,GAAI,SAAWq4B,GAAgB1iD,EAAOqqB,MAAM,EAAG,GAAI,SAEnFq4B,GAAgB1iD,EAAOqqB,MAAM,EAAG,GAAI,SAAWq4B,GAAgB1iD,EAAOqqB,MAAM,EAAG,GAAI,QADrFk1B,GAAUY,OAKZZ,GAAUK,OAGnB,SAAS4B,GAAkBtgE,EAAM8e,EAAQqzC,GACvC,IAAIuO,EAAcvO,EAAKuO,YACnBh5B,EAAW1nC,EAAK0hE,cAAcC,OAAOC,cAAcl6B,SACnDi2B,EAAe39D,EAAK08D,kBAAkB,MAAQjwB,GAC9CmzB,EAAS5/D,EAAK08D,kBAAkBgE,EAAYd,QAAQnzB,GAExD,GAAImzB,EAGF,IAFA,IAAImC,EAAO,IAAInH,GAAU56D,EAAM4/D,EAAQ,CAACc,EAAYd,SAE3C9/D,EAAI,EAAGA,EAAIgf,EAAOngB,OAAQmB,IAC7Bgf,EAAOhf,GAAGo7D,WAAWltB,WAAaqwB,GAAUK,SAC9C5/C,EAAOhf,GAAGo7D,WAAWltB,SAAW6zB,GAAkB7hE,EAAM8e,EAAOhf,GAAG4tC,OAAQq0B,IAKhF,IAAK,IAAInqD,EAAQ,EAAGC,EAAMmqD,GAAaljD,EAAQ,GAAIlH,EAAQkH,EAAOngB,OAAqBkZ,EAAMmqD,GAAaljD,EAAhClH,EAAQC,GAAwC,CACxH,IAAIoqD,EAAwBnjD,EAAOlH,GAAOsjD,WAEtCgG,GADWe,EAAsBrO,SAClBqO,EAAsBf,cAEzC,GAAqB,mBAAjBA,GAAsD,sBAAjBA,EAAzC,CAIA,GAAqB,mBAAjBA,GAAqCvD,EAAc,CACrD,IAAI/xB,EAAI,IAAIgvB,GAAU56D,EAAM29D,EAAc,CAAC,OAC3C/xB,EAAEsvB,WAAa,IAAI+F,GAAU,GAAKF,GAAcn1B,GAAIo1B,GAAcp1B,GAAI9sB,EAAOlH,GAAOsjD,WAAWgG,aAAcpiD,EAAOlH,GAAOsjD,WAAWiG,UAItI,IAFA,IAAIxlD,EAAM/D,EAEH+D,EAAM9D,GAAOiH,EAAOnD,GAAKu/C,WAAWtH,WAAawK,IACtDziD,IAGFmD,EAAO6tC,OAAOhxC,IAAO,EAAGiwB,GACxB/zB,IAWF,IAAIsnB,EAAOtnB,EACPqqD,EAAQtqD,EACRuqD,GAAU,EAId,GAAIzB,EAAYZ,UAAYzB,GAAUE,mBAAqB72B,EAAS06B,MAAQxqD,EAAQ,GAAKC,IAAiC,aAAzB6oD,EAAYX,WAA4BuB,GAASxiD,EAAOlH,EAAQ,KAAgC,aAAzB8oD,EAAYX,UAA2BjhD,EAAOlH,EAAQ,GAAGsjD,WAAWtH,WAAawK,IAAiB,CAExQ,IAAIiE,EAAK,CAACvjD,EAAOlH,GAAO81B,OAAQ5uB,EAAOlH,EAAQ,GAAG81B,OAAQ5uB,EAAOlH,EAAQ,GAAG81B,QAE5E,GAAI8zB,GAAgBa,EAAGl5B,MAAM,EAAG,GAAI,SAAoC,aAAzBu3B,EAAYX,UAA2ByB,GAAgBa,EAAI,QAAS,CAGjH,IAFAH,GAAS,EAEFA,EAAQrqD,GAAOypD,GAASxiD,EAAOojD,KACpCA,IAGF/iC,EAAOvnB,EACPuqD,GAAU,QAEP,GAA6B,cAAzBzB,EAAYX,UAA4BjhD,EAAOlH,GAAOsjD,WAAWtH,WAAawK,GAAkB,CAGzG,IAFA8D,IAEOA,EAAQrqD,GAAOypD,GAASxiD,EAAOojD,KACpCA,IAGF/iC,EAAOvnB,EACPuqD,GAAU,EAGZ,OAAQzB,EAAYb,SAClB,IAAK,OAGD,IAAI/zB,EAAMj0B,EACNyqD,GAAY,EAEhB,EAAG,CACD,IAAIC,EAAQzjD,IAASgtB,GAAKovB,WAE1B,GAAImG,GAAYviD,EAAOgtB,IAAO,CAG5B,GAAIy2B,EAAMv0B,WAAaqwB,GAAUS,UAAYyD,EAAMv0B,WAAaqwB,GAAUY,QAAUqD,GAAY,CAC9FnjC,EAAO2M,EACP,MAYEy2B,EAAMv0B,WAAaqwB,GAAUS,UAC/BwD,GAAY,GAGdnjC,EAAO2M,OACF,GAAIl0B,EAAQk0B,GAAOy2B,EAAM3O,WAAawK,IAAkBt/C,EAAOgtB,EAAM,GAAGovB,WAAWtH,WAAawK,GAMrG,YAEKtyB,EAAMo2B,GAEf,MAGJ,IAAK,QAKD,IAAK,IAAI/1B,GAFThN,EAAOvnB,GAEe,EAAGu0B,EAAMt0B,EAAKs0B,IAC9Bk1B,GAAYviD,EAAOqtB,MACrBrtB,EAAOqtB,GAAK+uB,WAAWltB,SAAWqwB,GAAUS,SAWlDqD,GAAWhjC,IAASvnB,GAASsqD,EAAQ/iC,GAAQ,IAC/CgjC,GAAU,GA8BZ,IAAK,IAAIrL,EAAMl/C,EAAOk/C,EAAM33B,EAAM23B,IAAO,CACvC,IAAI0L,EAAS1jD,EAAOg4C,GAAKoE,WACzBsH,EAAOx0B,SAAWvrC,KAAKkmC,IAAI01B,GAAUI,MAAO+D,EAAOx0B,UAGjD7O,EAAOtnB,IACTiH,EAAOqgB,GAAM+7B,WAAWltB,SAAWqwB,GAAUK,QAK/C,IAAK,IAAItH,EAAMj4B,EAAO,EAAGi4B,EAAMv/C,EAAKu/C,IAClC,GAAIt4C,EAAOs4C,GAAK8D,WAAWtH,WAAawK,GAAc,CACpD,IAAK,IAAIqE,EAAIrL,EAAM,EAAGqL,EAAI5qD,EAAK4qD,IAC7B,GAAIpB,GAAYviD,EAAO2jD,IAAK,CAC1B3jD,EAAO2jD,GAAGvH,WAAWltB,SAAWqwB,GAAUc,QAC1C,MAIJ,MAyBJ,GApBIgD,IACFrjD,EAAOlH,GAAOsjD,WAAWltB,SAAWqwB,GAAUE,mBAmB5CpM,EAAKwO,UAGP,IAFA,IAAI+B,EAA+C,cAAvBvQ,EAAKqO,cAExB9I,EAAOv4B,EAAO,EAAGu4B,EAAO7/C,EAAK6/C,IACpC,GAAI54C,EAAO44C,GAAMwD,WAAWtH,WAAawK,GAAc,CACrD,IAAIuE,OAAK,EAET,IAAKA,EAAK9qD,EAAM,EAAG8qD,EAAKjL,KAClB2J,GAAYviD,EAAO6jD,KAAQD,GAAyB5jD,EAAO6jD,GAAIzH,WAAWtH,WAAawK,IAD/DuE,KAM9B,GAAI7jD,EAAO6jD,GAAIzH,WAAWtH,WAAawK,IAAgBuE,EAAKjL,EAAM,CAEhE,IAAIl1D,EAAIsc,EAAO44C,GACf54C,EAAO6tC,OAAO1tD,MAAM6f,EAAQ,CAAC44C,EAAM,GAAG30C,OAAOjE,EAAO6tC,OAAO+K,EAAO,EAAGiL,EAAKjL,KAC1E54C,EAAO6jD,GAAMngE,EAGf,MAQN,IAFA,IAAIogE,EAAUvE,GAAUC,MAEfvG,EAAOngD,EAAOmgD,EAAOlgD,EAAKkgD,IAAQ,CACzC,IAAI8K,EAAS/jD,EAAOi5C,GAAMmD,WAE1B,GAAI2H,EAAOjP,UAAY2L,GAAenB,GAAeA,GAAgBA,GAAgBoB,GAAwBqD,EAAOjP,WAGlH,GAFAiP,EAAO70B,SAAW40B,EAEdC,EAAOjP,WAAawK,IAAgByE,EAAO70B,WAAaqwB,GAAUG,MAQpE,IAAK,IAAIsE,EAAM/K,EAAM+K,EAAMlrD,EAAOkrD,IAChC,GAAIhkD,EAAOgkD,EAAM,GAAG5H,WAAWltB,WAAaqwB,GAAUG,MAAO,CAC3DqE,EAAO70B,SAAWlvB,EAAOgkD,EAAM,GAAG5H,WAAWltB,SAC7C,YAIG60B,EAAO70B,WAAaqwB,GAAUe,OACvCwD,EAAUC,EAAO70B,UAQrB,IAFA,IAAI4f,EAAOzuB,EAEFi5B,EAAOj5B,EAAO,EAAGi5B,EAAOvgD,EAAKugD,IACpC,GAAIiJ,GAAYviD,EAAOs5C,IAAQ,CAC7B,IAAK,IAAI2K,EAAMnV,EAAO,EAAGmV,EAAM3K,EAAM2K,IAC/BjkD,EAAOikD,GAAK7H,WAAWltB,SAAWqwB,GAAUe,OAC9CtgD,EAAOikD,GAAK7H,WAAWltB,SAAWlvB,EAAOs5C,GAAM8C,WAAWltB,UAI9D4f,EAAOwK,OACEt5C,EAAOs5C,GAAM8C,WAAWtH,WAAawK,KAC9CxQ,EAAOwK,GAIX,IAAIrgD,EAAM+G,EAAOqqB,MAAMvxB,EAAOC,GAC9BE,EAAIk+C,MAAK,SAAUx2C,EAAGpG,GACpB,OAAOoG,EAAEy7C,WAAWltB,SAAW30B,EAAE6hD,WAAWltB,YAE9ClvB,EAAO6tC,OAAO1tD,MAAM6f,EAAQ,CAAClH,EAAOG,EAAIpZ,QAAQokB,OAAOhL,IAEvD,IAAK,IAAIihD,EAAOphD,EAAOohD,EAAOnhD,EAAKmhD,IACjC,GAAIl6C,EAAOk6C,GAAMkC,WAAWltB,WAAaqwB,GAAUK,OAAQ,CACzDv/B,EAAO65B,EACP,MAMJ,IAAK,IAAIS,EAAO7hD,EAAO6hD,EAAO5hD,GAAOiH,EAAO26C,GAAMyB,WAAWltB,WAAaqwB,GAAUE,kBAAmB9E,IACrG36C,EAAO26C,GAAM/xB,SAAS06B,MAAO,EAM/B,IAFA,IAAIY,GAAQ7Q,EAAKwO,WAAsC,iBAAzBD,EAAYV,SAEjClG,EAAOliD,EAAOkiD,EAAO36B,EAAM26B,IAClCh7C,EAAOg7C,GAAMpyB,SAASgf,MAAO,EAEzBsc,IACFlkD,EAAOg7C,GAAMpyB,SAASs7B,MAAO,GAKjC,IAAK,IAAI5I,EAAOj7B,EAAO,EAAGi7B,EAAOviD,EAAKuiD,IACpCt7C,EAAOs7C,GAAM1yB,SAASu7B,MAAO,EAC7BnkD,EAAOs7C,GAAM1yB,SAASw7B,MAAO,EAC7BpkD,EAAOs7C,GAAM1yB,SAASs7B,MAAO,EAG/B,GAAI7Q,EAAKwO,WAAoC,eAAvBxO,EAAKqO,cAkBzB,IAAK,IAAI/F,EAAO7iD,EAAO6iD,EAAO,EAAIt7B,EAAMs7B,IAClC37C,EAAO27C,GAAMS,WAAWtH,WAAawK,IAAiBt/C,EAAO27C,EAAO,GAAGS,WAAWtH,WAAawK,IAAiB3D,EAAO,IAAMt7B,GAAQrgB,EAAO27C,EAAO,GAAGS,WAAWtH,WAAawK,KAChLt/C,EAAO27C,GAAM/yB,SAASs7B,MAAO,EAC7BlkD,EAAO27C,EAAO,GAAG/yB,SAASs7B,MAAO,GAOvC,GAAIt7B,EAASy7B,MAAQhkC,EAFP,EAEwBtnB,EAEpC,IAAK,IAAIurD,EAAOjkC,EAAO,EAAGikC,EAJd,EAI+B,EAAIvrD,EAAKurD,IAAQ,CAG1D,GAAI5B,GAFM,CAAC1iD,EAAOskD,GAAM11B,OAAQ5uB,EAAOskD,EAAO,GAAG11B,QAExB,QAAS,CAChC,IAAK,IAAI21B,EAAM,EAAGA,EARV,EAQyBA,IAC/BvkD,EAAOskD,KAAQ17B,SAASy7B,MAAO,EAQjC,GAAIz7B,EAAS47B,KACX,KAAOF,EAAOvrD,EAAKurD,IACjBtkD,EAAOskD,GAAM17B,SAAS47B,MAAO,EAIjC,OAMN,IAAK,IAAIC,EAAO3rD,EAAQ,EAAG2rD,EAAO1rD,EAAK0rD,IACrC,GAAIjC,GAASxiD,EAAOykD,IAAQ,CAC1B,IAAIC,EAAY1kD,EAAOykD,GAAMrI,WAAWtH,WAAawK,GACjDqF,EAAMF,EAEV,GACEE,IAKID,UACK1kD,EAAO2kD,GAAK/7B,SAASgf,WAEvB+c,EAAM7rD,IAAUypD,GAAYviD,EAAO2kD,QAMpD,SAASlD,GAAgBvgE,EAAM8e,EAAQqzC,GAIrC,IAHA,IAAIuO,EAAcvO,EAAKuO,YACnBh5B,EAAW1nC,EAAK0hE,cAAcC,OAAOC,cAAcl6B,SAE9C9vB,EAAQ,EAAGC,EAAMmqD,GAAaljD,EAAQ,GAAIlH,EAAQkH,EAAOngB,OAAqBkZ,EAAMmqD,GAAaljD,EAAhClH,EAAQC,GAAwC,CAWxH,IAJA,IAAI6rD,IAAYh8B,EAASy7B,KAErBhkC,EAAOvnB,EAEJunB,EAAOtnB,EAAKsnB,IACjB,GAAIrgB,EAAOqgB,GAAM+7B,WAAWltB,UAAYqwB,GAAUK,OAAQ,CACxD,GAAIgF,GAAWvkC,EAAO,EAAItnB,EACxB,IAAK,IAAI/X,EAAIq/B,EAAO,EAAGr/B,EAAI+X,EAAK/X,IAC9B,GAAIgf,EAAOhf,GAAG4nC,SAASy7B,KAAM,CAC3B,IAAMrkD,EAAOhf,GAAGq7D,cAAer8C,EAAOhf,GAAGi7D,WAAcj8C,EAAOhf,GAAGs7D,aAAe,CAK9E,IAFAj8B,EAAOr/B,EAEAq/B,EAAOtnB,GAAO0pD,GAAgBziD,EAAOqgB,KAC1CA,IAGFrgB,EAAOqgB,GAAM+7B,WAAWltB,SAAWqwB,GAAUsF,OAC7CD,GAAU,EAGZ,MAMN,GAA2B,cAAvBvR,EAAKqO,cACP,IAAK,IAAIoD,EAAOzkC,EAAO,EAAGykC,EAAO/rD,EAAK+rD,IAAQ,CAC5C,KAAOA,EAAO/rD,GAAOypD,GAASxiD,EAAO8kD,KACnCA,IAGF,GAAIA,IAAS/rD,IAAQ0pD,GAAgBziD,EAAO8kD,IAC1C,MAKF,IAFAA,IAEOA,EAAO/rD,GAAOypD,GAASxiD,EAAO8kD,KACnCA,IAGEA,EAAO/rD,GAAOwpD,GAAYviD,EAAO8kD,KAAU9kD,EAAO8kD,GAAM1I,WAAWltB,WAAaqwB,GAAUS,UAE5FhgD,EADAqgB,EAAOykC,GACM1I,WAAWltB,SAAWqwB,GAAUK,QAK/C9mD,EAAQunB,GAAQrgB,EAAOqgB,GAAM+7B,WAAWltB,SAAWqwB,GAAUK,QAC/Dv/B,IAGF,MAQJ,GAJIA,IAAStnB,GAAOD,EAAQunB,GAAQrgB,EAAOqgB,EAAO,GAAG+7B,WAAWtH,WAAawK,IAC3Ej/B,IAGEA,EAAOtnB,EACT,KAAOD,EAAQunB,GAAQrgB,EAAOqgB,GAAM+7B,WAAWtH,UAAYwK,GAAeoB,KACxErgC,IAaJ,GAAIvnB,EAAQ,EAAIC,GAAOD,EAAQunB,EAAM,CAGnC,IAAI0kC,EAAS1kC,IAAStnB,EAAMsnB,EAAO,EAAIA,EAAO,EAI9C,GAA2B,cAAvBgzB,EAAKqO,eAAwD,UAAvBrO,EAAKqO,cAA2B,CACxE,KAAOqD,EAASjsD,KAAWkH,EAAO+kD,GAAQ3I,WAAWtH,UAAYwK,GAAeoB,MAC9EqE,IAMEtC,GAAgBziD,EAAO+kD,KAAY/kD,EAAO+kD,GAAQ3I,WAAWltB,WAAaqwB,GAAUG,MAElFqF,EAAS,EAAIhsD,GAAOypD,GAASxiD,EAAO+kD,EAAS,KAC/CA,IAGFA,EAASjsD,EAIb,GAAIA,EAAQisD,GAAU/kD,EAAO+kD,GAAQ3I,WAAWltB,WAAaqwB,GAAUG,MAErE,IAAK,IAAIsF,EAAOD,EAAQC,EAAOlsD,EAAOksD,IACpC,GAAIhlD,EAAOglD,EAAO,GAAG5I,WAAWltB,WAAaqwB,GAAUG,MAAO,CAC5D,IAAIuF,EAASD,EAAO,EAEhBC,EAAS5kC,GAAQA,GAAQ0kC,GAE3B1kC,IAGF,IAAI6kC,EAAMllD,EAAOilD,GACjBjlD,EAAO6tC,OAAO1tD,MAAM6f,EAAQ,CAACilD,EAAQ,GAAGhhD,OAAOjE,EAAO6tC,OAAOoX,EAAS,EAAGF,EAASE,KAClFjlD,EAAO+kD,GAAUG,EACjBH,KAqBR,GAAIjsD,EAAQ,EAAIC,GAAOiH,EAAOlH,GAAOsjD,WAAWltB,WAAaqwB,GAAUE,mBAAqBz/C,EAAOlH,GAAOsjD,WAAWtH,WAAawK,MAAsBt/C,EAAOlH,GAAOmjD,YAAcj8C,EAAOlH,GAAOwjD,cAAe,CAC/M,IAAI6I,OAAa,EACbnE,EAAUY,EAAYZ,QACtB5Q,GAAQ,EAGZ,GAAI4Q,IAAYzB,GAAUa,WAAY,CAapC,IAFA+E,EAAarsD,EAAQ,EAEdqsD,EAAa9kC,IAASoiC,GAAgBziD,EAAOmlD,KAClDA,IAeF,GAZIA,EAAa9kC,GAAQoiC,GAAgBziD,EAAOmlD,MAE1CA,EAAa,EAAI9kC,GAAQmiC,GAASxiD,EAAOmlD,EAAa,KACxDA,IAGF/U,GAAQ,IAMLA,GAAS4Q,IAAYzB,GAAUM,WAAY,CAG9C,IAFAsF,EAAa9kC,EAEN8kC,EAAa,EAAIpsD,GAAOiH,EAAOmlD,EAAa,GAAG/I,WAAWltB,UAAYqwB,GAAUM,YACrFsF,IAGF/U,EAAQ+U,EAAapsD,EASvB,IAAKq3C,GAAS4Q,IAAYzB,GAAUU,UAAW,CAG7C,IAFAkF,EAAa9kC,EAEN8kC,EAAa,EAAIpsD,KAASiH,EAAOmlD,EAAa,GAAG/I,WAAWltB,UAAYqwB,GAAUY,OAASZ,GAAUa,WAAab,GAAUe,QACjI6E,IAGF/U,EAAQ+U,EAAapsD,GAUzB,IAAKq3C,EAAO,CAIV,IAFA+U,EAAarsD,EAAQ,EAEdqsD,EAAa9kC,IAASoiC,GAAgBziD,EAAOmlD,KAClDA,IAGEA,EAAa9kC,GAAQoiC,GAAgBziD,EAAOmlD,MAE1CA,EAAa,EAAI9kC,GAAQmiC,GAASxiD,EAAOmlD,EAAa,KACxDA,IAGF/U,GAAQ,GAKZ,IAAKA,EAAO,CAGV,IAFA+U,EAAapsD,EAAM,EAEZosD,EAAarsD,GAASkH,EAAOmlD,GAAY/I,WAAWltB,WAAaqwB,GAAUe,MAChF6E,IAQF,GAAI1C,GAAgBziD,EAAOmlD,IACzB,IAAK,IAAIC,EAAO/kC,EAAO,EAAG+kC,EAAOD,EAAYC,IACvCplD,EAAOolD,GAAMhJ,WAAWtH,WAAawK,IACvC6F,IAMR,IAAIE,EAAOrlD,EAAOlH,GAClBkH,EAAO6tC,OAAO1tD,MAAM6f,EAAQ,CAAClH,EAAO,GAAGmL,OAAOjE,EAAO6tC,OAAO/0C,EAAQ,EAAGqsD,EAAarsD,KACpFkH,EAAOmlD,GAAcE,EAEjBvsD,EAAQunB,GAAQA,GAAQ8kC,GAC1B9kC,IAQJ,GAAIukC,GAAWvkC,EAAO,EAAItnB,EACxB,IAAK,IAAIusD,EAAOjlC,EAAO,EAAGilC,EAAOvsD,EAAKusD,IACpC,GAAItlD,EAAOslD,GAAM18B,SAASy7B,KAAM,CAQ9B,GAAIrkD,EAAOslD,GAAMrJ,YAAcj8C,EAAOslD,GAAMhJ,aAAc,CAMxD,IAAIiJ,EAAUllC,EAId,GAA2B,cAAvBgzB,EAAKqO,eAAwD,UAAvBrO,EAAKqO,cAA2B,CACxE,KAAO6D,EAAUzsD,KAAWkH,EAAOulD,EAAU,GAAGnJ,WAAWtH,UAAYwK,GAAeoB,MACpF6E,IAKF,GAAIA,EAAUzsD,GAASkH,EAAOulD,EAAU,GAAGnJ,WAAWtH,WAAawK,GAGjE,IAFA,IAAIkG,EAAWF,EAEN3B,EAAItjC,EAAO,EAAGsjC,EAAI6B,EAAU7B,IACnC,GAAI3jD,EAAO2jD,GAAGvH,WAAWtH,WAAawK,GAAc,CAClDiG,IACA,OAMJA,EAAUzsD,GAAS2pD,GAAgBziD,EAAOulD,EAAU,KAElDA,EAAUxsD,GAAOypD,GAASxiD,EAAOulD,KACnCA,IAIJ,IAAIE,EAAUH,EACVI,EAAO1lD,EAAOylD,GAClBzlD,EAAO6tC,OAAO1tD,MAAM6f,EAAQ,CAACulD,EAAU,EAAG,GAAGthD,OAAOjE,EAAO6tC,OAAO0X,EAASE,EAAUF,KACrFvlD,EAAOulD,GAAWG,EAEdH,GAAWllC,GAAQA,EAAOolC,GAC5BplC,IAIJ,MAMFrgB,EAAOlH,GAAOsjD,WAAWltB,WAAaqwB,GAAUG,OAAW5mD,GAAU,QAAQ6sD,KAAK,UAAQ5Q,YAAY/0C,EAAOlH,EAAQ,GAAG+1B,WAAW,OACrI7uB,EAAOlH,GAAO8vB,SAASye,MAAO,IAKpC,SAAS6b,GAAaljD,EAAQlH,GAC5B,GAAIA,GAASkH,EAAOngB,OAAQ,OAAOiZ,EAGnC,IAFA,IAAIupD,EAAWriD,EAAOlH,GAAOsjD,WAAWiG,WAE/BvpD,EAAQkH,EAAOngB,QAAUmgB,EAAOlH,GAAOsjD,WAAWiG,WAAaA,IAExE,OAAOvpD,EAGT,IAOI8sxzcC,GAAe5G,GAAQC,WACvB4G,GAAmB7G,GAAQE,eAC3B4G,GAAS,IAAI,IAAY,IAAIjS,WAAW8R,KACxCI,GAAiB,IAAI,IAAa/G,IAOlCgH,IAAmBN,GAAUD,GAAW,SAAUrR,GAGpD,SAAS4R,IAEP,OADAtvD,EAAexX,KAAM8mE,GACdruD,GAA0BzY,KAAMk1D,EAAep0D,MAAMd,KAAMO,YA4CpE,OAhDA6X,GAAS0uD,EAAiB5R,GAO1B4R,EAAgB3S,aAAe,SAAsBH,GACnDA,EAAKb,SAAS4T,IAEd/S,EAAKb,SAAS,CAAC,OAAQ,OAAQ,OAAQ,SAEvCa,EAAKb,SAAS6T,IACdhT,EAAKb,SAAS,CAAC,SAAS,GACxBa,EAAKb,SAAS8T,IACdjT,EAAKb,SAAS6T,IACdhT,EAAKb,SAAS,CAAC,SACfa,EAAKb,SAAS+T,IAEdlT,EAAKb,SAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAC/Da,EAAKb,SAASgU,IAKdnT,EAAKb,SAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,UAGjE2T,EAAgBzS,eAAiB,SAAwBL,EAAMrzC,GAe7D,IAdA,IAAI8hD,EAAQ,SAAe9gE,GACzB,IAAIuqC,EAAYvrB,EAAOhf,GAAG6tC,WAAW,GAErC,GAAIm3B,GAAiBz6B,GAAY,CAC/B,IAAIy2B,EAAagE,GAAiBz6B,GAAWt1B,KAAI,SAAU42B,GACzD,IAAIC,EAAIumB,EAAKnyD,KAAK08D,kBAAkB/wB,GACpC,OAAO,IAAIivB,GAAUzI,EAAKnyD,KAAM4rC,EAAEa,GAAI,CAACd,GAAI7sB,EAAOhf,GAAG4nC,aAEvD5oB,EAAO6tC,OAAO1tD,MAAM6f,EAAQ,CAAChf,EAAG,GAAGijB,OAAO+9C,MAMrChhE,EAAIgf,EAAOngB,OAAS,EAAGmB,GAAK,EAAGA,IACtC8gE,EAAM9gE,IAIHmlE,EAjDmC,CAkD1C/S,IAAgBwS,GAAS/R,eAAiB,cAAegS,IAE3D,SAASY,GAAY79C,GACnB,OAAOq9C,GAAO/mE,IAAI0pB,EAAMimB,WAAW,IAGrC,IAAI63B,GAAU,SAASA,EAAQ5R,EAAUsN,EAAcC,GACrDxrD,EAAexX,KAAMqnE,GACrBrnE,KAAKy1D,SAAWA,EAChBz1D,KAAK+iE,aAAeA,EACpB/iE,KAAKgjE,SAAWA,GAGlB,SAAS+D,GAAiBllE,EAAM8e,GAC9B,IAAIqiD,EAAW,EAEN1wD,EAAYu0D,GAAe1M,MAAMx5C,EAAO/J,IAAIwwD,KAAe70D,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAA9G,IAAiHH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CAClL,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAGZ,IAAIwa,EAAQ1H,EACR6G,EAAQa,EAAM,GACdZ,EAAMY,EAAM,GACZulD,EAAOvlD,EAAM,KACf0oD,EAEF,IAAK,IAAIrhE,EAAI8X,EAAO9X,GAAK+X,EAAK/X,IAC5Bgf,EAAOhf,GAAGo7D,WAAa,IAAIsK,GAAQX,GAAaU,GAAYzmD,EAAOhf,KAAMk+D,EAAK,GAAImD,GAMpF,IAFA,IAAIe,EAA8C,MAAtCpjD,EAAOlH,GAAOsjD,WAAWtH,SAAmB,EAAInxD,KAAKkmC,IAAI,EAAG9wB,EAAMD,GAErEY,EAAMZ,EAAOY,EAAMZ,EAAQsqD,EAAO1pD,IACzCsG,EAAOtG,GAAKkvB,SAAS06B,MAAO,GAKlC,SAAS+C,GAAuBnlE,EAAM8e,GAC/B,IAAIxG,EAAawG,EAAQvG,EAAY1Z,MAAM8R,QAAQ2H,GAAaM,EAAM,EAA3E,IAA8EN,EAAaC,EAAYD,EAAaA,EAAWzH,OAAOC,cAAe,CACnJ,IAAI+H,EAEJ,GAAIN,EAAW,CACb,GAAIK,GAAON,EAAW3Z,OAAQ,MAC9Bka,EAAQP,EAAWM,SACd,CAEL,IADAA,EAAMN,EAAWtH,QACTC,KAAM,MACd4H,EAAQD,EAAI3a,MAGF4a,EACNsiD,aAAc,GAIxB,SAASiK,GAAWplE,EAAM8e,GACnB,IAAIpG,EAAaoG,EAAQnG,EAAY9Z,MAAM8R,QAAQ+H,GAAa6C,EAAM,EAA3E,IAA8E7C,EAAaC,EAAYD,EAAaA,EAAW7H,OAAOC,cAAe,CACnJ,IAAI0K,EAEJ,GAAI7C,EAAW,CACb,GAAI4C,GAAO7C,EAAW/Z,OAAQ,MAC9B6c,EAAQ9C,EAAW6C,SACd,CAEL,IADAA,EAAM7C,EAAW1H,QACTC,KAAM,MACduK,EAAQD,EAAItd,MAGd,IAAIypB,EAAQlM,EAERkM,EAAMyzC,aAAezzC,EAAMggB,SAAS06B,OAEtC16C,EAAMwzC,WAAWtH,SAAW,MAKlC,SAASyR,GAAWrlE,EAAM8e,GACnB,IAAIzD,EAAayD,EAAQxD,EAAYzc,MAAM8R,QAAQ0K,GAAaM,EAAM,EAA3E,IAA8EN,EAAaC,EAAYD,EAAaA,EAAWxK,OAAOC,cAAe,CACnJ,IAAI8K,EAEJ,GAAIN,EAAW,CACb,GAAIK,GAAON,EAAW1c,OAAQ,MAC9Bid,EAAQP,EAAWM,SACd,CAEL,IADAA,EAAMN,EAAWrK,QACTC,KAAM,MACd2K,EAAQD,EAAI1d,MAGd,IAAIypB,EAAQ9L,EAER8L,EAAMyzC,cAERzzC,EAAMwzC,WAAWtH,SAAW,SAKlC,SAAS0R,GAAQtlE,EAAM8e,GAGrB,IAFA,IAAI6+C,EAAe39D,EAAK08D,kBAAkB,MAAQjwB,GAEzC70B,EAAQ,EAAGC,EAAM4tD,GAAe3mD,EAAQ,GAAIlH,EAAQkH,EAAOngB,OAAqBkZ,EAAM4tD,GAAe3mD,EAAlClH,EAAQC,GAA0C,CAC5H,IAAI/X,OAAI,EACJ2iE,OAAI,EACJV,EAAOjjD,EAAOlH,GAAOsjD,WACrBr5D,EAAOkgE,EAAKb,aAEhB,GAAa,8BAATr/D,GAAiD,qBAATA,GAAwC,mBAATA,EAA3E,CAKA,GAAa,mBAATA,GAA6B87D,EAAc,CAC7C,IAAI/xB,EAAI,IAAIgvB,GAAU56D,EAAM29D,EAAc,CAAC,OAG3C,IAFA/xB,EAAEsvB,WAAa6G,EAEVjiE,EAAI8X,EAAO9X,EAAI+X,GAAyC,MAAlCiH,EAAOhf,GAAGo7D,WAAWtH,SAAkB9zD,KAElEgf,EAAO6tC,SAAS7sD,EAAG,EAAG8rC,GACtB/zB,IAIF,GAAsB,MAAlBkqD,EAAKnO,UAAoB/7C,EAAMD,EAAQ,EAEzC,IAAK9X,EAAI8X,EAAQ,EAAG9X,EAAI+X,EAAK/X,IAG3B,GAAIu0D,GAFJ0N,EAAOjjD,EAAOhf,GAAGo7D,aAEGwK,GAAS5mD,EAAOhf,IAAK,CAGnC4lE,GAAS5mD,EAAOhf,KAClBA,IAGFgf,EAAO6tC,OAAO1tD,MAAM6f,EAAQ,CAAClH,EAAO,GAAGmL,OAAOjE,EAAO6tC,OAAO/0C,EAAQ,EAAG9X,EAAI8X,GAAQ,CAACkH,EAAOhf,MAC3F,MAMN,IAAKA,EAAI8X,EAAO6qD,EAAI5qD,EAAK/X,EAAI+X,EAAK/X,IAG5Bu0D,GAFJ0N,EAAOjjD,EAAOhf,GAAGo7D,aAEGwK,GAAS5mD,EAAOhf,IAGlC2iE,EAAIiD,GAAS5mD,EAAOhf,IAAMA,EAAI,EAAIA,GACN,SAAlBiiE,EAAKnO,UAAyC,UAAlBmO,EAAKnO,WAAyB6O,EAAI3iE,GACxEgf,EAAO6tC,OAAO1tD,MAAM6f,EAAQ,CAAC2jD,EAAG,EAAG3jD,EAAOhf,IAAIijB,OAAOjE,EAAO6tC,OAAO8V,EAAG3iE,EAAI2iE,OAMlF,SAASgD,GAAe3mD,EAAQlH,GAC9B,GAAIA,GAASkH,EAAOngB,OAAQ,OAAOiZ,EAGnC,IAFA,IAAIupD,EAAWriD,EAAOlH,GAAOsjD,WAAWiG,WAE/BvpD,EAAQkH,EAAOngB,QAAUmgB,EAAOlH,GAAOsjD,WAAWiG,WAAaA,IAExE,OAAOvpD,EAGT,SAAS8tD,GAASh+C,GAChB,MAAqC,MAA9BA,EAAMwzC,WAAWtH,WAAqBlsC,EAAMqzC,UAGrD,SAAS1G,GAAO0N,GACd,MAAyB,MAAlBA,EAAKnO,UAAsC,OAAlBmO,EAAKnO,SAGvC,IAAI+R,GAAU,CACZ7uB,KAAMsc,GAENwS,KAAMxS,GAENpc,KAAMoc,GAEN,OAAQA,GAERyS,KAAMzS,GAENvb,KAAMub,GAENpb,KAAMob,GAEN/a,KAAM+a,GAEN0S,KAAMvK,GAENwK,KAAM3F,GAEN4F,KAAM5F,GAEN6F,KAAM7F,GAEN8F,KAAM9F,GAEN+F,KAAM/F,GAENgG,KAAMhG,GAENiG,KAAMjG,GAENkG,KAAMlG,GAENmG,KAAMnG,GAENoG,KAAMpG,GAENqG,KAAMrG,GAENsG,KAAMtG,GAENuG,KAAMvG,GAENwG,KAAMxG,GAENyG,KAAMzG,GAEN0G,KAAM1G,GAEN2G,KAAM3G,GAEN4G,KAAM5G,GAEN6G,KAAM7G,GAEN8G,KAAMjC,GAENkC,KAAMlC,GAENmC,KAAMnC,GAENoC,KAAMpC,GAENqC,KAAMrC,GAENsC,KAAMtC,GAENuC,KAAMvC,GAENwC,KAAMxC,GAENyC,KAAMzC,GAEN0C,KAAM1C,GAEN2C,KAAM3C,GAEN4C,KAAM5C,GAEN6C,KAAM7C,GAEN8C,KAAM9C,GAEN9tB,KAAM8tB,GAEN+C,KAAM/C,GAENgD,KAAMhD,GAENiD,KAAMjD,GAENkD,KAAMlD,GAENmD,KAAMnD,GAINoD,KAAMpD,GAENqD,KAAMrD,GAINsD,KAAMtD,GAINuD,KAAMvD,GAENwD,KAAMxD,GAENyD,KAAMzD,GAEN0D,KAAM1D,GAEN2D,KAAM3D,GAEN4D,KAAM5D,GAEN6D,KAAM7D,GAEN8D,KAAM9D,GAEN+D,KAAM/D,GAENgE,KAAMhE,GAENiE,KAAMjE,GAENkE,KAAMlE,GAENmE,KAAMnE,GAENoE,KAAMpE,GAENqE,KAAMrE,GAENsE,KAAMtE,GAENuE,KAAMtX,GAENuX,KAAMvX,IAm2CR,IAn0CA,IAAI0P,GAAgB,SAAU8H,GAG5B,SAAS9H,IAEP,OADAjsD,EAAexX,KAAMyjE,GACdhrD,GAA0BzY,KAAMurE,EAAazqE,MAAMd,KAAMO,YA+OlE,OAnPA6X,GAASqrD,EAAe8H,GAOxB9H,EAAclsD,UAAU4hD,YAAc,SAAqBn5C,EAAY3Z,GACrE,IAAIkW,EAASvc,KAEb,OAAQggB,GACN,KAAK,EAGD,IAAI4G,EAAQ5mB,KAAK85D,cAAczzD,EAAM8b,UAErC,IAAe,IAAXyE,EACF,OAAO,EAGT,IAAI2C,EAAQvpB,KAAKw4D,cAAcM,IAE/B,OAAQzyD,EAAMG,SACZ,KAAK,EACH+iB,EAAM+kB,GAAK/kB,EAAM+kB,GAAKjoC,EAAM8xB,aAAe,MAC3C,MAEF,KAAK,EACH5O,EAAM+kB,GAAKjoC,EAAM+xB,WAAWv4B,IAAI+mB,GAIpC,OAAO,EAGX,KAAK,EAGD,IAAI4kD,EAASxrE,KAAK85D,cAAczzD,EAAM8b,UAEtC,IAAgB,IAAZqpD,EAAe,CACjB,IAAIpb,EAEAgK,EAAW/zD,EAAMiyB,UAAUz4B,IAAI2rE,GACnCxrE,KAAKw4D,cAAcM,IAAIxqB,GAAK8rB,EAAS,GACrCp6D,KAAKw4D,cAAcM,IAAI6D,kBAAoB,EAC3C,IAAIpzB,EAAWvpC,KAAKw4D,cAAcM,IAAIvvB,SAClCkiC,EAAWzrE,KAAKw4D,cAAcM,IAC9B4S,EAActR,EAASpvB,MAAM,GAAGp0B,KAAI,SAAU8S,EAAK/nB,GACrD,IAAI4nB,EAAQ,IAAIkzC,GAAUlgD,EAAO1a,KAAM6nB,OAAKvf,EAAWo/B,GAMvD,OALAhgB,EAAMwzC,WAAa0O,EAAS1O,WAC5BxzC,EAAMqzC,UAAY6O,EAAS7O,UAC3BrzC,EAAMozC,kBAAoBh7D,EAAI,EAC9B4nB,EAAMyzC,aAAc,EACpBzzC,EAAM0zC,cAAe,EACd1zC,KAKT,OAFC6mC,EAAUpwD,KAAK2gB,QAAQ6tC,OAAO1tD,MAAMsvD,EAAS,CAACpwD,KAAKw4D,cAAc5xC,MAAQ,EAAG,GAAGhC,OAAO8mD,KAEhF,EAGT,OAAO,EAGX,KAAK,EAGD,IAAIC,EAAU3rE,KAAK85D,cAAczzD,EAAM8b,UAEvC,IAAiB,IAAbwpD,EAAgB,CAIlB,OADA3rE,KAAKw4D,cAAcM,IAAIxqB,GAAKjoC,EAAMkyB,aAAa14B,IAAI8rE,GAFlC,IAGV,EAGT,OAAO,EAGX,KAAK,EAGD,IAAIC,EAAU5rE,KAAK85D,cAAczzD,EAAM8b,UAEvC,IAAiB,IAAbypD,EACF,OAAO,EAGJ,IAAIt5D,EAAYjM,EAAMmyB,aAAa34B,IAAI+rE,GAAUr5D,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAAhG,IAAmGH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CACpK,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAGZ,IAAI+rE,EAAWj5D,EACXynD,EAAUr6D,KAAKw6D,qBAAqB,EAAGqR,EAAS7/C,YAEpD,GAAKquC,EAAL,CAIA,IAAIyR,EAAY9rE,KAAKw4D,cAAcM,IAE/BiT,EAAaD,EAAUt8B,WAAWxE,QAE7B7wB,EAAakgD,EAASjgD,EAAY1Z,MAAM8R,QAAQ2H,GAAaE,EAAM,EAA5E,IAA+EF,EAAaC,EAAYD,EAAaA,EAAWzH,OAAOC,cAAe,CACpJ,IAAI2H,EAEJ,GAAIF,EAAW,CACb,GAAIC,GAAOF,EAAW3Z,OAAQ,MAC9B8Z,EAAQH,EAAWE,SACd,CAEL,IADAA,EAAMF,EAAWtH,QACTC,KAAM,MACdwH,EAAQD,EAAIva,MAGd,IAAIksE,EAAU1xD,EACdyxD,EAAW7qE,KAAKJ,MAAMirE,EAAY/rE,KAAK2gB,OAAOqrD,GAASx8B,YAIzD,IAAIy8B,EAAgB,IAAIxP,GAAUz8D,KAAK6B,KAAMgqE,EAAStiD,MAAOwiD,EAAYD,EAAUviC,SAAUuiC,EAAUhjD,aACvGmjD,EAAclP,WAAa+O,EAAU/O,WACrCkP,EAAcrP,WAAY,EAC1BqP,EAAcjP,aAAc,EA2B5B,IAFA,IAAIkP,EAAiBJ,EAAU38B,OAEtBxtC,EAAI,EAAGA,EAAI04D,EAAQ75D,QAAU0rE,EAAgBvqE,IACpDuqE,EAAiBlsE,KAAK2gB,OAAO05C,EAAQ14D,IAAIwtC,OAG3C88B,EAAc9U,WAAa+U,EAAiB,KAAOlsE,KAAKm3D,aACxD,IAAIgV,EAAYL,EAAU3U,WACtBiV,EAAeN,EAAUt8B,WAAWhvC,OACpC6rE,EAAWD,EACX7V,EAAMv2D,KAAKw4D,cAAc5xC,MAAQ,EAG5BrM,EAAa8/C,EAAS7/C,EAAY9Z,MAAM8R,QAAQ+H,GAAaE,EAAM,EAA5E,IAA+EF,EAAaC,EAAYD,EAAaA,EAAW7H,OAAOC,cAAe,CACpJ,IAAI+H,EAEJ,GAAIF,EAAW,CACb,GAAIC,GAAOF,EAAW/Z,OAAQ,MAC9Bka,EAAQH,EAAWE,SACd,CAEL,IADAA,EAAMF,EAAW1H,QACTC,KAAM,MACd4H,EAAQD,EAAI3a,MAGd,IAAIwsE,EAAa5xD,EAEjB,GAAIwxD,EACF3V,EAAM+V,OAEN,KAAO/V,EAAM+V,GAAY,CACvB,IAAI3P,EAAoB0P,EAAWD,EAAe9nE,KAAKkmC,IAAIxqC,KAAK2gB,OAAO41C,GAAKoG,mBAAqB,EAAGyP,GACpGpsE,KAAK2gB,OAAO41C,GAAKY,WAAa8U,EAAc9U,WAC5Cn3D,KAAK2gB,OAAO41C,GAAKoG,kBAAoBA,EACrCpG,IAIJ4V,EAAYnsE,KAAK2gB,OAAO41C,GAAKY,WAE7BkV,GADAD,EAAepsE,KAAK2gB,OAAO41C,GAAK/mB,WAAWhvC,OAE3C+1D,IAIF,GAAI4V,IAAcD,EAChB,IAAK,IAAI9uD,EAAMm5C,EAAKn5C,EAAMpd,KAAK2gB,OAAOngB,QAChCR,KAAK2gB,OAAOvD,GAAK+5C,aAAegV,EADQ/uD,IAAO,CAE7Cu/C,EAAoB0P,EAAWD,EAAe9nE,KAAKkmC,IAAIxqC,KAAK2gB,OAAOvD,GAAKu/C,mBAAqB,EAAGyP,GACpGpsE,KAAK2gB,OAAOvD,GAAKu/C,kBAAoBA,EAQ3C,IAAK,IAAIn/C,EAAM68C,EAAQ75D,OAAS,EAAGgd,GAAO,EAAGA,IAC3Cxd,KAAK2gB,OAAO6tC,OAAO6L,EAAQ78C,GAAM,GAInC,OADAxd,KAAK2gB,OAAO3gB,KAAKw4D,cAAc5xC,OAASqlD,GACjC,GAGT,OAAO,EAGX,KAAK,EAEH,OAAOjsE,KAAKk7D,aAAa70D,GAE3B,KAAK,EAEH,OAAOrG,KAAK87D,qBAAqBz1D,GAEnC,KAAK,EAEH,OAAOrG,KAAKm5D,YAAY9yD,EAAM2Z,WAAY3Z,EAAMkxB,WAElD,QACE,MAAM,IAAIj2B,MAAM,mBAAqB0e,EAAa,uBAIjDyjD,EApPW,CAqPlB9M,IAEE4V,GAAgB,SAAUhB,GAG5B,SAASgB,IAEP,OADA/0D,EAAexX,KAAMusE,GACd9zD,GAA0BzY,KAAMurE,EAAazqE,MAAMd,KAAMO,YA4YlE,OAhZA6X,GAASm0D,EAAehB,GAOxBgB,EAAch1D,UAAUi1D,mBAAqB,SAA4B/qD,EAAe3hB,GACtF,IAAI+vC,EAAW7vC,KAAKquC,UAAUruC,KAAKw4D,cAAc/B,UAAUh1C,IAErC,MAAlB3hB,EAAM6zB,WACRkc,EAASlc,UAAY7zB,EAAM6zB,UAGP,MAAlB7zB,EAAM8zB,WACRic,EAASjc,UAAY9zB,EAAM8zB,UAGL,MAApB9zB,EAAM2zB,aACRoc,EAASrkB,SAAW1rB,EAAM2zB,YAGJ,MAApB3zB,EAAM4zB,aACRmc,EAASpkB,SAAW3rB,EAAM4zB,YAI5B,IAAI+4C,EAAqBzsE,KAAK6B,KAAKk1D,oBAC/B2V,EAAiB1sE,KAAK6B,KAAKoxB,MAAQjzB,KAAK6B,KAAKoxB,KAAKzK,mBAElDikD,GAAsBC,IACpB5sE,EAAM+zB,aACRgc,EAASrkB,SAAWihD,EAAmBE,SAASD,EAAgB5sE,EAAM+zB,WAAWvS,EAAGxhB,EAAM+zB,WAAW3Y,IAGnGpb,EAAMg0B,aACR+b,EAASpkB,SAAWghD,EAAmBE,SAASD,EAAgB5sE,EAAMg0B,WAAWxS,EAAGxhB,EAAMg0B,WAAW5Y,IAGnGpb,EAAMi0B,aACR8b,EAASlc,UAAY84C,EAAmBE,SAASD,EAAgB5sE,EAAMi0B,WAAWzS,EAAGxhB,EAAMi0B,WAAW7Y,IAGpGpb,EAAMk0B,aACR6b,EAASjc,UAAY64C,EAAmBE,SAASD,EAAgB5sE,EAAMk0B,WAAW1S,EAAGxhB,EAAMk0B,WAAW9Y,MAM5GqxD,EAAch1D,UAAU4hD,YAAc,SAAqBn5C,EAAY3Z,GACrE,OAAQ2Z,GACN,KAAK,EAGD,IAAI4G,EAAQ5mB,KAAK85D,cAAczzD,EAAM8b,UAErC,IAAe,IAAXyE,EACF,OAAO,EAGT,OAAQvgB,EAAMG,SACZ,KAAK,EACHxG,KAAKwsE,mBAAmB,EAAGnmE,EAAMvG,OACjC,MAEF,KAAK,EACHE,KAAKwsE,mBAAmB,EAAGnmE,EAAM2vB,OAAOn2B,IAAI+mB,IAIhD,OAAO,EAGX,KAAK,EAGD,IAAIgmD,EAAY5sE,KAAKw4D,cAAclC,OAEnC,IAAKsW,EACH,OAAO,EAGT,IAAIpB,EAASxrE,KAAK85D,cAAczzD,EAAM8b,UAEtC,IAAgB,IAAZqpD,EACF,OAAO,EAGT,OAAQnlE,EAAMG,SACZ,KAAK,EAEH,IAES8L,EAFIjM,EAAM+vB,SAASv2B,IAAI2rE,GAEHj5D,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAAvE,IAA0EH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CAC3I,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAGZ,IAAI+sE,EAAQj6D,EAEZ,GAAIi6D,EAAMv4C,cAAgBs4C,EAAUt+B,GAGlC,OAFAtuC,KAAKwsE,mBAAmB,EAAGK,EAAMt4C,QACjCv0B,KAAKwsE,mBAAmB,EAAGK,EAAMr4C,SAC1B,EAIX,OAAO,EAET,KAAK,EAEH,IAAIs4C,EAAS9sE,KAAK06D,WAAW16D,KAAKw4D,cAAcM,IAAIxqB,GAAIjoC,EAAMgwB,WAC1D02C,EAAS/sE,KAAK06D,WAAWkS,EAAUt+B,GAAIjoC,EAAMiwB,WAEjD,IAAgB,IAAZw2C,IAA6B,IAAZC,EACnB,OAAO,EAGT,IAAIp+B,EAAOtoC,EAAMowB,aAAa52B,IAAIitE,GAAQjtE,IAAIktE,GAG9C,OAFA/sE,KAAKwsE,mBAAmB,EAAG79B,EAAKpa,QAChCv0B,KAAKwsE,mBAAmB,EAAG79B,EAAKna,SACzB,EAIf,KAAK,EAGD,IAAIw4C,EAAYhtE,KAAKw4D,cAAc/B,YAC/BwW,EAAajtE,KAAK2gB,OAAOqsD,GAE7B,IAAKC,EACH,OAAO,EAGT,IAAIC,EAAY7mE,EAAMswB,iBAAiB32B,KAAK85D,cAAczzD,EAAM8b,WAEhE,IAAK+qD,IAAcA,EAAU/3C,WAC3B,OAAO,EAGT,IAAIg4C,EAAa9mE,EAAMswB,iBAAiB32B,KAAK85D,cAAczzD,EAAM8b,SAAU8qD,EAAW3+B,KAEtF,IAAK6+B,IAAeA,EAAWj4C,YAC7B,OAAO,EAGT,IAAIkF,EAAQp6B,KAAKotE,UAAUD,EAAWj4C,aAClC04B,EAAO5tD,KAAKotE,UAAUF,EAAU/3C,YAChC2jC,EAAM94D,KAAKquC,UAAUruC,KAAKw4D,cAAc5xC,OACxC/T,EAAO7S,KAAKquC,UAAU2+B,GAE1B,OAAQhtE,KAAKm6C,WACX,IAAK,MACH2e,EAAInlC,SAAWi6B,EAAK7gB,EAAI+rB,EAAIttC,QAC5B,IAAIk3C,EAAItoC,EAAM2S,EAAIl6B,EAAK2Y,QACvB3Y,EAAK8gB,UAAY+uC,EACjB7vD,EAAK2Y,SAAWk3C,EAChB,MAEF,IAAK,MACHA,EAAI9U,EAAK7gB,EAAI+rB,EAAIttC,QACjBstC,EAAInlC,UAAY+uC,EAChB5J,EAAIttC,SAAWk3C,EACf7vD,EAAK8gB,SAAWyG,EAAM2S,EAAIl6B,EAAK2Y,QAYnC,OARIxrB,KAAKw4D,cAAcxxD,MAAMqmE,aAC3BrtE,KAAKw4D,cAAcM,IAAI+D,kBAAoBmQ,EAC3ClU,EAAIrtC,QAAU2O,EAAMmW,EAAIqd,EAAKrd,IAE7B08B,EAAWpQ,kBAAoB78D,KAAKw4D,cAAc5xC,MAClDkyC,EAAIrtC,QAAUmiC,EAAKrd,EAAInW,EAAMmW,IAGxB,EAGX,KAAK,EAGD,IAAIvI,EAAYhoC,KAAK85D,cAAczzD,EAAMuwB,cAEzC,IAAmB,IAAfoR,EACF,OAAO,EAMT,IAFA,IAAIslC,EAAiBttE,KAAKw4D,cAAc5xC,QAE/B0mD,GAAkB,IAAMttE,KAAK2gB,OAAO2sD,GAAgBn+B,QAAUnvC,KAAK2gB,OAAO2sD,GAAgB3Q,kBAAoB,KAEvH,GAAI2Q,EAAiB,EACnB,OAAO,EAGT,IAAIC,EAAYvtE,KAAK85D,cAAczzD,EAAMwwB,aAAc72B,KAAK2gB,OAAO2sD,GAAgBh/B,IAEnF,IAAmB,IAAfi/B,EACF,OAAO,EAGT,IAAIC,EAAannE,EAAMywB,UAAUkR,GAC7BylC,EAAapnE,EAAM0wB,UAAUw2C,GAAWC,EAAWzsD,OAEvD,OADA/gB,KAAK0tE,YAAYF,EAAYC,EAAYH,IAClC,EAGX,KAAK,EAGD,IAAIK,EAAa3tE,KAAK85D,cAAczzD,EAAMuwB,cAE1C,IAAoB,IAAhB+2C,EACF,OAAO,EAMT,IAFA,IAAIC,EAAkB5tE,KAAKw4D,cAAc5xC,QAEhCgnD,GAAmB,GAAK5tE,KAAK2gB,OAAOitD,GAAiBz+B,SAE9D,GAAIy+B,EAAkB,EACpB,OAAO,EAGT,IAAIC,EAAW7tE,KAAK85D,cAAczzD,EAAM2wB,iBAAkBh3B,KAAK2gB,OAAOitD,GAAiBt/B,IAEvF,IAAkB,IAAdu/B,EACF,OAAO,EAGT,IAAIC,EAAYznE,EAAM4wB,cAAc42C,GAChCE,EAAY/tE,KAAKw4D,cAAcM,IAC/BkV,EAAWhuE,KAAK2gB,OAAOitD,GACvBK,EAAYD,EAAS7W,YAAc6W,EAAS7W,aAAe4W,EAAU5W,YAAc4W,EAAUpR,kBAAoB,EAAIr4D,KAAKkmC,IAAIujC,EAAUpR,kBAAmBqR,EAASx+B,WAAWhvC,QAAU,EAAIwtE,EAASx+B,WAAWhvC,OAAS,EAC1N0tE,EAAc7nE,EAAMywB,UAAU62C,GAC9BQ,EAAcL,EAAUG,GAAWC,EAAYntD,OAEnD,OADA/gB,KAAK0tE,YAAYQ,EAAaC,EAAaP,IACpC,EAGX,KAAK,EAGD,IAAIQ,EAAapuE,KAAK85D,cAAczzD,EAAM6wB,eAE1C,IAAoB,IAAhBk3C,EACF,OAAO,EAIT,IAAIC,EAAYruE,KAAKw4D,cAAc/B,WAAW,GAC1CtB,EAAOn1D,KAAK2gB,OAAO0tD,GAEvB,IAAKlZ,IAASA,EAAKhmB,OACjB,OAAO,EAGT,IAAIm/B,EAAOtuE,KAAKw4D,cAAcM,IAE1ByV,GAAO,EAkBX,GAhBID,EAAKnX,aAAehC,EAAKgC,WACtBmX,EAAKnX,WAGCmX,EAAK3R,oBAAsBxH,EAAKwH,oBAEzC4R,GAAO,GAHPA,GAAO,GAQLD,EAAKnX,aAAemX,EAAK3R,mBAAqBxH,EAAKgC,aAAehC,EAAKwH,qBACzE4R,GAAO,IAINA,EACH,OAAO,EAGT,IAAIC,EAAaxuE,KAAK85D,cAAczzD,EAAM8wB,cAAeg+B,EAAK7mB,IAE9D,IAAoB,IAAhBkgC,EACF,OAAO,EAGT,IAAIC,EAAepoE,EAAM+wB,WAAWg3C,GAChCM,EAAeroE,EAAMgxB,WAAWm3C,GAAYC,EAAa1tD,OAE7D,OADA/gB,KAAK0tE,YAAYe,EAAcC,EAAcL,IACtC,EAGX,KAAK,EAEH,OAAOruE,KAAKk7D,aAAa70D,GAE3B,KAAK,EAEH,OAAOrG,KAAK87D,qBAAqBz1D,GAEnC,KAAK,EAEH,OAAOrG,KAAKm5D,YAAY9yD,EAAM2Z,WAAY3Z,EAAMkxB,WAElD,QACE,MAAM,IAAIj2B,MAAM,2BAA6B0e,KAInDusD,EAAch1D,UAAUm2D,YAAc,SAAqBF,EAAYC,EAAYH,GACjF,IAAIx8C,EAAa9wB,KAAKotE,UAAUK,GAC5BkB,EAAa3uE,KAAKotE,UAAUI,EAAWn4C,YAEvCu5C,GADU5uE,KAAKquC,UAAUi/B,GACfttE,KAAKquC,UAAUruC,KAAKw4D,cAAc5xC,QAChDgoD,EAAQpjD,QAAUsF,EAAWic,EAAI4hC,EAAW5hC,EAC5C6hC,EAAQnjD,QAAUqF,EAAWyf,EAAIo+B,EAAWp+B,EAC5CvwC,KAAKw4D,cAAcM,IAAIgE,eAAiBwQ,GAG1Cf,EAAch1D,UAAU61D,UAAY,SAAmByB,GAErD,IAAI9hC,EAAI8hC,EAAOj6C,YACX2b,EAAIs+B,EAAOh6C,YAEX43C,EAAqBzsE,KAAK6B,KAAKk1D,oBAC/B2V,EAAiB1sE,KAAK6B,KAAKoxB,MAAQjzB,KAAK6B,KAAKoxB,KAAKzK,mBAYtD,OAVIikD,GAAsBC,IACpBmC,EAAO95C,eACTgY,GAAK0/B,EAAmBE,SAASD,EAAgBmC,EAAO95C,aAAazT,EAAGutD,EAAO95C,aAAa7Z,IAG1F2zD,EAAO75C,eACTub,GAAKk8B,EAAmBE,SAASD,EAAgBmC,EAAO75C,aAAa1T,EAAGutD,EAAO75C,aAAa9Z,KAIzF,CACL6xB,EAAGA,EACHwD,EAAGA,IAIPg8B,EAAch1D,UAAUg8C,cAAgB,SAAuBe,EAAc3zC,EAAQ23C,GACnFiT,EAAah0D,UAAUg8C,cAAcxzD,KAAKC,KAAMs0D,EAAc3zC,EAAQ23C,GAEtE,IAAK,IAAI32D,EAAI,EAAGA,EAAI3B,KAAK2gB,OAAOngB,OAAQmB,IACtC3B,KAAK8uE,qBAAqBntE,GAG5B3B,KAAK+uE,qBAGPxC,EAAch1D,UAAUu3D,qBAAuB,SAA8BntE,GAC3E,IAAI4nB,EAAQvpB,KAAK2gB,OAAOhf,GAExB,GAA+B,MAA3B4nB,EAAMszC,kBAA2B,CACnC,IAAIyH,EAAI/6C,EAAMszC,kBACdtzC,EAAMszC,kBAAoB,KAC1B78D,KAAK8uE,qBAAqBxK,GAC1BtkE,KAAKquC,UAAU1sC,GAAG8pB,SAAWzrB,KAAKquC,UAAUi2B,GAAG74C,UAInD8gD,EAAch1D,UAAUw3D,kBAAoB,WAC1C,IAAK,IAAIptE,EAAI,EAAGA,EAAI3B,KAAK2gB,OAAOngB,OAAQmB,IAAK,CAC3C,IAAI4nB,EAAQvpB,KAAK2gB,OAAOhf,GAExB,GAA4B,MAAxB4nB,EAAMuzC,eAAwB,CAChC,IAAIwH,EAAI/6C,EAAMuzC,eAId,GAHA98D,KAAKquC,UAAU1sC,GAAG6pB,SAAWxrB,KAAKquC,UAAUi2B,GAAG94C,QAC/CxrB,KAAKquC,UAAU1sC,GAAG8pB,SAAWzrB,KAAKquC,UAAUi2B,GAAG74C,QAExB,QAAnBzrB,KAAKm6C,UACP,IAAK,IAAIp9B,EAAIunD,EAAGvnD,EAAIpb,EAAGob,IACrB/c,KAAKquC,UAAU1sC,GAAG6pB,SAAWxrB,KAAKquC,UAAUtxB,GAAG4W,SAC/C3zB,KAAKquC,UAAU1sC,GAAG8pB,SAAWzrB,KAAKquC,UAAUtxB,GAAG6W,cAGjD,IAAK,IAAIo7C,EAAK1K,EAAI,EAAG0K,EAAKrtE,EAAI,EAAGqtE,IAC/BhvE,KAAKquC,UAAU1sC,GAAG6pB,SAAWxrB,KAAKquC,UAAU2gC,GAAIr7C,SAChD3zB,KAAKquC,UAAU1sC,GAAG8pB,SAAWzrB,KAAKquC,UAAU2gC,GAAIp7C,YAOnD24C,EAjZW,CAkZlB5V,IAEEsY,GAAiB,WACnB,SAASA,EAAeptE,GACtB2V,EAAexX,KAAMivE,GACrBjvE,KAAK6B,KAAOA,EACZ7B,KAAKg0D,KAAO,KACZh0D,KAAKyjE,cAAgB,KACrBzjE,KAAKusE,cAAgB,KACrBvsE,KAAK0xD,kBAAmB,EAEpB7vD,EAAK62B,OACP14B,KAAKyjE,cAAgB,IAAIA,GAAc5hE,EAAMA,EAAK62B,OAGhD72B,EAAK21B,OACPx3B,KAAKusE,cAAgB,IAAIA,GAAc1qE,EAAMA,EAAK21B,OAsFtD,OAlFAy3C,EAAe13D,UAAU23D,MAAQ,SAAevd,GAE9C,IAAIzyC,EAAS,KAgBb,IAAK,IAAIvf,KAdLK,KAAKusE,gBACPrtD,EAASlf,KAAKusE,cAAcrV,aAAavF,EAASzyC,OAAQyyC,EAAS5tD,SAAU4tD,EAASxX,YAGpFn6C,KAAKyjE,gBACPvkD,EAASlf,KAAKyjE,cAAcvM,aAAavF,EAASzyC,OAAQyyC,EAAS5tD,SAAU4tD,EAASxX,YAKxFn6C,KAAKmvE,OAvsBT,SAAgBjwD,GACTxe,MAAM8R,QAAQ0M,KACjBA,EAAS,CAACA,IAGP,IAAI5M,EAAY4M,EAAQ3M,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAAvE,IAA0EH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CAC3I,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAGZ,IACIqvE,EAAS3H,GADL50D,GAGR,GAAIu8D,EACF,OAAOA,EAIX,OAAOpb,GA8qBSqb,CAAOlwD,GACrBlf,KAAKg0D,KAAO,IAAIvB,GAAYzyD,KAAK6B,KAAMqd,EAAQyyC,EAASxX,WACxDn6C,KAAKmvE,OAAOnb,KAAKh0D,KAAKg0D,KAAMrC,EAAShxC,OAAQgxC,EAASpoB,UAEtCvpC,KAAKg0D,KAAKpB,YACxBjB,EAASpoB,SAAS5pC,IAAO,GAI7BsvE,EAAe13D,UAAU6gB,WAAa,SAAoBu5B,GACpD3xD,KAAKyjE,eACPzjE,KAAKg0D,KAAK5hD,QAAQpS,KAAKyjE,cAAe9R,EAAShxC,SAInDsuD,EAAe13D,UAAUs4B,SAAW,SAAkB8hB,GAmBpD,MAlBmC,gBAA/B3xD,KAAKmvE,OAAO3a,gBACdx0D,KAAKqvE,iBAAiB1d,GAGpB3xD,KAAKusE,eACPvsE,KAAKg0D,KAAK5hD,QAAQpS,KAAKusE,cAAe5a,EAAShxC,OAAQgxC,EAAStjB,WAG/B,eAA/BruC,KAAKmvE,OAAO3a,gBACdx0D,KAAKqvE,iBAAiB1d,GAIG,QAAvBA,EAASxX,YACXwX,EAAShxC,OAAOsqB,UAChB0mB,EAAStjB,UAAUpD,WAGdjrC,KAAKusE,eAAiBvsE,KAAKusE,cAAchjC,UAGlD0lC,EAAe13D,UAAU83D,iBAAmB,SAA0B1d,GACpE,IAAK,IAAIhwD,EAAI,EAAGA,EAAIgwD,EAAShxC,OAAQhf,IAC/BgwD,EAAShxC,OAAOhf,GAAGwtC,SACrBd,UAAU1sC,GAAGgyB,SAAW,EACxB0a,UAAU1sC,GAAGiyB,SAAW,IAK9Bq7C,EAAe13D,UAAU+3D,QAAU,WACjCtvE,KAAKuvE,WAAa,KAClBvvE,KAAKg0D,KAAO,KACZh0D,KAAKmvE,OAAS,MAGhBF,EAAe13D,UAAUu6C,qBAAuB,SAA8B5yC,EAAQnb,GACpF,IAAIwlC,EAAW,GAYf,OAVIvpC,KAAKyjE,gBACPzjE,KAAKyjE,cAAcvM,aAAah4C,EAAQnb,GACxCwlC,EAASroC,KAAKJ,MAAMyoC,EAAUtpC,OAAOiyD,KAAKlyD,KAAKyjE,cAAcl6B,YAG3DvpC,KAAKusE,gBACPvsE,KAAKusE,cAAcrV,aAAah4C,EAAQnb,GACxCwlC,EAASroC,KAAKJ,MAAMyoC,EAAUtpC,OAAOiyD,KAAKlyD,KAAKusE,cAAchjC,YAGxDA,GAGF0lC,EApGY,GAuGjBO,GAAe,WACjB,SAASA,EAAa3tE,GACpB2V,EAAexX,KAAMwvE,GACrBxvE,KAAK6B,KAAOA,EACZ7B,KAAKyvE,oBAAsB,KAC3BzvE,KAAK0vE,cAAgB,KAGjB1vE,KAAK6B,KAAK4nC,KACZzpC,KAAKwjE,OAAS,IAAIhS,GAAgBxxD,KAAK6B,OAC9B7B,KAAK6B,KAAK62B,MAAQ14B,KAAK6B,KAAK21B,QACrCx3B,KAAKwjE,OAAS,IAAIyL,GAAejvE,KAAK6B,OA+P1C,OA3PA2tE,EAAaj4D,UAAUo4D,OAAS,SAAgBp+D,EAAQg4B,EAAUrqB,EAAQnb,EAAUs2C,GAClF,IAAIj+B,EAAQpc,KAGY,iBAAbupC,IACT8Q,EAAet2C,EACfA,EAAWmb,EACXA,EAASqqB,EACTA,EAAW,IAIC,MAAVrqB,IACFA,EAvlLN,SAAmB3N,GAIjB,IAHA,IAAIuL,EAAMvL,EAAO/Q,OACb+1D,EAAM,EAEHA,EAAMz5C,GAAK,CAChB,IAAI69B,EAAOppC,EAAOq+D,WAAWrZ,KAE7B,GAAI,OAAU5b,GAAQA,GAAQ,OAAU4b,EAAMz5C,EAAK,CACjD,IAAIjK,EAAOtB,EAAOq+D,WAAWrZ,GAEzB,OAAU1jD,GAAQA,GAAQ,QAC5B0jD,IACA5b,IAAgB,KAAPA,IAAiB,KAAc,KAAP9nC,GAAgB,OAIrD,IAAIg9D,EAAU,UAAQC,UAAUn1B,GAEhC,GAAgB,WAAZk1B,GAAoC,cAAZA,GAAuC,YAAZA,EACrD,OAAOp/B,GAAgBo/B,GAI3B,OAAOp/B,GAAgB+H,QAgkLVu3B,CAAUx+D,IAGrB,IAAIoP,EAAS3gB,KAAKgwE,gBAAgBz+D,GAC9BogD,EAAW,IAAIvX,GAASz5B,EAAQ4oB,EAAUrqB,EAAQnb,EAAUs2C,GAEhE,OAAsB,IAAlB15B,EAAOngB,QACTmxD,EAAStjB,UAAY,GACdsjB,IAIL3xD,KAAKwjE,QAAUxjE,KAAKwjE,OAAO0L,OAC7BlvE,KAAKwjE,OAAO0L,MAAMvd,GAIpB3xD,KAAKo4B,WAAWu5B,GAChB3xD,KAAK6vC,SAAS8hB,GACd3xD,KAAKiwE,sBAAsBte,EAAShxC,OAAQgxC,EAAStjB,WAEjDruC,KAAKwjE,QAAUxjE,KAAKwjE,OAAO8L,SAC7BtvE,KAAKwjE,OAAO8L,UAId3d,EAASrX,cAAgBqX,EAAShxC,OAAO/J,KAAI,SAAUs5D,GACrD,OAAOA,EAAUpnD,eAEnB6oC,EAAShxC,OAASgxC,EAAShxC,OAAO/J,KAAI,SAAUs5D,GAC9C,OAAO9zD,EAAMva,KAAKstD,SAAS+gB,EAAU5hC,GAAI4hC,EAAU1gC,eAE9CmiB,IAGT6d,EAAaj4D,UAAUy4D,gBAAkB,SAAyBz+D,GAOhE,IANA,IAAIoP,EAAS,GACT7D,EAAMvL,EAAO/Q,OACb+1D,EAAM,EACN9G,GAAQ,EACRpC,GAAS,EAENkJ,GAAOz5C,GAAK,CACjB,IAAI69B,EAAO,EACPw1B,EAAY,EACZrnD,EAAcytC,EAAM,EAExB,GAAIA,EAAMz5C,EAAK,CAIb,GAAI,QAFJ69B,EAAOppC,EAAOq+D,WAAWrZ,OAEH5b,GAAQ,OAAU4b,EAAMz5C,EAAK,CACjD,IAAIjK,EAAOtB,EAAOq+D,WAAWrZ,GAEzB,OAAU1jD,GAAQA,GAAQ,QAC5B0jD,IACA5b,IAAgB,KAAPA,IAAiB,KAAc,KAAP9nC,GAAgB,OAKrDs9D,EAAY,OAAUx1B,GAAQA,GAAQ,OAAU,QAAWA,GAAQA,GAAQ,OAAU,EAAI,OAEzF4b,IAGY,IAAVlJ,GAA6B,IAAd8iB,EAEjBxvD,EAAOzf,KAAK,IAAIu7D,GAAUz8D,KAAK6B,KAAM7B,KAAK6B,KAAK2wD,eAAevmB,OAAOwjB,EAAM9U,GAAO,CAAC8U,EAAM9U,GAAO,KAAM7xB,IACnF,IAAVukC,GAA6B,IAAd8iB,GAExBxvD,EAAOzf,KAAK,IAAIu7D,GAAUz8D,KAAK6B,KAAM7B,KAAK6B,KAAK2wD,eAAevmB,OAAOwjB,GAAO,CAACA,GAAO,KAAM3mC,IAG5F2mC,EAAO9U,EACP0S,EAAQ8iB,EAGV,OAAOxvD,GAGT6uD,EAAaj4D,UAAU6gB,WAAa,SAAoBu5B,GAElD3xD,KAAKwjE,QAAUxjE,KAAKwjE,OAAOprC,YAC7Bp4B,KAAKwjE,OAAOprC,WAAWu5B,IAI3B6d,EAAaj4D,UAAUs4B,SAAW,SAAkB8hB,GAElDA,EAAStjB,UAAYsjB,EAAShxC,OAAO/J,KAAI,SAAU2S,GACjD,OAAO,IAAIkxB,GAAclxB,EAAM4zC,iBAEjC,IAAIiT,EAAa,KAEbpwE,KAAKwjE,QAAUxjE,KAAKwjE,OAAO3zB,WAC7BugC,EAAapwE,KAAKwjE,OAAO3zB,SAAS8hB,IAI/Bye,GAAgBpwE,KAAKwjE,SAAUxjE,KAAKwjE,OAAO9R,mBACzC1xD,KAAKyvE,sBACRzvE,KAAKyvE,oBAAsB,IAAI1gC,GAAoB/uC,KAAK6B,OAG1D7B,KAAKyvE,oBAAoBzgC,eAAe2iB,EAAShxC,OAAQgxC,EAAStjB,YAI9D+hC,GAAeA,EAAWryC,OAAoC,IAA3B4zB,EAASpoB,SAASxL,OAAkB/9B,KAAK6B,KAAKk8B,OAChF/9B,KAAK0vE,gBACR1vE,KAAK0vE,cAAgB,IAAIthC,GAAcpuC,KAAK6B,OAG9C7B,KAAK0vE,cAAct9D,QAAQu/C,EAAShxC,OAAQgxC,EAAStjB,WACrDsjB,EAASpoB,SAASxL,MAAO,IAI7ByxC,EAAaj4D,UAAU04D,sBAAwB,SAA+BtvD,EAAQ0tB,GAGpF,IAFA,IAAIgiC,EAAQrwE,KAAK6B,KAAK08D,kBAAkB,IAE/B58D,EAAI,EAAGA,EAAIgf,EAAOngB,OAAQmB,IAC7B3B,KAAKswE,mBAAmB3vD,EAAOhf,GAAG6tC,WAAW,MAC/C7uB,EAAOhf,GAAK0uE,EACZhiC,EAAU1sC,GAAGgyB,SAAW,EACxB0a,EAAU1sC,GAAGiyB,SAAW,IAK9B47C,EAAaj4D,UAAU+4D,mBAAqB,SAA4BC,GAItE,IAAIC,EAAQD,GAAM,GAElB,GAAc,IAAVC,EAEF,OAAQD,GAAM,GACZ,KAAK,EACH,OAAc,MAAPA,EAET,KAAK,EACH,OAAc,MAAPA,EAET,KAAK,EACH,OAAc,OAAPA,EAET,KAAK,GACH,OAAO,MAAUA,GAAMA,GAAM,KAE/B,KAAK,GACH,OAAO,MAAUA,GAAMA,GAAM,KAE/B,KAAK,GACH,OAAO,MAAUA,GAAMA,GAAM,MAAU,MAAUA,GAAMA,GAAM,MAAU,MAAUA,GAAMA,GAAM,KAE/F,KAAK,IACH,OAAO,OAAUA,GAAMA,GAAM,OAAiB,QAAPA,EAEzC,KAAK,IACH,OAAO,OAAUA,GAAMA,GAAM,MAE/B,QACE,OAAO,OAIX,OAAQC,GACN,KAAK,EACH,OAAO,QAAWD,GAAMA,GAAM,QAAW,QAAWA,GAAMA,GAAM,OAElE,KAAK,GACH,OAAO,QAAWA,GAAMA,GAAM,OAEhC,QACE,OAAO,IAKff,EAAaj4D,UAAUu6C,qBAAuB,SAA8B5yC,EAAQnb,GAClF,IAAIwlC,EAAW,GAUf,OARIvpC,KAAKwjE,QACPj6B,EAASroC,KAAKJ,MAAMyoC,EAAUvpC,KAAKwjE,OAAO1R,qBAAqB5yC,EAAQnb,IAGrE/D,KAAK6B,KAAKk8B,OAAsC,IAA9BwL,EAASp2B,QAAQ,SACrCo2B,EAASroC,KAAK,QAGTqoC,GAGTimC,EAAaj4D,UAAU66C,gBAAkB,SAAyB1oC,GAChE,IAAI7oB,EAAS,IAAI0sD,IAIRj7C,EAFQtS,KAAK6B,KAAK2wD,eAAenlB,mBAAmB3jB,GAE5BnX,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAA3E,IAA8EH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CAC/I,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAGZ,IAAIqwC,EAAYv9B,EAChB/R,EAAO2sD,IAAIh8C,OAAO66B,cAAc8D,IAGlC,GAAInwC,KAAKwjE,QAAUxjE,KAAKwjE,OAAOpR,gBACxB,KAAIj4C,EAAana,KAAKwjE,OAAOpR,gBAAgB1oC,GAAMtP,EAAY1Z,MAAM8R,QAAQ2H,GAAaE,EAAM,EAArG,IAAwGF,EAAaC,EAAYD,EAAaA,EAAWzH,OAAOC,cAAe,CAC7K,IAAI2H,EAEJ,GAAIF,EAAW,CACb,GAAIC,GAAOF,EAAW3Z,OAAQ,MAC9B8Z,EAAQH,EAAWE,SACd,CAEL,IADAA,EAAMF,EAAWtH,QACTC,KAAM,MACdwH,EAAQD,EAAIva,MAGd,IAAIyR,EAAS+I,EACbzZ,EAAO2sD,IAAIj8C,IAIf,OAAO7Q,MAAM+vE,KAAK5vE,IAGb2uE,EA1QU,GA6QfkB,GAAe,CACjBC,OAAQ,IACRC,OAAQ,IACRC,iBAAkB,IAClBC,cAAe,IACfC,UAAW,KASTC,GAAO,WACT,SAASA,IACPx5D,EAAexX,KAAMgxE,GACrBhxE,KAAKixE,SAAW,GAChBjxE,KAAKkxE,MAAQ,KACblxE,KAAKmxE,MAAQ,KA2Rf,OAlRAH,EAAKz5D,UAAU65D,WAAa,WAC1B,IAAIC,EAAOrxE,KAAKixE,SAASr6D,KAAI,SAAU42B,GACrC,MAAO,SAAWA,EAAE8jC,QAAU,IAAM9jC,EAAE/sC,KAAK8wE,KAAK,MAAQ,QAE1D,OAAO,IAAIC,SAAS,MAAOH,EAAKE,KAAK,QAQvCP,EAAKz5D,UAAUk6D,MAAQ,WAOrB,OANWzxE,KAAKixE,SAASr6D,KAAI,SAAU42B,GACrC,IAAI/sC,EAAO+sC,EAAE/sC,KAAKmW,KAAI,SAAUq8C,GAC9B,OAAO3uD,KAAKotE,MAAY,IAANze,GAAa,OAEjC,MAAO,GAAKyd,GAAaljC,EAAE8jC,SAAW7wE,EAAK8wE,KAAK,QAEtCA,KAAK,KAiBnBP,EAAKz5D,UAAUo6D,UAAY,SAAmBxxE,GAC5C,IAAIyxE,EAAO,IAAIZ,EAEN1+D,EAAYtS,KAAKixE,SAAU1+D,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAA9E,IAAiFH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CAClJ,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAMZ,IAHA,IAAI0tC,EAAI56B,EACJnS,EAAO,GAEF4Z,EAAM,EAAGA,EAAMmzB,EAAE/sC,KAAKD,OAAQ6Z,GAAO,EAAG,CAC/C,IAAIw3D,EAAM1xE,EAAGqtC,EAAE/sC,KAAK4Z,GAAMmzB,EAAE/sC,KAAK4Z,EAAM,IACnC0yB,EAAI8kC,EAAI,GACRthC,EAAIshC,EAAI,GAEZpxE,EAAKS,KAAK6rC,EAAGwD,GAGfqhC,EAAKpkC,EAAE8jC,SAASxwE,MAAM8wE,EAAMnxE,GAG9B,OAAOmxE,GAOTZ,EAAKz5D,UAAUu6D,UAAY,SAAmBC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAChE,OAAOpyE,KAAK2xE,WAAU,SAAU5kC,EAAGwD,GAGjC,MAAO,CAFPxD,EAAIglC,EAAKhlC,EAAIklC,EAAK1hC,EAAI4hC,EACtB5hC,EAAIyhC,EAAKjlC,EAAImlC,EAAK3hC,EAAI6hC,OAS1BpB,EAAKz5D,UAAU86D,UAAY,SAAmBtlC,EAAGwD,GAC/C,OAAOvwC,KAAK8xE,UAAU,EAAG,EAAG,EAAG,EAAG/kC,EAAGwD,IAOvCygC,EAAKz5D,UAAU+6D,OAAS,SAAgBC,GACtC,IAAIC,EAAMluE,KAAKkuE,IAAID,GACfE,EAAMnuE,KAAKmuE,IAAIF,GACnB,OAAOvyE,KAAK8xE,UAAUU,EAAKC,GAAMA,EAAKD,EAAK,EAAG,IAOhDxB,EAAKz5D,UAAUm7D,MAAQ,SAAeC,GACpC,IAAIC,EAASryE,UAAUC,OAAS,QAAsB2J,IAAjB5J,UAAU,GAAmBA,UAAU,GAAKoyE,EACjF,OAAO3yE,KAAK8xE,UAAUa,EAAQ,EAAG,EAAGC,EAAQ,EAAG,IAGjDh7D,GAAYo5D,EAAM,CAAC,CACjBrxE,IAAK,OACLE,IAAK,WACH,IAAKG,KAAKmxE,MAAO,CACf,IAAI7hC,EAAO,IAAIc,GAENj2B,EAAana,KAAKixE,SAAU72D,EAAY1Z,MAAM8R,QAAQ2H,GAAaM,EAAM,EAAlF,IAAqFN,EAAaC,EAAYD,EAAaA,EAAWzH,OAAOC,cAAe,CAC1J,IAAI2H,EAEJ,GAAIF,EAAW,CACb,GAAIK,GAAON,EAAW3Z,OAAQ,MAC9B8Z,EAAQH,EAAWM,SACd,CAEL,IADAA,EAAMN,EAAWtH,QACTC,KAAM,MACdwH,EAAQG,EAAI3a,MAKd,IAFA,IAAIwxE,EAAUh3D,EAEL8C,EAAM,EAAGA,EAAMk0D,EAAQ7wE,KAAKD,OAAQ4c,GAAO,EAClDkyB,EAAKgB,SAASghC,EAAQ7wE,KAAK2c,GAAMk0D,EAAQ7wE,KAAK2c,EAAM,IAIxDpd,KAAKmxE,MAAQlxE,OAAO4yE,OAAOvjC,GAG7B,OAAOtvC,KAAKmxE,QAQb,CACDxxE,IAAK,OACLE,IAAK,WACH,GAAIG,KAAKkxE,MACP,OAAOlxE,KAAKkxE,MAGd,IAAI32B,EAAO,IAAInK,GACX0iC,EAAK,EACLC,EAAK,EAEL7mB,EAAI,SAAW7nD,GACjB,OAAOC,KAAK0uE,IAAI,EAAI3uE,EAAG,GAAK4uE,EAAGtxE,GAAK,EAAI2C,KAAK0uE,IAAI,EAAI3uE,EAAG,GAAKA,EAAI6uE,EAAGvxE,GAAK,GAAK,EAAI0C,GAAKC,KAAK0uE,IAAI3uE,EAAG,GAAK8uE,EAAGxxE,GAAK2C,KAAK0uE,IAAI3uE,EAAG,GAAK+uE,EAAGzxE,IAG7H4Y,EAAava,KAAKixE,SAAUz2D,EAAY9Z,MAAM8R,QAAQ+H,GAAaiD,EAAM,EAAlF,IAAqFjD,EAAaC,EAAYD,EAAaA,EAAW7H,OAAOC,cAAe,CAC1J,IAAI+H,EAEJ,GAAIF,EAAW,CACb,GAAIgD,GAAOjD,EAAW/Z,OAAQ,MAC9Bka,EAAQH,EAAWiD,SACd,CAEL,IADAA,EAAMjD,EAAW1H,QACTC,KAAM,MACd4H,EAAQ8C,EAAI1d,MAGd,IAAI0tC,EAAI9yB,EAER,OAAQ8yB,EAAE8jC,SACR,IAAK,SACL,IAAK,SACH,IAAI+B,EAAU7lC,EAAE/sC,KACZssC,EAAIsmC,EAAQ,GACZ9iC,EAAI8iC,EAAQ,GAChB94B,EAAKjK,SAASvD,EAAGwD,GACjBuiC,EAAK/lC,EACLgmC,EAAKxiC,EACL,MAEF,IAAK,mBACL,IAAK,gBACH,GAAkB,qBAAd/C,EAAE8jC,QAEJ,IAAIgC,EAAW9lC,EAAE/sC,KACb8yE,EAAOD,EAAS,GAChBE,EAAOF,EAAS,GAGhBG,EAAOX,EAAK,EAAI,GAAKS,EAAOT,GAE5BY,EAAOX,EAAK,EAAI,GAAKS,EAAOT,GAC5BY,GALAC,EAAMN,EAAS,IAKF,EAAI,GAAKC,EAAOK,GAE7BC,GANAC,EAAMR,EAAS,IAMF,EAAI,GAAKE,EAAOM,QAEjC,IAAIC,EAAWvmC,EAAE/sC,KAKbmzE,GAJAH,EAAOM,EAAS,GAChBL,EAAOK,EAAS,GAChBJ,EAAOI,EAAS,GAChBF,EAAOE,EAAS,GACVA,EAAS,IACfD,EAAMC,EAAS,GAIrBx5B,EAAKjK,SAASsjC,EAAKE,GAMnB,IALA,IAAIb,EAAK,CAACH,EAAIC,GACVG,EAAK,CAACO,EAAMC,GACZP,EAAK,CAACQ,EAAME,GACZT,EAAK,CAACQ,EAAKE,GAENnyE,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAIuZ,EAAI,EAAI+3D,EAAGtxE,GAAK,GAAKuxE,EAAGvxE,GAAK,EAAIwxE,EAAGxxE,GACpC2f,GAAK,EAAI2xD,EAAGtxE,GAAK,EAAIuxE,EAAGvxE,GAAK,EAAIwxE,EAAGxxE,GAAK,EAAIyxE,EAAGzxE,GAGpD,GAFA6rC,EAAI,EAAI0lC,EAAGvxE,GAAK,EAAIsxE,EAAGtxE,GAEb,IAAN2f,EAAJ,CAkBA,IAAI0yD,EAAO1vE,KAAK0uE,IAAI93D,EAAG,GAAK,EAAIsyB,EAAIlsB,EAEpC,KAAI0yD,EAAO,GAAX,CAIA,IAAIC,IAAO/4D,EAAI5W,KAAK4vE,KAAKF,KAAU,EAAI1yD,GAEnC,EAAI2yD,GAAMA,EAAK,IACP,IAANtyE,EACF44C,EAAKjK,SAAS4b,EAAE+nB,GAAK15B,EAAKrK,MACX,IAANvuC,GACT44C,EAAKjK,SAASiK,EAAKvK,KAAMkc,EAAE+nB,KAI/B,IAAIE,IAAOj5D,EAAI5W,KAAK4vE,KAAKF,KAAU,EAAI1yD,GAEnC,EAAI6yD,GAAMA,EAAK,IACP,IAANxyE,EACF44C,EAAKjK,SAAS4b,EAAEioB,GAAK55B,EAAKrK,MACX,IAANvuC,GACT44C,EAAKjK,SAASiK,EAAKvK,KAAMkc,EAAEioB,UAxC/B,CACE,GAAU,IAANj5D,EACF,SAGF,IAAI7W,GAAKmpC,EAAItyB,EAET,EAAI7W,GAAKA,EAAI,IACL,IAAN1C,EACF44C,EAAKjK,SAAS4b,EAAE7nD,GAAIk2C,EAAKrK,MACV,IAANvuC,GACT44C,EAAKjK,SAASiK,EAAKvK,KAAMkc,EAAE7nD,MAkCnCyuE,EAAKc,EACLb,EAAKe,GAKX,OAAO9zE,KAAKkxE,MAAQjxE,OAAO4yE,OAAOt4B,OAG/By2B,EAhSE,GAmSPoD,GAAO,CAAC,SAAU,SAAU,mBAAoB,gBAAiB,aAEjE3R,GAAQ,WACV,IAAI6O,EAAU8C,GAAKzmC,IAEnBqjC,GAAKz5D,UAAU+5D,GAAW,WACxB,IAAK,IAAIhxE,EAAOC,UAAUC,OAAQC,EAAOC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC3EF,EAAKE,GAAQJ,UAAUI,GAQzB,OALAX,KAAKkxE,MAAQlxE,KAAKmxE,MAAQ,KAC1BnxE,KAAKixE,SAAS/vE,KAAK,CACjBowE,QAASA,EACT7wE,KAAMA,IAEDT,OAIF2tC,GAAM,EAAGA,GAAMymC,GAAK5zE,OAAQmtC,KACnC80B,KAGF,IAEI4R,GAFAC,GAAgB,CAAC,UAAW,QAAS,mBAAoB,QAAS,SAAU,WAAY,aAAc,SAAU,UAAW,YAAa,cAAe,YAAa,aAAc,WAAY,OAAQ,QAAS,SAAU,SAAU,QAAS,OAAQ,MAAO,MAAO,QAAS,OAAQ,OAAQ,MAAO,QAAS,QAAS,OAAQ,QAAS,YAAa,OAAQ,QAAS,UAAW,WAAY,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,cAAe,YAAa,eAAgB,cAAe,aAAc,QAAS,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,YAAa,MAAO,aAAc,aAAc,YAAa,QAAS,WAAY,SAAU,SAAU,YAAa,YAAa,SAAU,SAAU,cAAe,YAAa,SAAU,QAAS,WAAY,SAAU,SAAU,cAAe,YAAa,SAAU,SAAU,cAAe,YAAa,SAAU,SAAU,SAAU,cAAe,YAAa,SAAU,SAAU,SAAU,cAAe,YAAa,SAAU,SAAU,OAAQ,WAAY,UAAW,SAAU,YAAa,aAAc,aAAc,YAAa,YAAa,QAAS,WAAY,WAAY,KAAM,SAAU,WAAY,YAAa,YAAa,eAAgB,MAAO,KAAM,cAAe,YAAa,UAAW,KAAM,WAAY,cAAe,eAAgB,QAAS,KAAM,SAAU,eAAgB,aAAc,aAAc,UAAW,SAAU,cAAe,QAAS,gBAAiB,iBAAkB,WAAY,mBAAoB,SAAU,SAAU,SAAU,KAAM,KAAM,SAAU,SAAU,eAAgB,gBAAiB,YAAa,aAAc,SAAU,UAAW,YAAa,YAAa,WAAY,WAAY,gBAAiB,iBAAkB,KAAM,KAAM,YAAa,iBAAkB,iBAAkB,eAAgB,cAAe,cAAe,cAAe,SAAU,YAAa,SAAU,SAAU,cAAe,YAAa,SAAU,SAAU,cAAe,QAAS,SAAU,SAAU,cAAe,SAAU,WAAY,aAAc,QAAS,SAAU,QAAS,YAAa,OAAQ,UAAW,eAAgB,SAAU,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,YAAa,MAAO,MAAO,SAAU,SAAU,QAAS,QAAS,QAAS,WAAY,cAAe,cAAe,gBAAiB,UAAW,aAAc,gBAAiB,QAAS,SAAU,SAAU,aAAc,WAAY,WAAY,SAAU,SAAU,SAAU,SAAU,UAI3kF,SAASC,GAA4B70E,EAAQgrC,EAAUC,EAAY/qC,EAAYgrC,GAC7E,IAAIC,EAAO,GAyBX,OAxBA5qC,OAAkB,KAAEL,GAAYkrC,SAAQ,SAAUnrC,GAChDkrC,EAAKlrC,GAAOC,EAAWD,MAEzBkrC,EAAK9yB,aAAe8yB,EAAK9yB,WACzB8yB,EAAK7yB,eAAiB6yB,EAAK7yB,cAEvB,UAAW6yB,GAAQA,EAAKE,eAC1BF,EAAK5yB,UAAW,GAGlB4yB,EAAOF,EAAWK,QAAQC,UAAUC,QAAO,SAAUL,EAAMM,GACzD,OAAOA,EAAUzrC,EAAQgrC,EAAUG,IAASA,IAC3CA,GAECD,QAAgC,IAArBC,EAAKE,cAClBF,EAAK/qC,MAAQ+qC,EAAKE,YAAcF,EAAKE,YAAYhrC,KAAK6qC,QAAW,EACjEC,EAAKE,iBAAc5gC,QAGI,IAArB0gC,EAAKE,cACP9qC,OAA4B,eAAEP,EAAQgrC,EAAUG,GAChDA,EAAO,MAGFA,EAYT,IAqgFI2pC,GArgFAC,IA6NCF,IA7NQF,GAAW,WACtB,SAASI,EAAMnmC,EAAIkB,EAAY3tC,GAC7B2V,EAAexX,KAAMy0E,GAMrBz0E,KAAKsuC,GAAKA,EAQVtuC,KAAKwvC,WAAaA,EAClBxvC,KAAK08D,MAAQ76D,EAEb7B,KAAKmvC,OAASnvC,KAAKwvC,WAAWhvC,OAAS,GAAKR,KAAKwvC,WAAW4oB,MAAM,UAAQjpB,QAC1EnvC,KAAKo2D,WAAap2D,KAAKwvC,WAAWhvC,OAAS,EAwM7C,OArMAi0E,EAAMl9D,UAAUm9D,SAAW,WACzB,OAAO,IAAI1D,IAGbyD,EAAMl9D,UAAUo9D,SAAW,WACzB,OAAO30E,KAAK4xE,KAAKtiC,MAGnBmlC,EAAMl9D,UAAUq9D,SAAW,WACzB,OAAO50E,KAAK4xE,KAAKr3B,MAGnBk6B,EAAMl9D,UAAUs9D,iBAAmB,SAA0BxuE,GAC3D,GAAIrG,KAAKsuC,GAAKjoC,EAAM0C,QAAQvI,OAC1B,OAAO6F,EAAM0C,QAAQlJ,IAAIG,KAAKsuC,IAGhC,IAAIwmC,EAASzuE,EAAM0C,QAAQlJ,IAAIwG,EAAM0C,QAAQvI,OAAS,GAKtD,MAJU,CACRoI,QAASksE,EAASA,EAAOlsE,QAAU,EACnCC,QAASxC,EAAM4C,SAASpJ,IAAIG,KAAKsuC,GAAKjoC,EAAM0C,QAAQvI,SAAW,IAKnEi0E,EAAMl9D,UAAUw9D,YAAc,SAAqBzlC,GACjD,GAAItvC,KAAKg1E,SACP,OAAOh1E,KAAKg1E,SAGd,IAAIC,EAAoBj1E,KAAK60E,iBAAiB70E,KAAK08D,MAAM5zD,MACrDq0D,EAAe8X,EAAkBrsE,QACjCssE,EAAcD,EAAkBpsE,QAGpC,GAAI7I,KAAK08D,MAAMr8B,KACb,IAAI80C,EAAoBn1E,KAAK60E,iBAAiB70E,KAAK08D,MAAMr8B,MACrD+0C,EAAgBD,EAAkBvsE,QAClCysE,EAAaF,EAAkBtsE,YAC9B,CACL,IAAIysE,EAMJ,GAJI,MAAOhmC,IACTA,EAAOtvC,KAAKsvC,OAGTgmC,EAAMt1E,KAAK08D,MAAM,UAAY4Y,EAAI9uE,QAAU,EAC1C4uE,EAAgB9wE,KAAKksC,IAAI8kC,EAAIvgE,aAAeugE,EAAItgE,eAChDqgE,EAAaC,EAAIvgE,aAAeu6B,EAAKY,SAEzC,KAAIpoC,EAAO9H,KAAK08D,MAAM50D,KAClBstE,EAAgB9wE,KAAKksC,IAAI1oC,EAAKC,OAASD,EAAKE,SAC5CqtE,EAAavtE,EAAKC,OAASunC,EAAKY,MAQxC,OAJIlwC,KAAK08D,MAAM3F,qBAAuB/2D,KAAK08D,MAAM/hC,OAC/CwiC,GAAgBn9D,KAAK08D,MAAM3F,oBAAoBwe,qBAAqBv1E,KAAKsuC,GAAItuC,KAAK08D,MAAM/hC,OAGnF36B,KAAKg1E,SAAW,CACrB7X,aAAcA,EACdiY,cAAeA,EACfF,YAAaA,EACbG,WAAYA,IAsBhBZ,EAAMl9D,UAAUi+D,cAAgB,SAAuBjiE,GACrD,IAAIm/D,EAAQ,EAAI1yE,KAAK08D,MAAMz1D,WAAasM,EACxC,OAAOvT,KAAK4xE,KAAKc,MAAMA,IAQzB+B,EAAMl9D,UAAUk+D,SAAW,WACzB,IAAI5/D,EAAO7V,KAAK08D,MAAM7mD,KAEtB,IAAKA,EACH,OAAO,KAGT,OAAQA,EAAKrP,SACX,KAAK,EACH,OAAO8tE,GAAct0E,KAAKsuC,IAE5B,KAAK,EACH,IAAIA,EAAKz4B,EAAKW,eAAexW,KAAKsuC,IAElC,OAAIA,EAAKgmC,GAAc9zE,OACd8zE,GAAchmC,GAGhBz4B,EAAKY,MAAM63B,EAAKgmC,GAAc9zE,QAEvC,KAAK,IACH,OAAO8zE,GAAct0E,KAAKsuC,GAAKz4B,EAAKc,QAAQ3W,KAAKsuC,KAEnD,KAAK,EACH,OAAO98B,OAAOkkE,aAAa7/D,EAAKe,IAAI5W,KAAKsuC,OAe/CmmC,EAAMl9D,UAAUo+D,OAAS,SAAgB78D,EAAKvF,GAC5CuF,EAAI88D,OACJ,IAAIlD,EAAQ,EAAI1yE,KAAK08D,MAAM/1D,KAAKM,WAAasM,EAC7CuF,EAAI45D,MAAMA,EAAOA,GACR1yE,KAAK4xE,KAAKR,YACnBjxE,CAAG2Y,GACHA,EAAI+8D,OACJ/8D,EAAIg9D,WAGNl+D,GAAY68D,EAAO,CAAC,CAClB90E,IAAK,OACLE,IAAK,WACH,OAAOG,KAAK20E,aAQb,CACDh1E,IAAK,OACLE,IAAK,WACH,OAAOG,KAAK40E,aAOb,CACDj1E,IAAK,OACLE,IAAK,WAGH,OAAOG,KAAK00E,aAEb,CACD/0E,IAAK,eACLE,IAAK,WACH,OAAOG,KAAK+0E,cAAc5X,eAO3B,CACDx9D,IAAK,gBACLE,IAAK,WACH,OAAOG,KAAK+0E,cAAcK,gBAE3B,CACDz1E,IAAK,yBACLE,IAAK,cACJ,CACDF,IAAK,OACLE,IAAK,WACH,OAAOG,KAAKy1E,eAGThB,EA5Ne,IA6NkBl9D,UAAW,OAAQ,CAAC9X,GAAQQ,OAAOkuC,yBAAyBkmC,GAAS98D,UAAW,QAAS88D,GAAS98D,WAAYg9D,GAA4BF,GAAS98D,UAAW,OAAQ,CAAC9X,GAAQQ,OAAOkuC,yBAAyBkmC,GAAS98D,UAAW,QAAS88D,GAAS98D,WAAYg9D,GAA4BF,GAAS98D,UAAW,OAAQ,CAAC9X,GAAQQ,OAAOkuC,yBAAyBkmC,GAAS98D,UAAW,QAAS88D,GAAS98D,WAAYg9D,GAA4BF,GAAS98D,UAAW,eAAgB,CAAC9X,GAAQQ,OAAOkuC,yBAAyBkmC,GAAS98D,UAAW,gBAAiB88D,GAAS98D,WAAYg9D,GAA4BF,GAAS98D,UAAW,gBAAiB,CAAC9X,GAAQQ,OAAOkuC,yBAAyBkmC,GAAS98D,UAAW,iBAAkB88D,GAAS98D,WAAYg9D,GAA4BF,GAAS98D,UAAW,OAAQ,CAAC9X,GAAQQ,OAAOkuC,yBAAyBkmC,GAAS98D,UAAW,QAAS88D,GAAS98D,WAAY88D,IAEr5B0B,GAAa,IAAI,IAAE9zE,OAAO,CAC5B+zE,iBAAkB,IAAE1zE,MAEpB8E,KAAM,IAAE9E,MACR+E,KAAM,IAAE/E,MACRgF,KAAM,IAAEhF,MACRiF,KAAM,IAAEjF,QAiBN2zE,GAAQ,WACV,SAASA,EAAMC,EAASC,GACtB,IAAIppC,EAAIxsC,UAAUC,OAAS,QAAsB2J,IAAjB5J,UAAU,GAAmBA,UAAU,GAAK,EACxEgwC,EAAIhwC,UAAUC,OAAS,QAAsB2J,IAAjB5J,UAAU,GAAmBA,UAAU,GAAK,EAC5EiX,EAAexX,KAAMi2E,GACrBj2E,KAAKk2E,QAAUA,EACfl2E,KAAKm2E,WAAaA,EAClBn2E,KAAK+sC,EAAIA,EACT/sC,KAAKuwC,EAAIA,EAOX,OAJA0lC,EAAM1+D,UAAUg4B,KAAO,WACrB,OAAO,IAAI0mC,EAAMj2E,KAAKk2E,QAASl2E,KAAKm2E,WAAYn2E,KAAK+sC,EAAG/sC,KAAKuwC,IAGxD0lC,EAfG,GAmBRG,GAAY,SAASA,EAAUxzE,EAASyzE,EAAIC,GAC9C9+D,EAAexX,KAAMo2E,GACrBp2E,KAAK4C,QAAUA,EACf5C,KAAKq2E,GAAKA,EACVr2E,KAAKs2E,GAAKA,EACVt2E,KAAKsZ,IAAM,EACXtZ,KAAK2yE,OAAS3yE,KAAK4yE,OAAS,EAC5B5yE,KAAKu2E,QAAUv2E,KAAKw2E,QAAU,GAO5BC,GAAW,SAAUC,GAGvB,SAASD,IAEP,OADAj/D,EAAexX,KAAMy2E,GACdh+D,GAA0BzY,KAAM02E,EAAO51E,MAAMd,KAAMO,YA0V5D,OA9VA6X,GAASq+D,EAAUC,GAQnBD,EAASl/D,UAAUo9D,SAAW,SAAkBgC,GAG9C,GAAI32E,KAAK08D,MAAM3F,sBAAwB4f,EACrC,OAAO32E,KAAK4xE,KAAKtiC,KAGnB,IAAIj9B,EAASrS,KAAK08D,MAAMka,gBAAgB,QAExCvkE,EAAOiH,KAAOtZ,KAAK08D,MAAMzlD,KAAKN,QAAQ3W,KAAKsuC,IAC3C,IAAI/kB,EAAQwsD,GAAW/8D,OAAO3G,GAC1Bi9B,EAAO,IAAIc,GAAK7mB,EAAMniB,KAAMmiB,EAAMliB,KAAMkiB,EAAMjiB,KAAMiiB,EAAMhiB,MAC9D,OAAOtH,OAAO4yE,OAAOvjC,IAIvBmnC,EAASl/D,UAAUs/D,iBAAmB,SAA0BxkE,EAAQ8iD,EAAM2hB,EAAOC,GACnF,GAAID,EAAO,CACT,IAAI5jE,EAAMb,EAAO+G,YAEZ29D,IACH7jE,GAAOA,GAGTA,GAAOiiD,OAEP,GAAI4hB,EACE7jE,EAAMiiD,OAENjiD,EAAMiiD,EAAO9iD,EAAO0I,cAI5B,OAAO7H,GAKTujE,EAASl/D,UAAUy/D,QAAU,WAC3B,IAAIC,EAAUj3E,KAAK08D,MAAMzlD,KAAKN,QAAQ3W,KAAKsuC,IAG3C,GAAI2oC,IAFUj3E,KAAK08D,MAAMzlD,KAAKN,QAAQ3W,KAAKsuC,GAAK,GAG9C,OAAO,KAGT,IAAIj8B,EAASrS,KAAK08D,MAAMka,gBAAgB,QAExCvkE,EAAOiH,KAAO29D,EACd,IAAIz9D,EAAWnH,EAAOiH,IAClBiQ,EAAQwsD,GAAW/8D,OAAO3G,GAQ9B,OANIkX,EAAMysD,iBAAmB,EAC3Bh2E,KAAKk3E,cAAc3tD,EAAOlX,GACjBkX,EAAMysD,iBAAmB,GAClCh2E,KAAKm3E,iBAAiB5tD,EAAOlX,EAAQmH,GAGhC+P,GAGTktD,EAASl/D,UAAU2/D,cAAgB,SAAuB3tD,EAAOlX,GAE/DkX,EAAM6tD,OAAS,GACf,IAAIC,EAAmB,IAAI,IAAE32E,MAAM,IAAEyB,OAAQonB,EAAMysD,kBAAkBh9D,OAAO3G,GAC5EkX,EAAMvS,aAAe,IAAI,IAAEtW,MAAM,IAAEuC,MAAO,IAAEd,QAAQ6W,OAAO3G,GAI3D,IAHA,IAAIrL,EAAQ,GACRswE,EAAYD,EAAiBA,EAAiB72E,OAAS,GAAK,EAEzDwG,EAAMxG,OAAS82E,GAAW,CAC/B,IAAIC,EAAOllE,EAAO+G,YAGlB,GAFApS,EAAM9F,KAAKq2E,GA5HJ,EA8HHA,EAGF,IAFA,IAAIzlE,EAAQO,EAAO+G,YAEVkrD,EAAI,EAAGA,EAAIxyD,EAAOwyD,IACzBt9D,EAAM9F,KAAKq2E,GAKjB,IAAK,IAAI51E,EAAI,EAAGA,EAAIqF,EAAMxG,OAAQmB,IAAK,CACjC41E,EAAOvwE,EAAMrF,GAAjB,IACI61E,EAAQ,IAAIvB,MA5IP,EA4IgBsB,GAAkBF,EAAiBlkE,QAAQxR,IAAM,EAAG,EAAG,GAChF4nB,EAAM6tD,OAAOl2E,KAAKs2E,GAGpB,IAAIC,EAAK,EAET,IAAS91E,EAAI,EAAGA,EAAIqF,EAAMxG,OAAQmB,IAAK,CACjC41E,EAAOvwE,EAAMrF,GACjB4nB,EAAM6tD,OAAOz1E,GAAGorC,EAAI0qC,EAAKz3E,KAAK62E,iBAAiBxkE,EAAQolE,EAnJxC,EAmJ4CF,EAhJpD,GAgJ2EA,GAGpF,IAAIG,EAAK,EAET,IAAS/1E,EAAI,EAAGA,EAAIqF,EAAMxG,OAAQmB,IAAK,CACjC41E,EAAOvwE,EAAMrF,GACjB4nB,EAAM6tD,OAAOz1E,GAAG4uC,EAAImnC,EAAK13E,KAAK62E,iBAAiBxkE,EAAQqlE,EAzJxC,EAyJ4CH,EAtJpD,GAsJ2EA,GAGpF,GAAIv3E,KAAK08D,MAAM3F,oBAAqB,CAClC,IAAIqgB,EAAS7tD,EAAM6tD,OAAOpsC,QAC1BosC,EAAOl2E,KAAKJ,MAAMs2E,EAAQp3E,KAAK23E,kBAAkBpuD,IAEjDvpB,KAAK08D,MAAM3F,oBAAoB6gB,gBAAgB53E,KAAKsuC,GAAI8oC,GAExD7tD,EAAMsuD,cAAgBT,EAAOpsC,OAAO,KAMxCyrC,EAASl/D,UAAU4/D,iBAAmB,SAA0B5tD,EAAOlX,GACrE,IAAIsH,EAASpZ,UAAUC,OAAS,QAAsB2J,IAAjB5J,UAAU,GAAmBA,UAAU,GAAK,EAEjFgpB,EAAMyC,WAAa,GAInB,IAHA,IAAI8rD,GAAmB,EACnB9wE,EAtKc,MAwKXA,GAAyB,CAC9BA,EAAQqL,EAAO6G,eACf,IAAI6+D,EAAO1lE,EAAOiH,IAAMK,EACpB/W,EAAUyP,EAAO6G,eAMrB,GAJK4+D,IACHA,EAAsD,IA3KnC,IA2KC9wE,IAhLA,EAmLlBA,EACF,IAAIqvE,EAAKhkE,EAAO0I,cACZu7D,EAAKjkE,EAAO0I,mBAEZs7D,EAAKhkE,EAAO2lE,WACZ1B,EAAKjkE,EAAO2lE,YAGdzd,EAAY,IAAI6b,GAAUxzE,EAASyzE,EAAIC,IACjCh9D,IAAMy+D,EA3LA,EA6LZ/wE,EAEFuzD,EAAUoY,OAASpY,EAAUqY,QAAUvgE,EAAO+G,aAAe,GAAK/G,EAAO+G,aAAe,IAAM,WA7LvE,GA8LdpS,GACTuzD,EAAUoY,QAAUtgE,EAAO+G,aAAe,GAAK/G,EAAO+G,aAAe,IAAM,WAC3EmhD,EAAUqY,QAAUvgE,EAAO+G,aAAe,GAAK/G,EAAO+G,aAAe,IAAM,YA/LxD,IAgMVpS,IACTuzD,EAAUoY,QAAUtgE,EAAO+G,aAAe,GAAK/G,EAAO+G,aAAe,IAAM,WAC3EmhD,EAAUgc,SAAWlkE,EAAO+G,aAAe,GAAK/G,EAAO+G,aAAe,IAAM,WAC5EmhD,EAAUic,SAAWnkE,EAAO+G,aAAe,GAAK/G,EAAO+G,aAAe,IAAM,WAC5EmhD,EAAUqY,QAAUvgE,EAAO+G,aAAe,GAAK/G,EAAO+G,aAAe,IAAM,YAG7EmQ,EAAMyC,WAAW9qB,KAAKq5D,GAGxB,GAAIv6D,KAAK08D,MAAM3F,oBAAqB,CAGlC,IAFA,IAAIqgB,EAAS,GAEJ9S,EAAI,EAAGA,EAAI/6C,EAAMyC,WAAWxrB,OAAQ8jE,IAAK,CAChD,IAAI/J,EAAYhxC,EAAMyC,WAAWs4C,GACjC8S,EAAOl2E,KAAK,IAAI+0E,IAAM,GAAM,EAAM1b,EAAU8b,GAAI9b,EAAU+b,KAG5Dc,EAAOl2E,KAAKJ,MAAMs2E,EAAQp3E,KAAK23E,kBAAkBpuD,IAEjDvpB,KAAK08D,MAAM3F,oBAAoB6gB,gBAAgB53E,KAAKsuC,GAAI8oC,GAExD7tD,EAAMsuD,cAAgBT,EAAO5oB,QAAQ,EAAG,GAExC,IAAK,IAAI7sD,EAAI,EAAGA,EAAIy1E,EAAO52E,OAAQmB,IAAK,CACtC,IAAI61E,EAAQJ,EAAOz1E,GACnB4nB,EAAMyC,WAAWrqB,GAAG00E,GAAKmB,EAAMzqC,EAC/BxjB,EAAMyC,WAAWrqB,GAAG20E,GAAKkB,EAAMjnC,GAInC,OAAOunC,GAGTrB,EAASl/D,UAAUogE,kBAAoB,SAA2BpuD,GAChE,IAAI+lB,EAAOtvC,KAAK20E,UAAS,GAEJ,MAAjB30E,KAAKg1E,WACPh1E,KAAKg1E,SAAWP,GAAMl9D,UAAUw9D,YAAYh1E,KAAKC,KAAMsvC,IAGzD,IAAI0lC,EAAWh1E,KAAKg1E,SAChB7X,EAAe6X,EAAS7X,aACxBiY,EAAgBJ,EAASI,cACzBF,EAAcF,EAASE,YACvBG,EAAaL,EAASK,WAC1B,MAAO,CAAC,IAAIY,IAAM,GAAO,EAAM1sD,EAAMniB,KAAO8tE,EAAa,GAAI,IAAIe,IAAM,GAAO,EAAM1sD,EAAMniB,KAAO8tE,EAAc/X,EAAc,GAAI,IAAI8Y,IAAM,GAAO,EAAM,EAAG1sD,EAAMhiB,KAAO8tE,GAAa,IAAIY,IAAM,GAAO,EAAM,EAAG1sD,EAAMhiB,KAAO8tE,EAAaD,KAI3OqB,EAASl/D,UAAU0gE,aAAe,WAChC,IAAI1uD,EAAQvpB,KAAKg3E,UAEjB,IAAKztD,EACH,MAAO,GAGT,IAAI6tD,EAAS,GAEb,GAAI7tD,EAAMysD,iBAAmB,EAEtB,KAAI1jE,EAAYiX,EAAMyC,WAAYzZ,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAAjF,IAAoFH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CACrJ,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAOZ,IAJA,IAAIy6D,EAAY3nD,EAEZslE,EAAYl4E,KAAK08D,MAAMvN,SAASoL,EAAU33D,SAASq1E,eAE9Ct2E,EAAI,EAAGA,EAAIu2E,EAAU13E,OAAQmB,IAGpC,IAFA,IAAIw2E,EAAUD,EAAUv2E,GAEf2iE,EAAI,EAAGA,EAAI6T,EAAQ33E,OAAQ8jE,IAAK,CACvC,IAAI8T,EAASD,EAAQ7T,GACjBv3B,EAAIqrC,EAAOrrC,EAAIwtB,EAAUoY,OAASyF,EAAO7nC,EAAIgqB,EAAUgc,QAAUhc,EAAU8b,GAC3E9lC,EAAI6nC,EAAO7nC,EAAIgqB,EAAUqY,OAASwF,EAAOrrC,EAAIwtB,EAAUic,QAAUjc,EAAU+b,GAC/Ec,EAAOl2E,KAAK,IAAI+0E,GAAMmC,EAAOlC,QAASkC,EAAOjC,WAAYppC,EAAGwD,WAKlE6mC,EAAS7tD,EAAM6tD,QAAU,GAIvB7tD,EAAMsuD,gBAAkB73E,KAAK08D,MAAM2b,UAAU3xE,OAAOi0B,OACtD36B,KAAKg1E,SAAS7X,aAAe5zC,EAAMsuD,cAAc,GAAG9qC,EAAIxjB,EAAMsuD,cAAc,GAAG9qC,EAC/E/sC,KAAKg1E,SAASI,cAAgB7rD,EAAMsuD,cAAc,GAAGtnC,EAAIhnB,EAAMsuD,cAAc,GAAGtnC,EAChFvwC,KAAKg1E,SAASE,YAAc3rD,EAAMniB,KAAOmiB,EAAMsuD,cAAc,GAAG9qC,EAChE/sC,KAAKg1E,SAASK,WAAa9rD,EAAMsuD,cAAc,GAAGtnC,EAAIhnB,EAAMhiB,MAM9D,IAHA,IAAI+wE,EAAW,GACXxf,EAAM,GAED/7C,EAAI,EAAGA,EAAIq6D,EAAO52E,OAAQuc,IAAK,CACtC,IAAIy6D,EAAQJ,EAAOr6D,GACnB+7C,EAAI53D,KAAKs2E,GAELA,EAAMrB,aACRmC,EAASp3E,KAAK43D,GACdA,EAAM,IAIV,OAAOwf,GAGT7B,EAASl/D,UAAUw9D,YAAc,WAC/B,GAAI/0E,KAAKg1E,SACP,OAAOh1E,KAAKg1E,SAGd,IAAI1lC,EAAOtvC,KAAK20E,UAAS,GASzB,OAPA+B,EAAOn/D,UAAUw9D,YAAYh1E,KAAKC,KAAMsvC,GAEpCtvC,KAAK08D,MAAM3F,sBAAwB/2D,KAAK08D,MAAM/hC,MAEhD36B,KAAK4xE,KAGA5xE,KAAKg1E,UAIdyB,EAASl/D,UAAUm9D,SAAW,WAK5B,IAJA,IAAI4D,EAAWt4E,KAAKi4E,eAEhBrG,EAAO,IAAIZ,GAENrvE,EAAI,EAAGA,EAAI22E,EAAS93E,OAAQmB,IAAK,CACxC,IAAIw2E,EAAUG,EAAS32E,GACnB42E,EAAUJ,EAAQ,GAClBK,EAASL,EAAQA,EAAQ33E,OAAS,GAClCiZ,EAAQ,EAEZ,GAAI8+D,EAAQrC,QAAS,CAEnB,IAAIuC,EAAU,KACdh/D,EAAQ,OAUJg/D,EANFF,EAFEC,EAAOtC,QAECsC,EAGA,IAAIvC,IAAM,GAAO,GAAQsC,EAAQxrC,EAAIyrC,EAAOzrC,GAAK,GAAIwrC,EAAQhoC,EAAIioC,EAAOjoC,GAAK,GAM3FqhC,EAAKjB,OAAO4H,EAAQxrC,EAAGwrC,EAAQhoC,GAE/B,IAAK,IAAI+zB,EAAI7qD,EAAO6qD,EAAI6T,EAAQ33E,OAAQ8jE,IAAK,CAC3C,IAAIoU,EAAKP,EAAQ7T,GACbqU,EAAe,IAANrU,EAAUiU,EAAUJ,EAAQ7T,EAAI,GAE7C,GAAIqU,EAAOzC,SAAWwC,EAAGxC,QACvBtE,EAAKhB,OAAO8H,EAAG3rC,EAAG2rC,EAAGnoC,QAChB,GAAIooC,EAAOzC,UAAYwC,EAAGxC,QAC3BuC,EAAUC,OACT,GAAKC,EAAOzC,SAAYwC,EAAGxC,QAK3B,IAAKyC,EAAOzC,UAAWwC,EAAGxC,QAI/B,MAAM,IAAI50E,MAAM,0BAHhBswE,EAAKf,iBAAiB4H,EAAQ1rC,EAAG0rC,EAAQloC,EAAGmoC,EAAG3rC,EAAG2rC,EAAGnoC,GACjDkoC,EAAU,SAP2B,CACzC,IAAIG,GAAQD,EAAO5rC,EAAI2rC,EAAG3rC,GAAK,EAC3B8rC,GAAQF,EAAOpoC,EAAImoC,EAAGnoC,GAAK,EAC/BqhC,EAAKf,iBAAiB8H,EAAO5rC,EAAG4rC,EAAOpoC,EAAGqoC,EAAMC,GAChD,IAAIJ,EAAUC,GAUdD,GACF7G,EAAKf,iBAAiB4H,EAAQ1rC,EAAG0rC,EAAQloC,EAAGgoC,EAAQxrC,EAAGwrC,EAAQhoC,GAGjEqhC,EAAKb,YAGP,OAAOa,GAGF6E,EA/VM,CAgWbhC,IAMEqE,GAAW,SAAUpC,GAGvB,SAASoC,IAEP,OADAthE,EAAexX,KAAM84E,GACdrgE,GAA0BzY,KAAM02E,EAAO51E,MAAMd,KAAMO,YAupB5D,OA3pBA6X,GAAS0gE,EAAUpC,GAOnBoC,EAASvhE,UAAUk+D,SAAW,WAC5B,OAAIz1E,KAAK08D,MAAMqc,KACNrC,EAAOn/D,UAAUk+D,SAAS11E,KAAKC,MAGjCA,KAAK08D,MAAM,QAAQjzC,aAAazpB,KAAKsuC,KAG9CwqC,EAASvhE,UAAUyhE,KAAO,SAAc/+D,GACtC,OAAIA,EAAEzZ,OAAS,KACN,IACEyZ,EAAEzZ,OAAS,MACb,KAEA,OAIXs4E,EAASvhE,UAAUm9D,SAAW,WAC5B,IAAIriE,EAASrS,KAAK08D,MAAMrqD,OAEpB4mE,GADM5mE,EAAOiH,IACPtZ,KAAK08D,MAAMqc,MAAQ/4E,KAAK08D,MAAM,SACpCzhD,EAAMg+D,EAAIjwD,QAAQnB,YAAY7nB,KAAKsuC,IACnC50B,EAAMuB,EAAItB,OAASsB,EAAIza,OAC3B6R,EAAOiH,IAAM2B,EAAItB,OACjB,IAAIi4D,EAAO,IAAIZ,GACXlgB,EAAQ,GACRooB,EAAQ,GACRruD,EAAQ,KACRsuD,EAAS,EACTpsC,EAAI,EACJwD,EAAI,EACJ6oC,OAAa,EACbC,OAAY,EACZ93E,GAAO,EACXvB,KAAKs5E,YAAcF,EAAa,GAChCp5E,KAAKu5E,WAAaF,EAAY,GAC9B,IAAIG,EAASP,EAAIlwD,iBAAmB,GAChC0wD,EAAaz5E,KAAKg5E,KAAKQ,GACvBE,EAAcT,EAAIjvD,oBAAoBhqB,KAAKsuC,IAC3CqrC,EAAQD,EAAYE,OAAS,GAC7BC,EAAY75E,KAAKg5E,KAAKW,GACtBG,EAASb,EAAIjwD,QAAQ8wD,QAAUb,EAAIjwD,QAAQ8wD,OAAOtxD,mBAClDuxD,EAAUL,EAAYK,QACtBtN,EAAqBzsE,KAAK08D,MAAM3F,oBAEpC,SAASijB,IACM,MAATnvD,IACFA,EAAQimC,EAAMmpB,QAAUP,EAAYQ,eAIxC,SAASC,IAMP,OALIrpB,EAAMtwD,OAAS,GAAM,GACvBw5E,IAGFb,GAAUroB,EAAMtwD,QAAU,EACnBswD,EAAMtwD,OAAS,EAGxB,SAASmwE,EAAO5jC,EAAGwD,GACbhvC,GACFqwE,EAAKb,YAGPa,EAAKjB,OAAO5jC,EAAGwD,GACfhvC,GAAO,EA8kBT,OA3kBY,SAAS64E,IACnB,KAAO/nE,EAAOiH,IAAMI,GAAK,CACvB,IAAI2C,EAAKhK,EAAO+G,YAEhB,GAAIiD,EAAK,GACP,OAAQA,GACN,KAAK,EAEL,KAAK,EAEL,KAAK,GAEL,KAAK,GAEH89D,IACA,MAEF,KAAK,EAECrpB,EAAMtwD,OAAS,GACjBw5E,IAGFzpC,GAAKugB,EAAMmpB,QACXtJ,EAAO5jC,EAAGwD,GACV,MAEF,KAAK,EAEH,KAAOugB,EAAMtwD,QAAU,GACrBusC,GAAK+jB,EAAMmpB,QACX1pC,GAAKugB,EAAMmpB,QACXrI,EAAKhB,OAAO7jC,EAAGwD,GAGjB,MAEF,KAAK,EAEL,KAAK,EAIH,IAFA,IAAI8pC,EAAe,IAAPh+D,EAELy0C,EAAMtwD,QAAU,GACjB65E,EACFttC,GAAK+jB,EAAMmpB,QAEX1pC,GAAKugB,EAAMmpB,QAGbrI,EAAKhB,OAAO7jC,EAAGwD,GACf8pC,GAASA,EAGX,MAEF,KAAK,EAEH,KAAOvpB,EAAMtwD,OAAS,GAAG,CACvB,IAAI85E,EAAMvtC,EAAI+jB,EAAMmpB,QAChBM,EAAMhqC,EAAIugB,EAAMmpB,QAChBO,EAAMF,EAAMxpB,EAAMmpB,QAClBQ,EAAMF,EAAMzpB,EAAMmpB,QACtBltC,EAAIytC,EAAM1pB,EAAMmpB,QAChB1pC,EAAIkqC,EAAM3pB,EAAMmpB,QAChBrI,EAAKd,cAAcwJ,EAAKC,EAAKC,EAAKC,EAAK1tC,EAAGwD,GAG5C,MAEF,KAAK,GAEH,IAAI3pB,EAAQkqC,EAAM1yC,MAAQy7D,EACtBa,EAAOf,EAAM/yD,GAEjB,GAAI8zD,EAAM,CACRrB,EAAUzyD,IAAS,EACnB,IAAI4zB,EAAInoC,EAAOiH,IACXqhE,EAAIjhE,EACRrH,EAAOiH,IAAMohE,EAAK/gE,OAClBD,EAAMghE,EAAK/gE,OAAS+gE,EAAKl6E,OACzB45E,IACA/nE,EAAOiH,IAAMkhC,EACb9gC,EAAMihE,EAGR,MAEF,KAAK,GAEH,GAAI1B,EAAIzyE,SAAW,EACjB,MAGF,OAEF,KAAK,GAEH,GAAIyyE,EAAIzyE,SAAW,EACjB,MAGEsqD,EAAMtwD,OAAS,GACjBw5E,IAGEz4E,IACFqwE,EAAKb,YACLxvE,GAAO,GAGT,MAEF,KAAK,GAGD,GAAI03E,EAAIzyE,QAAU,EAChB,MAAM,IAAIlF,MAAM,4CAGlBy4E,EAAUjpB,EAAM1yC,MAChB,MAGJ,KAAK,GAGD,GAAI66D,EAAIzyE,QAAU,EAChB,MAAM,IAAIlF,MAAM,0CAGlB,IAAKmrE,EACH,MAAM,IAAInrE,MAAM,wCASlB,IANA,IAAIs5E,EAAcnO,EAAmBoO,eAAef,EAAQC,GACxD57D,EAAY2yC,EAAM1yC,MAClB08D,EAAc38D,EAAYy8D,EAAYp6E,OACtC+sC,EAAQujB,EAAMtwD,OAASs6E,EACvB95C,EAAOuM,EAAQpvB,EAEVxc,EAAI,EAAGA,EAAIwc,EAAWxc,IAAK,CAGlC,IAFA,IAAIo5E,EAAMjqB,EAAM9vB,EAAOr/B,GAEd2iE,EAAI,EAAGA,EAAIsW,EAAYp6E,OAAQ8jE,IACtCyW,GAAOH,EAAYtW,GAAKxT,EAAMvjB,KAGhCujB,EAAM9vB,EAAOr/B,GAAKo5E,EAGpB,KAAOD,KACLhqB,EAAM1yC,MAGR,MAGJ,KAAK,GAEL,KAAK,GAEH+7D,IACA9nE,EAAOiH,KAAO6/D,EAAS,GAAK,EAC5B,MAEF,KAAK,GAECroB,EAAMtwD,OAAS,GACjBw5E,IAGFjtC,GAAK+jB,EAAMmpB,QACX1pC,GAAKugB,EAAMmpB,QACXtJ,EAAO5jC,EAAGwD,GACV,MAEF,KAAK,GAECugB,EAAMtwD,OAAS,GACjBw5E,IAIFrJ,EADA5jC,GAAK+jB,EAAMmpB,QACD1pC,GACV,MAEF,KAAK,GAEH,KAAOugB,EAAMtwD,QAAU,GAAG,CACpB85E,EAAMvtC,EAAI+jB,EAAMmpB,QAChBM,EAAMhqC,EAAIugB,EAAMmpB,QAChBO,EAAMF,EAAMxpB,EAAMmpB,QAClBQ,EAAMF,EAAMzpB,EAAMmpB,QACtBltC,EAAIytC,EAAM1pB,EAAMmpB,QAChB1pC,EAAIkqC,EAAM3pB,EAAMmpB,QAChBrI,EAAKd,cAAcwJ,EAAKC,EAAKC,EAAKC,EAAK1tC,EAAGwD,GAG5CxD,GAAK+jB,EAAMmpB,QACX1pC,GAAKugB,EAAMmpB,QACXrI,EAAKhB,OAAO7jC,EAAGwD,GACf,MAEF,KAAK,GAEH,KAAOugB,EAAMtwD,QAAU,GACrBusC,GAAK+jB,EAAMmpB,QACX1pC,GAAKugB,EAAMmpB,QACXrI,EAAKhB,OAAO7jC,EAAGwD,GAGb+pC,EAAMvtC,EAAI+jB,EAAMmpB,QAChBM,EAAMhqC,EAAIugB,EAAMmpB,QAChBO,EAAMF,EAAMxpB,EAAMmpB,QAClBQ,EAAMF,EAAMzpB,EAAMmpB,QACtBltC,EAAIytC,EAAM1pB,EAAMmpB,QAChB1pC,EAAIkqC,EAAM3pB,EAAMmpB,QAChBrI,EAAKd,cAAcwJ,EAAKC,EAAKC,EAAKC,EAAK1tC,EAAGwD,GAC1C,MAEF,KAAK,GAMH,IAJIugB,EAAMtwD,OAAS,IACjBusC,GAAK+jB,EAAMmpB,SAGNnpB,EAAMtwD,QAAU,GACrB85E,EAAMvtC,EACNwtC,EAAMhqC,EAAIugB,EAAMmpB,QAChBO,EAAMF,EAAMxpB,EAAMmpB,QAClBQ,EAAMF,EAAMzpB,EAAMmpB,QAClBltC,EAAIytC,EACJjqC,EAAIkqC,EAAM3pB,EAAMmpB,QAChBrI,EAAKd,cAAcwJ,EAAKC,EAAKC,EAAKC,EAAK1tC,EAAGwD,GAG5C,MAEF,KAAK,GAMH,IAJIugB,EAAMtwD,OAAS,IACjB+vC,GAAKugB,EAAMmpB,SAGNnpB,EAAMtwD,QAAU,GACrB85E,EAAMvtC,EAAI+jB,EAAMmpB,QAChBM,EAAMhqC,EACNiqC,EAAMF,EAAMxpB,EAAMmpB,QAClBQ,EAAMF,EAAMzpB,EAAMmpB,QAClBltC,EAAIytC,EAAM1pB,EAAMmpB,QAChB1pC,EAAIkqC,EACJ7I,EAAKd,cAAcwJ,EAAKC,EAAKC,EAAKC,EAAK1tC,EAAGwD,GAG5C,MAEF,KAAK,GAEHugB,EAAM5vD,KAAKmR,EAAO0I,eAClB,MAEF,KAAK,GAKH,GAHA6L,EAAQkqC,EAAM1yC,MAAQq7D,EACtBiB,EAAOlB,EAAO5yD,GAEJ,CACRwyD,EAAWxyD,IAAS,EAChB4zB,EAAInoC,EAAOiH,IACXqhE,EAAIjhE,EACRrH,EAAOiH,IAAMohE,EAAK/gE,OAClBD,EAAMghE,EAAK/gE,OAAS+gE,EAAKl6E,OACzB45E,IACA/nE,EAAOiH,IAAMkhC,EACb9gC,EAAMihE,EAGR,MAEF,KAAK,GAEL,KAAK,GAIH,IAFAN,EAAe,KAAPh+D,EAEDy0C,EAAMtwD,QAAU,GACjB65E,GACFC,EAAMvtC,EAAI+jB,EAAMmpB,QAChBM,EAAMhqC,EACNiqC,EAAMF,EAAMxpB,EAAMmpB,QAClBQ,EAAMF,EAAMzpB,EAAMmpB,QAClB1pC,EAAIkqC,EAAM3pB,EAAMmpB,QAChBltC,EAAIytC,GAAwB,IAAjB1pB,EAAMtwD,OAAeswD,EAAMmpB,QAAU,KAEhDK,EAAMvtC,EACNwtC,EAAMhqC,EAAIugB,EAAMmpB,QAChBO,EAAMF,EAAMxpB,EAAMmpB,QAClBQ,EAAMF,EAAMzpB,EAAMmpB,QAClBltC,EAAIytC,EAAM1pB,EAAMmpB,QAChB1pC,EAAIkqC,GAAwB,IAAjB3pB,EAAMtwD,OAAeswD,EAAMmpB,QAAU,IAGlDrI,EAAKd,cAAcwJ,EAAKC,EAAKC,EAAKC,EAAK1tC,EAAGwD,GAC1C8pC,GAASA,EAGX,MAEF,KAAK,GAGH,OAFAh+D,EAAKhK,EAAO+G,aAGV,KAAK,EAEH,IAAIkI,EAAIwvC,EAAM1yC,MACVlD,EAAI41C,EAAM1yC,MACd0yC,EAAM5vD,KAAKogB,GAAKpG,EAAI,EAAI,GACxB,MAEF,KAAK,EAEHoG,EAAIwvC,EAAM1yC,MACVlD,EAAI41C,EAAM1yC,MACV0yC,EAAM5vD,KAAKogB,GAAKpG,EAAI,EAAI,GACxB,MAEF,KAAK,EAEHoG,EAAIwvC,EAAM1yC,MACV0yC,EAAM5vD,KAAKogB,EAAI,EAAI,GACnB,MAEF,KAAK,EAEHA,EAAIwvC,EAAM1yC,MACV0yC,EAAM5vD,KAAKoD,KAAKksC,IAAIlvB,IACpB,MAEF,KAAK,GAEHA,EAAIwvC,EAAM1yC,MACVlD,EAAI41C,EAAM1yC,MACV0yC,EAAM5vD,KAAKogB,EAAIpG,GACf,MAEF,KAAK,GAEHoG,EAAIwvC,EAAM1yC,MACVlD,EAAI41C,EAAM1yC,MACV0yC,EAAM5vD,KAAKogB,EAAIpG,GACf,MAEF,KAAK,GAEHoG,EAAIwvC,EAAM1yC,MACVlD,EAAI41C,EAAM1yC,MACV0yC,EAAM5vD,KAAKogB,EAAIpG,GACf,MAEF,KAAK,GAEHoG,EAAIwvC,EAAM1yC,MACV0yC,EAAM5vD,MAAMogB,GACZ,MAEF,KAAK,GAEHA,EAAIwvC,EAAM1yC,MACVlD,EAAI41C,EAAM1yC,MACV0yC,EAAM5vD,KAAKogB,IAAMpG,EAAI,EAAI,GACzB,MAEF,KAAK,GAEH41C,EAAM1yC,MACN,MAEF,KAAK,GAEH,IAAIlL,EAAM49C,EAAM1yC,MACZm4C,EAAMzF,EAAM1yC,MAChB86D,EAAM3iB,GAAOrjD,EACb,MAEF,KAAK,GAEHqjD,EAAMzF,EAAM1yC,MACZ0yC,EAAM5vD,KAAKg4E,EAAM3iB,IAAQ,GACzB,MAEF,KAAK,GAEH,IAAIykB,EAAKlqB,EAAM1yC,MACX68D,EAAKnqB,EAAM1yC,MACX88D,EAAKpqB,EAAM1yC,MACX+8D,EAAKrqB,EAAM1yC,MACf0yC,EAAM5vD,KAAKg6E,GAAMC,EAAKH,EAAKC,GAC3B,MAEF,KAAK,GAEHnqB,EAAM5vD,KAAKoD,KAAK82E,UAChB,MAEF,KAAK,GAEH95D,EAAIwvC,EAAM1yC,MACVlD,EAAI41C,EAAM1yC,MACV0yC,EAAM5vD,KAAKogB,EAAIpG,GACf,MAEF,KAAK,GAEHoG,EAAIwvC,EAAM1yC,MACV0yC,EAAM5vD,KAAKoD,KAAK4vE,KAAK5yD,IACrB,MAEF,KAAK,GAEHA,EAAIwvC,EAAM1yC,MACV0yC,EAAM5vD,KAAKogB,EAAGA,GACd,MAEF,KAAK,GAEHA,EAAIwvC,EAAM1yC,MACVlD,EAAI41C,EAAM1yC,MACV0yC,EAAM5vD,KAAKga,EAAGoG,GACd,MAEF,KAAK,IAEHi1C,EAAMzF,EAAM1yC,OAEF,EACRm4C,EAAM,EACGA,EAAMzF,EAAMtwD,OAAS,IAC9B+1D,EAAMzF,EAAMtwD,OAAS,GAGvBswD,EAAM5vD,KAAK4vD,EAAMyF,IACjB,MAEF,KAAK,GAEH,IAAI8kB,EAAIvqB,EAAM1yC,MAEVomD,EAAK1T,EAAM1yC,MAEf,GAAIomD,GAAM,EACR,KAAOA,EAAK,GAAG,CAGb,IAFA,IAAIngE,EAAIysD,EAAMuqB,EAAI,GAET5oE,EAAK4oE,EAAI,EAAG5oE,GAAM,EAAGA,IAC5Bq+C,EAAMr+C,EAAK,GAAKq+C,EAAMr+C,GAGxBq+C,EAAM,GAAKzsD,EACXmgE,SAGF,KAAOA,EAAK,GAAG,CACTngE,EAAIysD,EAAM,GAEd,IAFA,IAESz2C,EAAM,EAAGA,GAAOghE,EAAGhhE,IAC1By2C,EAAMz2C,GAAOy2C,EAAMz2C,EAAM,GAG3By2C,EAAMuqB,EAAI,GAAKh3E,EACfmgE,IAIJ,MAEF,KAAK,GAEH8V,EAAMvtC,EAAI+jB,EAAMmpB,QAChBM,EAAMhqC,EACNiqC,EAAMF,EAAMxpB,EAAMmpB,QAClBQ,EAAMF,EAAMzpB,EAAMmpB,QAClB,IAAIqB,GAAMd,EAAM1pB,EAAMmpB,QAClBsB,GAAMd,EACNe,GAAMF,GAAMxqB,EAAMmpB,QAClBwB,GAAMF,GACNG,GAAMF,GAAM1qB,EAAMmpB,QAClB0B,GAAMF,GACNG,GAAMF,GAAM5qB,EAAMmpB,QAClB4B,GAAMF,GACV5uC,EAAI6uC,GACJrrC,EAAIsrC,GACJjK,EAAKd,cAAcwJ,EAAKC,EAAKC,EAAKC,EAAKa,GAAKC,IAC5C3J,EAAKd,cAAc0K,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,IAC5C,MAEF,KAAK,GAIH,IAFA,IAAIC,GAAM,GAEDrhE,GAAM,EAAGA,IAAO,EAAGA,KAC1BsyB,GAAK+jB,EAAMmpB,QACX1pC,GAAKugB,EAAMmpB,QACX6B,GAAI56E,KAAK6rC,EAAGwD,GAGdqhC,EAAKd,cAAchwE,MAAM8wE,EAAMkK,GAAI9wC,MAAM,EAAG,IAC5C4mC,EAAKd,cAAchwE,MAAM8wE,EAAMkK,GAAI9wC,MAAM,IACzC8lB,EAAMmpB,QAEN,MAEF,KAAK,GAEHK,EAAMvtC,EAAI+jB,EAAMmpB,QAChBM,EAAMhqC,EAAIugB,EAAMmpB,QAChBO,EAAMF,EAAMxpB,EAAMmpB,QAKlBwB,GAFAF,GAFAd,EAAMF,EAAMzpB,EAAMmpB,QAKlByB,IAFAF,IAFAF,GAAMd,EAAM1pB,EAAMmpB,SAENnpB,EAAMmpB,SAENnpB,EAAMmpB,QAClB0B,GAAMF,GAAM3qB,EAAMmpB,QAClB2B,GAAMF,GAAM5qB,EAAMmpB,QAElBltC,EAAI6uC,GACJrrC,EAFAsrC,GAAMF,GAGN/J,EAAKd,cAAcwJ,EAAKC,EAAKC,EAAKC,EAAKa,GAAKC,IAC5C3J,EAAKd,cAAc0K,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,IAC5C,MAEF,KAAK,GAEH,IAAIE,GAAShvC,EACTivC,GAASzrC,EACburC,GAAM,GAEN,IAAK,IAAI1+D,GAAM,EAAGA,IAAO,EAAGA,KAC1B2vB,GAAK+jB,EAAMmpB,QACX1pC,GAAKugB,EAAMmpB,QACX6B,GAAI56E,KAAK6rC,EAAGwD,GAGVjsC,KAAKksC,IAAIzD,EAAIgvC,IAAUz3E,KAAKksC,IAAID,EAAIyrC,KAEtCjvC,GAAK+jB,EAAMmpB,QACX1pC,EAAIyrC,KAEJjvC,EAAIgvC,GACJxrC,GAAKugB,EAAMmpB,SAGb6B,GAAI56E,KAAK6rC,EAAGwD,GACZqhC,EAAKd,cAAchwE,MAAM8wE,EAAMkK,GAAI9wC,MAAM,EAAG,IAC5C4mC,EAAKd,cAAchwE,MAAM8wE,EAAMkK,GAAI9wC,MAAM,IACzC,MAEF,QACE,MAAM,IAAI1pC,MAAM,kBAAoB+a,GAGxC,MAEF,QACE,MAAM,IAAI/a,MAAM,eAAiB+a,QAEhC,GAAIA,EAAK,IACdy0C,EAAM5vD,KAAKmb,EAAK,UACX,GAAIA,EAAK,IAAK,CACnB,IAAI4/D,GAAK5pE,EAAO+G,YAChB03C,EAAM5vD,KAAkB,KAAZmb,EAAK,KAAa4/D,GAAK,UAC9B,GAAI5/D,EAAK,IAAK,CACf4/D,GAAK5pE,EAAO+G,YAChB03C,EAAM5vD,KAAmB,MAAZmb,EAAK,KAAa4/D,GAAK,UAEpCnrB,EAAM5vD,KAAKmR,EAAO2I,cAAgB,QAKxCo/D,GAEI74E,GACFqwE,EAAKb,YAGAa,GAGFkH,EA5pBM,CA6pBbrE,IAEEyH,GAAY,IAAI,IAAEj6E,OAAO,CAC3Bk6E,QAAS,IAAEh6E,OACXi6E,QAAS,IAAEj6E,OACXuB,KAAM,IAAI,IAAE8N,OAAO,GACnBqa,KAAM,IAAI,IAAEzY,QAAO,SAAU/O,GAC3B,OAAOA,EAAE2E,OAAOqzE,OAASh4E,EAAEe,oBAO3Bk3E,GAAY,SAAUC,GAGxB,SAASD,IAEP,OADA9kE,EAAexX,KAAMs8E,GACd7jE,GAA0BzY,KAAMu8E,EAAUz7E,MAAMd,KAAMO,YAoD/D,OAxDA6X,GAASkkE,EAAWC,GAgBpBD,EAAU/kE,UAAUilE,gBAAkB,SAAyBjpE,GAC7D,IAAK,IAAI5R,EAAI,EAAGA,EAAI3B,KAAK08D,MAAM/tC,KAAKE,YAAYruB,OAAQmB,IAAK,CAC3D,IAAI0E,EAAQrG,KAAK08D,MAAM/tC,KAAKE,YAAYltB,GAExC,GAAI0E,EAAMmoB,MAAQjb,EAChB,MAIJ,IAAIoD,EAAUtQ,EAAMqoB,aAChBjV,EAAQ9C,EAAQ3W,KAAKsuC,IACrB50B,EAAM/C,EAAQ3W,KAAKsuC,GAAK,GAE5B,OAAI70B,IAAUC,EACL,MAGT1Z,KAAK08D,MAAMrqD,OAAOiH,IAAMG,EACjByiE,GAAUljE,OAAOhZ,KAAK08D,MAAMrqD,OAAQ,CACzCgqE,OAAQ3iE,EAAMD,MAIlB6iE,EAAU/kE,UAAUo+D,OAAS,SAAgB78D,EAAKvF,GAChD,IAAIkpE,EAAMz8E,KAAKw8E,gBAAgBjpE,GAE/B,GAAW,MAAPkpE,EAAa,CACf,IAAI/J,EAAQn/D,EAAOvT,KAAK08D,MAAMz1D,WAC9B6R,EAAI4jE,MAAMD,EAAI5wD,KAAM,CAClBjB,OAAQrX,EACRw5B,EAAG0vC,EAAIN,QACP5rC,GAAIvwC,KAAKu6C,KAAKtK,KAAOwsC,EAAIL,SAAW1J,IAIpC1yE,KAAK08D,MAAM/tC,KAAK3nB,MAAM21E,gBACxBJ,EAAUhlE,UAAUo+D,OAAO51E,KAAKC,KAAM8Y,EAAKvF,IAIxC+oE,EAzDO,CA0Dd7F,IAEEmG,GAAY,SAASA,EAAUrzD,EAAOszD,GACxCrlE,EAAexX,KAAM48E,GACrB58E,KAAKupB,MAAQA,EACbvpB,KAAK68E,MAAQA,GASXC,GAAY,SAAUpG,GAGxB,SAASoG,IAEP,OADAtlE,EAAexX,KAAM88E,GACdrkE,GAA0BzY,KAAM02E,EAAO51E,MAAMd,KAAMO,YAgG5D,OApGA6X,GAAS0kE,EAAWpG,GAOpBoG,EAAUvlE,UAAUq9D,SAAW,WAG7B,IAFA,IAAIr6B,EAAO,IAAInK,GAENzuC,EAAI,EAAGA,EAAI3B,KAAK+8E,OAAOv8E,OAAQmB,IAAK,CAC3C,IACIuZ,EADQlb,KAAK+8E,OAAOp7E,GACV4nB,MAAMgxB,KACpBA,EAAKjK,SAASp1B,EAAEu0B,KAAMv0B,EAAE+0B,MACxBsK,EAAKjK,SAASp1B,EAAE80B,KAAM90B,EAAEg1B,MAG1B,OAAOqK,GASTuiC,EAAUvlE,UAAUo+D,OAAS,SAAgB78D,EAAKvF,GAC3C,IAAIjB,EAAYtS,KAAK+8E,OAAQxqE,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAA5E,IAA+EH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CAChJ,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAGZ,IAAIwa,EAAQ1H,EACR2W,EAAQjP,EAAMiP,MACdszD,EAAQviE,EAAMuiE,MAClB/jE,EAAIkkE,UAAU,CAACH,EAAMltD,IAAKktD,EAAMntD,MAAOmtD,EAAMptD,MAAOotD,EAAMjtD,MAAQ,IAAM,KACxErG,EAAMosD,OAAO78D,EAAKvF,KAMtBqE,GAAYklE,EAAW,CAAC,CACtBn9E,IAAK,SACLE,IAAK,WAMH,IALA,IAAIo9E,EAAOj9E,KAAK08D,MAAM7sC,KAClBqtD,EAAOl9E,KAAK08D,MAAMvtC,KAClBtF,EAAM,EACNC,EAAOozD,EAAK7tD,gBAAgB7uB,OAAS,EAElCqpB,GAAOC,GAAM,CAClB,IAAIC,EAAMF,EAAMC,GAAQ,EACpBqzD,EAAMD,EAAK7tD,gBAAgBtF,GAE/B,GAAI/pB,KAAKsuC,GAAK6uC,EAAIzzD,IAChBI,EAAOC,EAAM,MACR,MAAI/pB,KAAKsuC,GAAK6uC,EAAIzzD,KAElB,CACL,IAAI0zD,EAAYD,EAChB,MAHAtzD,EAAME,EAAM,GAShB,GAAiB,MAAbqzD,EAAmB,CACrB,IAAI3vC,EAAIztC,KAAK08D,MAAM2gB,cAAcr9E,KAAKsuC,IAQtC,MAAO,CAAC,IAAIsuC,GAAUnvC,EANlBovC,EAAQ,CACVltD,IAAK,EACLD,MAAO,EACPD,KAAM,EACNG,MAAO,OAQX,IAFA,IAAImtD,EAAS,GAEJp7E,EAAIy7E,EAAUnuD,gBAAiBttB,EAAIy7E,EAAUnuD,gBAAkBmuD,EAAUluD,UAAWvtB,IAAK,CAC5Fw7E,EAAMD,EAAK5tD,aAAa3tB,GAA5B,IACIk7E,EAAQI,EAAKhtD,aAAaktD,EAAIpuD,cAE9B0e,EAAIztC,KAAK08D,MAAM2gB,cAAcF,EAAIzzD,KAErCqzD,EAAO77E,KAAK,IAAI07E,GAAUnvC,EAAGovC,IAG/B,OAAOE,MAGJD,EArGO,CAsGdrI,IAyBE6I,GAA0B,WAC5B,SAASA,EAAwBz7E,EAAMm2D,GACrCxgD,EAAexX,KAAMs9E,GACrBt9E,KAAK6B,KAAOA,EACZ7B,KAAKi3D,iBAAmBj3D,KAAKu9E,gBAAgBvlB,GAC7Ch4D,KAAKw9E,aAAe,IAAIp9E,IAud1B,OApdAk9E,EAAwB/lE,UAAUgmE,gBAAkB,SAAyBvlB,GAK3E,IAFA,IAAIylB,EAAa,GAER97E,EAAI,EAAGA,EAAI3B,KAAK6B,KAAK4iC,KAAKK,KAAKtkC,OAAQmB,IAAK,CACnD,IAAImjC,EAAO9kC,KAAK6B,KAAK4iC,KAAKK,KAAKnjC,GAE3Bq2D,EAAOr2D,GAAKmjC,EAAKX,aACnBs5C,EAAWv8E,MAAM82D,EAAOr2D,GAAKmjC,EAAKX,aAAe3oB,OAAOkiE,UAAY54C,EAAKX,aAAeW,EAAKZ,SAAW1oB,OAAOkiE,UAE/GD,EAAWv8E,MAAM82D,EAAOr2D,GAAKmjC,EAAKX,aAAe3oB,OAAOkiE,UAAY54C,EAAKV,SAAWU,EAAKX,aAAe3oB,OAAOkiE,UAMnH,GAAI19E,KAAK6B,KAAKg/B,KACZ,IAASl/B,EAAI,EAAGA,EAAI3B,KAAK6B,KAAKg/B,KAAKC,QAAQtgC,OAAQmB,IAGjD,IAFA,IAAIm/B,EAAU9gC,KAAK6B,KAAKg/B,KAAKC,QAAQn/B,GAE5B2iE,EAAI,EAAGA,EAAIxjC,EAAQF,eAAepgC,OAAQ8jE,IAAK,CACtD,IAAI31B,EAAO7N,EAAQF,eAAe0jC,GAElC,GAAIA,GAAK,GAAKmZ,EAAW97E,GAAKgtC,EAAKnO,UAAW,CAC5C,IAAI20B,EAAOr0B,EAAQF,eAAe0jC,EAAI,GACtCmZ,EAAW97E,KAAO87E,EAAW97E,GAAKwzD,EAAK30B,YAAcmO,EAAKlO,QAAU00B,EAAK10B,SAAWjlB,OAAOkiE,UAAY/uC,EAAKnO,UAAY20B,EAAK30B,UAAYhlB,OAAOkiE,SAAWvoB,EAAK10B,QAChK,OAMR,OAAOg9C,GAGTH,EAAwB/lE,UAAUqgE,gBAAkB,SAAyBluD,EAAKi0D,GAChF,GAAK39E,KAAK6B,KAAK4iC,MAASzkC,KAAK6B,KAAKojC,KAAlC,CAIA,IAAIA,EAAOjlC,KAAK6B,KAAKojC,KAErB,KAAIvb,GAAOub,EAAKvkB,YAAhB,CAIA,IAAI/G,EAASsrB,EAAKtuB,QAAQ+S,GAE1B,GAAI/P,IAAWsrB,EAAKtuB,QAAQ+S,EAAM,GAAlC,CAKA,IAAIrX,EAASrS,KAAK6B,KAAKwQ,OAGvB,GAFAA,EAAOiH,IAAMK,IAETtH,EAAOiH,KAAOjH,EAAO7R,QAAzB,CAIA,IAAIo9E,EAAavrE,EAAO6G,eACpBwrB,EAAe/qB,EAAStH,EAAO6G,eAEnC,GA/F6B,MA+FzB0kE,EAAyC,CAC3C,IAAIC,EAAOxrE,EAAOiH,IAClBjH,EAAOiH,IAAMorB,EACb,IAAIo5C,EAAe99E,KAAK+9E,eACxBr5C,EAAeryB,EAAOiH,IACtBjH,EAAOiH,IAAMukE,EAGf,IAAIG,EAAaL,EAAY/mE,KAAI,SAAU8hE,GACzC,OAAOA,EAAGnpC,UAEZquC,GAzGmB,KA2GnB,IAAK,IAAIj8E,EAAI,EAAGA,EAAIi8E,EAAYj8E,IAAK,CACnC,IAAIs8E,EAAgB5rE,EAAO6G,eACvB4kB,EAAazrB,EAAO6G,eAExB,GA9GqB,MA8GjB4kB,EAGF,IAFA,IAAIogD,EAAc,GAET58D,EAAI,EAAGA,EAAI2jB,EAAK/gB,UAAW5C,IAClC48D,EAAYh9E,KAAKmR,EAAO0I,cAAgB,WAErC,CACL,IAlHe,KAkHV+iB,IAAkCmH,EAAKC,iBAC1C,MAAM,IAAI5jC,MAAM,sBAGd48E,EAAcj5C,EAAKE,aAtHR,KAsHqBrH,GAGtC,GA3HmB,MA2HfA,EAAiC,CAGnC,IAFA,IAAIqgD,EAAc,GAETC,EAAK,EAAGA,EAAKn5C,EAAK/gB,UAAWk6D,IACpCD,EAAYj9E,KAAKmR,EAAO0I,cAAgB,OAK1C,IAFA,IAAIsjE,EAAY,GAEPC,EAAM,EAAGA,EAAMr5C,EAAK/gB,UAAWo6D,IACtCD,EAAUn9E,KAAKmR,EAAO0I,cAAgB,OAK1C,IAAIwjE,EAASv+E,KAAKw+E,YAAY1gD,EAAYogD,EAAaC,EAAaE,GAEpE,GAAe,IAAXE,EAAJ,CAKIV,EAAOxrE,EAAOiH,IAGlB,GAFAjH,EAAOiH,IAAMorB,EAjJS,KAmJlB5G,EACF,IAAIs5C,EAASp3E,KAAK+9E,oBAEd3G,EAAS0G,EAIf,IAAIW,EAA4B,IAAlBrH,EAAO52E,OAAem9E,EAAYn9E,OAAS42E,EAAO52E,OAC5Dk+E,EAAU1+E,KAAK2+E,aAAaF,GAC5BG,EAAU5+E,KAAK2+E,aAAaF,GAEhC,GAAsB,IAAlBrH,EAAO52E,OAET,IAAK,IAAIiS,EAAK,EAAGA,EAAKkrE,EAAYn9E,OAAQiS,IAAM,CAC9C,IAAI+kE,EAAQmG,EAAYlrE,GACxB+kE,EAAMzqC,GAAKzoC,KAAKotE,MAAMgN,EAAQjsE,GAAM8rE,GACpC/G,EAAMjnC,GAAKjsC,KAAKotE,MAAMkN,EAAQnsE,GAAM8rE,OAEjC,CAQL,IAPA,IAAIM,EAAYb,EAAWpnE,KAAI,SAAU8hE,GACvC,OAAOA,EAAGnpC,UAERuvC,EAAWnB,EAAY/mE,KAAI,WAC7B,OAAO,KAGAyD,EAAM,EAAGA,EAAM+8D,EAAO52E,OAAQ6Z,IAAO,CAC5C,IAAIk8C,EAAM6gB,EAAO/8D,GAEjB,GAAIk8C,EAAMonB,EAAYn9E,OAAQ,CAC5B,IAAI43E,EAASyG,EAAUtoB,GACvBuoB,EAASvoB,IAAO,EAChB6hB,EAAOrrC,GAAKzoC,KAAKotE,MAAMgN,EAAQrkE,GAAOkkE,GACtCnG,EAAO7nC,GAAKjsC,KAAKotE,MAAMkN,EAAQvkE,GAAOkkE,IAI1Cv+E,KAAK++E,yBAAyBF,EAAWb,EAAYc,GAErD,IAAK,IAAIrkE,EAAM,EAAGA,EAAMkjE,EAAYn9E,OAAQia,IAAO,CACjD,IAAIukE,EAASH,EAAUpkE,GAAKsyB,EAAIixC,EAAWvjE,GAAKsyB,EAC5CkyC,EAASJ,EAAUpkE,GAAK81B,EAAIytC,EAAWvjE,GAAK81B,EAChDotC,EAAYljE,GAAKsyB,GAAKiyC,EACtBrB,EAAYljE,GAAK81B,GAAK0uC,GAI1Bv6C,GAAgBu5C,EAChB5rE,EAAOiH,IAAMukE,OAvDXn5C,GAAgBu5C,QA2DtBX,EAAwB/lE,UAAUwmE,aAAe,WAC/C,IAAI1rE,EAASrS,KAAK6B,KAAKwQ,OACnBP,EAAQO,EAAO+G,YAvMA,IAyMftH,IACFA,GAzMqB,IAyMZA,IAAiC,EAAIO,EAAO+G,aAOvD,IAJA,IAAIg+D,EAAS,IAAI8H,YAAYptE,GACzBnQ,EAAI,EACJ61E,EAAQ,EAEL71E,EAAImQ,GAKT,IAJA,IAAIqtE,EAAM9sE,EAAO+G,YACbgmE,EAA0C,GAlNzB,IAkNLD,GACZh/E,EApNa,IAoNRg/E,EAAyB9sE,EAAOgtE,WAAahtE,EAAO+G,UAEpDkrD,EAAI,EAAGA,EAAI8a,GAAYz9E,EAAImQ,EAAOwyD,IACzCkT,GAASr3E,EAAGJ,KAAKsS,GACjB+kE,EAAOz1E,KAAO61E,EAIlB,OAAOJ,GAGTkG,EAAwB/lE,UAAUonE,aAAe,SAAsB7sE,GAKrE,IAJA,IAAIO,EAASrS,KAAK6B,KAAKwQ,OACnB1Q,EAAI,EACJgjB,EAAS,IAAI26D,WAAWxtE,GAErBnQ,EAAImQ,GAAO,CAChB,IAAIqtE,EAAM9sE,EAAO+G,YACbgmE,EAA0C,GAlOzB,GAkOLD,GAEhB,GAtOgB,IAsOZA,EACFx9E,GAAKy9E,OAIL,IAFA,IAAIj/E,EAxOW,GAwONg/E,EAAyB9sE,EAAO0I,YAAc1I,EAAO2lE,SAErD1T,EAAI,EAAGA,EAAI8a,GAAYz9E,EAAImQ,EAAOwyD,IACzC3/C,EAAOhjB,KAAOxB,EAAGJ,KAAKsS,GAK5B,OAAOsS,GAGT24D,EAAwB/lE,UAAUinE,YAAc,SAAqB1gD,EAAYogD,EAAaC,EAAaE,GAKzG,IAJA,IAAIZ,EAAaz9E,KAAKi3D,iBAClBhyB,EAAOjlC,KAAK6B,KAAKojC,KACjBs5C,EAAS,EAEJ58E,EAAI,EAAGA,EAAIsjC,EAAK/gB,UAAWviB,IAClC,GAAuB,IAAnBu8E,EAAYv8E,GAAhB,CAIA,GAAsB,IAAlB87E,EAAW97E,GACb,OAAO,EAGT,GAA0C,IAvQvB,MAuQdm8B,GAAwC,CAC3C,GAAI2/C,EAAW97E,GAAK2C,KAAKkmC,IAAI,EAAG0zC,EAAYv8E,KAAO87E,EAAW97E,GAAK2C,KAAKC,IAAI,EAAG25E,EAAYv8E,IACzF,OAAO,EAGT48E,GAAUA,EAASd,EAAW97E,GAAK6Z,OAAOkiE,UAAYQ,EAAYv8E,GAAK6Z,OAAOkiE,aACzE,CACL,GAAID,EAAW97E,GAAKw8E,EAAYx8E,IAAM87E,EAAW97E,GAAK08E,EAAU18E,GAC9D,OAAO,EAEP48E,EADSd,EAAW97E,GAAKu8E,EAAYv8E,GAC5B48E,GAAUd,EAAW97E,GAAKw8E,EAAYx8E,GAAK6Z,OAAOkiE,UAAYQ,EAAYv8E,GAAKw8E,EAAYx8E,GAAK6Z,OAAOkiE,SAEvGa,GAAUF,EAAU18E,GAAK87E,EAAW97E,GAAK6Z,OAAOkiE,UAAYW,EAAU18E,GAAKu8E,EAAYv8E,GAAK6Z,OAAOkiE,UAKlH,OAAOa,GAMTjB,EAAwB/lE,UAAUwnE,yBAA2B,SAAkC3H,EAAQmI,EAAUT,GAC/G,GAAsB,IAAlB1H,EAAO52E,OAMX,IAFA,IAAIg3E,EAAQ,EAELA,EAAQJ,EAAO52E,QAAQ,CAM5B,IALA,IAAIg/E,EAAahI,EAEbiI,EAAWjI,EACXkB,EAAKtB,EAAOqI,IAER/G,EAAGvC,YACTuC,EAAKtB,IAASqI,GAIhB,KAAOjI,GAASiI,IAAaX,EAAStH,IACpCA,IAGF,KAAIA,EAAQiI,GAAZ,CAIA,IAAIC,EAAalI,EACbmI,EAAWnI,EAGf,IAFAA,IAEOA,GAASiI,GAEVX,EAAStH,KACXx3E,KAAK4/E,iBAAiBD,EAAW,EAAGnI,EAAQ,EAAGmI,EAAUnI,EAAO+H,EAAUnI,GAC1EuI,EAAWnI,GAGbA,IAIEmI,IAAaD,EACf1/E,KAAK6/E,WAAWL,EAAYC,EAAUE,EAAUJ,EAAUnI,IAG1Dp3E,KAAK4/E,iBAAiBD,EAAW,EAAGF,EAAUE,EAAUD,EAAYH,EAAUnI,GAE1EsI,EAAa,GACf1/E,KAAK4/E,iBAAiBJ,EAAYE,EAAa,EAAGC,EAAUD,EAAYH,EAAUnI,IAItFI,EAAQiI,EAAW,KAIvBnC,EAAwB/lE,UAAUqoE,iBAAmB,SAA0B1M,EAAIC,EAAI2M,EAAMC,EAAMR,EAAUV,GAC3G,KAAI3L,EAAKC,GAMT,IAFA,IAAI6M,EAAW,CAAC,IAAK,KAEZr+E,EAAI,EAAGA,EAAIq+E,EAASx/E,OAAQmB,IAAK,CACxC,IAAIob,EAAIijE,EAASr+E,GAEjB,GAAI49E,EAASO,GAAM/iE,GAAKwiE,EAASQ,GAAMhjE,GAAI,CACzC,IAAIy9B,EAAIslC,EACRA,EAAOC,EACPA,EAAOvlC,EAGT,IAAIylC,EAAMV,EAASO,GAAM/iE,GACrBmjE,EAAMX,EAASQ,GAAMhjE,GACrBojE,EAAOtB,EAAUiB,GAAM/iE,GACvBqjE,EAAOvB,EAAUkB,GAAMhjE,GAG3B,GAAIkjE,IAAQC,GAAOC,IAASC,EAG1B,IAFA,IAAI1N,EAAQuN,IAAQC,EAAM,GAAKE,EAAOD,IAASD,EAAMD,GAE5CI,EAAKnN,EAAImN,GAAMlN,EAAIkN,IAAM,CAChC,IAAIC,EAAMf,EAASc,GAAItjE,GAEnBujE,GAAOL,EACTK,GAAOH,EAAOF,EACLK,GAAOJ,EAChBI,GAAOF,EAAOF,EAEdI,EAAMH,GAAQG,EAAML,GAAOvN,EAG7BmM,EAAUwB,GAAItjE,GAAKujE,KAM3BhD,EAAwB/lE,UAAUsoE,WAAa,SAAoB3M,EAAIC,EAAIoN,EAAKhB,EAAUV,GACxF,IAAIG,EAASH,EAAU0B,GAAKxzC,EAAIwyC,EAASgB,GAAKxzC,EAC1CkyC,EAASJ,EAAU0B,GAAKhwC,EAAIgvC,EAASgB,GAAKhwC,EAE9C,GAAe,IAAXyuC,GAA2B,IAAXC,EAIpB,IAAK,IAAIzkC,EAAI04B,EAAI14B,GAAK24B,EAAI34B,IACpBA,IAAM+lC,IACR1B,EAAUrkC,GAAGzN,GAAKiyC,EAClBH,EAAUrkC,GAAGjK,GAAK0uC,IAKxB3B,EAAwB/lE,UAAUg+D,qBAAuB,SAA8B7rD,EAAKrjB,GAC1F,IAAIi0B,OAAa,EACbC,OAAa,EAEjB,GAAIl0B,EAAMu0B,oBAAqB,CAC7B,IAAI27B,EAAM7sC,EAEN6sC,GAAOlwD,EAAMu0B,oBAAoBH,WACnC87B,EAAMlwD,EAAMu0B,oBAAoBH,SAAW,GAG3Bp0B,EAAMu0B,oBAAoBP,YAA5C,IACImmD,EAAwBn6E,EAAMu0B,oBAAoBF,QAAQ67B,GAC9Dj8B,EAAakmD,EAAsBlmD,WACnCC,EAAaimD,EAAsBjmD,gBAEnCD,EAAa,EACbC,EAAa7Q,EAGf,OAAO1pB,KAAK2sE,SAAStmE,EAAMmiB,mBAAoB8R,EAAYC,IAK7D+iD,EAAwB/lE,UAAUo1D,SAAW,SAAkB8T,EAAWnmD,EAAYC,GACpF,GAAID,GAAcmmD,EAAUr7D,kBAAkB5kB,OAC5C,OAAO,EAGT,IAAIkgF,EAAUD,EAAUr7D,kBAAkBkV,GAE1C,GAAIC,GAAcmmD,EAAQ17D,UAAUxkB,OAClC,OAAO,EAOT,IAJA,IAAImgF,EAAWD,EAAQ17D,UAAUuV,GAC7BqgD,EAAc56E,KAAK66E,eAAe4F,EAAWnmD,GAC7CsmD,EAAgB,EAEXC,EAAS,EAAGA,EAASH,EAAQh8D,iBAAkBm8D,IACtDD,GAAiBD,EAASh8D,OAAOk8D,GAAUjG,EAAYiG,GAGzD,OAAOD,GAGTtD,EAAwB/lE,UAAUsjE,eAAiB,SAAwB4F,EAAWnmD,GACpF,IAAIomD,EAAUD,EAAUr7D,kBAAkBkV,GAE1C,GAAIt6B,KAAKw9E,aAAa58E,IAAI8/E,GACxB,OAAO1gF,KAAKw9E,aAAa39E,IAAI6gF,GAM/B,IAHA,IAAIzpB,EAAmBj3D,KAAKi3D,iBACxB2jB,EAAc,GAETiG,EAAS,EAAGA,EAASH,EAAQh8D,iBAAkBm8D,IAAU,CAKhE,IAJA,IAAIC,EAAS,EACTC,EAAcL,EAAQ37D,cAAc87D,GACpCG,EAAOP,EAAUv7D,oBAAoBd,iBAAiB28D,GAEjDzc,EAAI,EAAGA,EAAI0c,EAAKxgF,OAAQ8jE,IAAK,CACpC,IAAIx/B,EAAOk8C,EAAK1c,GAuBhBwc,GAnBIh8C,EAAKhhB,WAAaghB,EAAK/gB,WAAa+gB,EAAK/gB,UAAY+gB,EAAK9gB,UAEnD8gB,EAAKhhB,WAAa,GAAKghB,EAAK9gB,SAAW,GAAwB,IAAnB8gB,EAAK/gB,WAE9B,IAAnB+gB,EAAK/gB,UAHD,EAKJkzC,EAAiBqN,GAAKx/B,EAAKhhB,YAAcmzC,EAAiBqN,GAAKx/B,EAAK9gB,SAChE,EAETizC,EAAiBqN,KAAOx/B,EAAK/gB,UAClB,EACJkzC,EAAiBqN,GAAKx/B,EAAK/gB,WACtBkzC,EAAiBqN,GAAKx/B,EAAKhhB,WAAatI,OAAOkiE,UAAY54C,EAAK/gB,UAAY+gB,EAAKhhB,WAAatI,OAAOkiE,UAErG54C,EAAK9gB,SAAWizC,EAAiBqN,GAAK9oD,OAAOkiE,UAAY54C,EAAK9gB,SAAW8gB,EAAK/gB,UAAYvI,OAAOkiE,SAQrH9C,EAAYiG,GAAUC,EAIxB,OADA9gF,KAAKw9E,aAAaz8E,IAAI2/E,EAAS9F,GACxBA,GAGF0C,EA5dqB,GA+d1B2D,GAAS,WACX,SAASA,EAAOp/E,GACd2V,EAAexX,KAAMihF,GACrBjhF,KAAK6B,KAAOA,EACZ7B,KAAK2gB,OAAS,GACd3gB,KAAKkhF,QAAU,GAEflhF,KAAKmhF,aAAa,GA4BpB,OAzBAF,EAAO1pE,UAAU4pE,aAAe,SAAsB53D,GAUpD,MATsE,iBAAhD,IAAVA,EAAwB,YAAclS,EAAQkS,MACxDA,EAAQA,EAAM+kB,IAGW,MAAvBtuC,KAAKkhF,QAAQ33D,KACfvpB,KAAK2gB,OAAOzf,KAAKqoB,GACjBvpB,KAAKkhF,QAAQ33D,GAASvpB,KAAK2gB,OAAOngB,OAAS,GAGtCR,KAAKkhF,QAAQ33D,IAGtB03D,EAAO1pE,UAAU6pE,aAAe,WAC9B,IAAIhlE,EAAQpc,KAERia,EAAI,IAAI,IAAEonE,aAMd,OALAjvE,EAAQkvE,UAAS,WAGf,OAFAllE,EAAMtC,OAAOG,GAENA,EAAEP,SAEJO,GAGFgnE,EAnCI,GA8CTM,GAAU,WACZ,SAAStL,IACPz+D,EAAexX,KAAMi2E,GAevB,OAZAA,EAAM1iE,KAAO,SAAcL,GACzB,OAAOA,GAAO,GAAKA,GAAO,IAAM,EAAI,GAGtC+iE,EAAMn8D,OAAS,SAAgBzH,EAAQvS,GACjCA,GAAS,GAAKA,GAAS,IACzBuS,EAAO6H,WAAWpa,GAElBuS,EAAOqJ,aAAa5b,IAIjBm2E,EAjBK,GAoBVuL,GAAO,IAAI,IAAEv/E,OAAO,CACtB+zE,iBAAkB,IAAE1zE,MAEpB8E,KAAM,IAAE9E,MACR+E,KAAM,IAAE/E,MACRgF,KAAM,IAAEhF,MACRiF,KAAM,IAAEjF,MACR+0E,iBAAkB,IAAI,IAAE32E,MAAM,IAAEyB,OAAQ,oBACxC6U,aAAc,IAAI,IAAEtW,MAAM,IAAEuC,MAAO,IAAEd,QACrC6E,MAAO,IAAI,IAAEtG,MAAM,IAAEuC,MAAO,GAC5Bw+E,QAAS,IAAI,IAAE/gF,MAAM6gF,GAAS,GAC9BG,QAAS,IAAI,IAAEhhF,MAAM6gF,GAAS,KAM5BI,GAAkB,WACpB,SAASA,IACPnqE,EAAexX,KAAM2hF,GAyHvB,OAtHAA,EAAgBpqE,UAAUqqE,aAAe,SAAsBhQ,GAY7D,IAXA,IAAI56D,EAAezW,UAAUC,OAAS,QAAsB2J,IAAjB5J,UAAU,GAAmBA,UAAU,GAAK,GACnF82E,EAAmB,GACnBoK,EAAU,GACVC,EAAU,GACV16E,EAAQ,GACR+vE,EAAO,EACP8K,EAAQ,EACRC,EAAQ,EACRC,EAAW,EACXC,EAAa,EAERrgF,EAAI,EAAGA,EAAIiwE,EAAKX,SAASzwE,OAAQmB,IAAK,CAG7C,IAFA,IAAI6rC,EAAIokC,EAAKX,SAAStvE,GAEb2iE,EAAI,EAAGA,EAAI92B,EAAE/sC,KAAKD,OAAQ8jE,GAAK,EAAG,CACzC,IAAIv3B,EAAIS,EAAE/sC,KAAK6jE,GACX/zB,EAAI/C,EAAE/sC,KAAK6jE,EAAI,GACfiT,EAAO,EAIX,GAAkB,qBAAd/pC,EAAE8jC,SAAwC,IAANhN,EAAS,CAC/C,IAAIzxD,EAAO++D,EAAKX,SAAStvE,EAAI,GAE7B,GAAIkR,GAAyB,qBAAjBA,EAAKy+D,QAAgC,CAC/C,IAAIsH,GAAQiJ,EAAQhvE,EAAKpS,KAAK,IAAM,EAChCo4E,GAAQiJ,EAAQjvE,EAAKpS,KAAK,IAAM,EAEpC,GAAIssC,IAAM6rC,GAAQroC,IAAMsoC,EACtB,UAMc,qBAAdrrC,EAAE8jC,SAAwC,IAANhN,IACxCiT,GAtFO,GAyFTA,EAAOv3E,KAAKiiF,aAAal1C,EAAG80C,EAAOJ,EAASlK,EAxF7B,EAGR,KAsFPA,EAAOv3E,KAAKiiF,aAAa1xC,EAAGuxC,EAAOJ,EAASnK,EAxF7B,EAGR,OAuFMwK,GAAYhL,EAAO,KAC9B/vE,EAAMA,EAAMxG,OAAS,IA1FhB,EA2FLu2E,MAEIA,EAAO,IACT/vE,EAAM9F,KAAK61E,GACXA,EAAO,GAGT/vE,EAAM9F,KAAKq2E,GACXwK,EAAWxK,GAGbsK,EAAQ90C,EACR+0C,EAAQvxC,EACRyxC,IAGgB,cAAdx0C,EAAE8jC,SACJ+F,EAAiBn2E,KAAK8gF,EAAa,GAKnCpQ,EAAKX,SAASzwE,OAAS,GAAyD,cAApDoxE,EAAKX,SAASW,EAAKX,SAASzwE,OAAS,GAAG8wE,SACtE+F,EAAiBn2E,KAAK8gF,EAAa,GAGrC,IAAIznC,EAAOq3B,EAAKr3B,KACZnjC,EAAO,CACT4+D,iBAAkBqB,EAAiB72E,OACnC4G,KAAMmzC,EAAK9K,KACXpoC,KAAMkzC,EAAKtK,KACX3oC,KAAMizC,EAAKvK,KACXzoC,KAAMgzC,EAAKrK,KACXmnC,iBAAkBA,EAClBrgE,aAAcA,EACdhQ,MAAOA,EACPy6E,QAASA,EACTC,QAASA,GAEPnuE,EAAOiuE,GAAKjuE,KAAK6D,GACjB+1B,EAAO,EAAI55B,EAAO,EAClBlB,EAAS,IAAI,IAAEgvE,aAAa9tE,EAAO45B,GAOvC,OANAq0C,GAAK1nE,OAAOzH,EAAQ+E,GAEP,IAAT+1B,GACF96B,EAAOwjE,KAAK,EAAG1oC,GAGV96B,EAAO3Q,QAGhBigF,EAAgBpqE,UAAU0qE,aAAe,SAAsBniF,EAAO2vD,EAAM2nB,EAAQG,EAAM2K,EAAWC,GACnG,IAAIC,EAAOtiF,EAAQ2vD,EAkBnB,OAhBI3vD,IAAU2vD,EACZ8nB,GAAQ4K,IAEH,KAAOC,GAAQA,GAAQ,MAC1B7K,GAAQ2K,EAEJE,EAAO,EACTA,GAAQA,EAER7K,GAAQ4K,GAIZ/K,EAAOl2E,KAAKkhF,IAGP7K,GAGFoK,EA3Ha,GA8HlBU,GAAY,SAAUC,GAGxB,SAASD,EAAUxgF,GACjB2V,EAAexX,KAAMqiF,GAErB,IAAIjmE,EAAQ3D,GAA0BzY,KAAMsiF,EAAQviF,KAAKC,KAAM6B,IAG/D,OADAua,EAAMmmE,aAAe,IAAIZ,GAClBvlE,EA4HT,OApIAhE,GAASiqE,EAAWC,GAWpBD,EAAU9qE,UAAUirE,UAAY,SAAmB94D,GACjD,IAAIH,EAAQvpB,KAAK6B,KAAKstD,SAASzlC,GAE3BtS,EAAOmS,EAAMytD,UAGbyL,EAAYziF,KAAK6B,KAAKoV,KAAKN,QAAQ+S,GACnCg5D,EAAa1iF,KAAK6B,KAAKoV,KAAKN,QAAQ+S,EAAM,GAE1CrX,EAASrS,KAAK6B,KAAK+0E,gBAAgB,QAEvCvkE,EAAOiH,KAAOmpE,EACd,IAAI/gF,EAAS2Q,EAAOmX,WAAWk5D,EAAaD,GAE5C,GAAIrrE,GAAQA,EAAK4+D,iBAAmB,EAAG,CACrCt0E,EAAS0R,EAAOq9D,KAAK/uE,GAEhB,IAAI4Q,EAAY8E,EAAK4U,WAAYzZ,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAAhF,IAAmFH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CACpJ,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAGZ,IAAIy6D,EAAY3nD,EAChB8W,EAAM1pB,KAAKmhF,aAAa5mB,EAAU33D,SAClClB,EAAOqY,cAAc2P,EAAK6wC,EAAUjhD,WAE7BlC,GAAQpX,KAAK6B,KAAKk1D,sBAE3Br1D,EAAS1B,KAAKuiF,aAAaX,aAAar4D,EAAMqoD,KAAMx6D,EAAKJ,eAU3D,OAPAhX,KAAKoX,KAAKlW,KAAKQ,GACf1B,KAAKiX,KAAKN,QAAQzV,KAAKlB,KAAK2Z,QAC5B3Z,KAAK8I,KAAKC,QAAQ7H,KAAK,CACrB0H,QAAS2gB,EAAM4zC,aACft0D,QAAS0gB,EAAMwrD,cAAcG,cAE/Bl1E,KAAK2Z,QAAUjY,EAAOlB,OACfR,KAAKoX,KAAK5W,OAAS,GAG5B6hF,EAAU9qE,UAAUuC,OAAS,SAAgBzH,GAM3CrS,KAAKoX,KAAO,GACZpX,KAAK2Z,OAAS,EACd3Z,KAAKiX,KAAO,CACVN,QAAS,IAEX3W,KAAK8I,KAAO,CACVC,QAAS,GACTE,SAAU,IAOZ,IAFA,IAAItH,EAAI,EAEDA,EAAI3B,KAAK2gB,OAAOngB,QACrBR,KAAKwiF,UAAUxiF,KAAK2gB,OAAOhf,MAG7B,IAAIuH,EAAO,IAAUlJ,KAAK6B,KAAKqH,MAC/BA,EAAKC,UAAYnJ,KAAKoX,KAAK5W,OAC3BR,KAAKiX,KAAKN,QAAQzV,KAAKlB,KAAK2Z,QAC5BjT,GAAOuQ,KAAKhE,UAAUlT,KAAKC,KAAKiX,MAChC,IAAItQ,EAAO,IAAU3G,KAAK6B,KAAK8E,MAC/BA,EAAKiB,iBAAmB5H,KAAKiX,KAAKzQ,QAClC,IAAIsB,EAAO,IAAU9H,KAAK6B,KAAKiG,MAC/BA,EAAKY,gBAAkB1I,KAAK8I,KAAKC,QAAQvI,OAuBzC4pC,GAAUtwB,OAAOzH,EAAQ,CACvB3L,OAAQ,CACNC,KAAMA,EACNmB,KAAMA,EACNmP,KAAMjX,KAAKiX,KACX/N,KAAMA,EACN,OAAQlJ,KAAK6B,KAAK,QAClBqV,KAAMlX,KAAK6B,KAAKqV,KAChBE,KAAMpX,KAAKoX,KACXtO,KAAM9I,KAAK8I,KACXiO,KAAM/W,KAAK6B,KAAKkV,SASfsrE,EArIO,CAsIdpB,IAEE0B,GAAY,SAAUL,GAGxB,SAASK,EAAU9gF,GACjB2V,EAAexX,KAAM2iF,GAErB,IAAIvmE,EAAQ3D,GAA0BzY,KAAMsiF,EAAQviF,KAAKC,KAAM6B,IAI/D,GAFAua,EAAM68D,IAAM78D,EAAMva,KAAK,SAElBua,EAAM68D,IACT,MAAM,IAAI33E,MAAM,kBAGlB,OAAO8a,EA6MT,OA1NAhE,GAASuqE,EAAWL,GAgBpBK,EAAUprE,UAAUqrE,kBAAoB,WACtC5iF,KAAK6iF,YAAc,GACnB,IAAIrJ,EAAS,GAEJlnE,EAAYtS,KAAK2gB,OAAQpO,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAA5E,IAA+EH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CAChJ,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAGZ,IAAI4pB,EAAM9W,EACV5S,KAAK6iF,YAAY3hF,KAAKlB,KAAKi5E,IAAI3vD,cAAcI,IAC7C,IAAIH,EAAQvpB,KAAK6B,KAAKstD,SAASzlC,GACpBH,EAAMqoD,KAEjB,IAAK,IAAI8I,KAAQnxD,EAAM+vD,YACrBE,EAAOkB,IAAQ,EAInB16E,KAAKw5E,OAASx5E,KAAK8iF,YAAY9iF,KAAKi5E,IAAIlwD,gBAAiBywD,IAG3DmJ,EAAUprE,UAAUurE,YAAc,SAAqBnJ,EAAOoJ,GAG5D,IAFA,IAAIr7D,EAAM,GAED/lB,EAAI,EAAGA,EAAIg4E,EAAMn5E,OAAQmB,IAAK,CACrC,IAAI+4E,EAAOf,EAAMh4E,GAEbohF,EAAKphF,IACP3B,KAAKi5E,IAAI5mE,OAAOiH,IAAMohE,EAAK/gE,OAC3B+N,EAAIxmB,KAAKlB,KAAKi5E,IAAI5mE,OAAOmX,WAAWkxD,EAAKl6E,UAEzCknB,EAAIxmB,KAAKkS,EAAOq9D,KAAK,CAAC,MAI1B,OAAO/oD,GAGTi7D,EAAUprE,UAAUyrE,eAAiB,SAAwBh6D,GAC3DA,EAAQiB,QAAU,GAClBjB,EAAQf,SAAW,CACjBzhB,QAAS,EACT0hB,IAAK,IAEP,IAAI+6D,EAAW,GACXC,EAAa,GAER/oE,EAAana,KAAK2gB,OAAQvG,EAAY1Z,MAAM8R,QAAQ2H,GAAaE,EAAM,EAAhF,IAAmFF,EAAaC,EAAYD,EAAaA,EAAWzH,OAAOC,cAAe,CACxJ,IAAI2H,EAEJ,GAAIF,EAAW,CACb,GAAIC,GAAOF,EAAW3Z,OAAQ,MAC9B8Z,EAAQH,EAAWE,SACd,CAEL,IADAA,EAAMF,EAAWtH,QACTC,KAAM,MACdwH,EAAQD,EAAIva,MAGd,IAAI4pB,EAAMpP,EACNyN,EAAK/nB,KAAKi5E,IAAIrvD,WAAWF,GAE7B,GAAU,MAAN3B,EAAJ,CAIKk7D,EAASl7D,KACZiB,EAAQiB,QAAQ/oB,KAAKjB,OAAOmiC,OAAO,GAAIpiC,KAAKi5E,IAAIjwD,QAAQiB,QAAQlC,KAChEm7D,EAAWhiF,KAAK,KAGlB+hF,EAASl7D,IAAM,EACfiB,EAAQf,SAASC,IAAIhnB,KAAK8nB,EAAQiB,QAAQzpB,OAAS,GACnD,IAAI+oB,EAAQvpB,KAAK6B,KAAKstD,SAASzlC,GACpBH,EAAMqoD,KAEjB,IAAK,IAAI8I,KAAQnxD,EAAMgwD,WACrB2J,EAAWA,EAAW1iF,OAAS,GAAGk6E,IAAQ,GAI9C,IAAK,IAAI/4E,EAAI,EAAGA,EAAIqnB,EAAQiB,QAAQzpB,OAAQmB,IAAK,CAC/C,IAAI+a,EAAOsM,EAAQiB,QAAQtoB,UACpB+a,EAAKymE,SAERzmE,EAAKwN,SAAWxN,EAAKwN,QAAQ0vD,QAC/Bl9D,EAAKwN,QAAUjqB,OAAOmiC,OAAO,GAAI1lB,EAAKwN,SACtCxN,EAAKwN,QAAQ0vD,MAAQ55E,KAAK8iF,YAAYpmE,EAAKwN,QAAQ0vD,MAAOsJ,EAAWvhF,OAO3EghF,EAAUprE,UAAU6rE,kBAAoB,SAA2Bp6D,GACjE,IAAIk6D,EAAa,GAER3oE,EAAava,KAAK2gB,OAAQnG,EAAY9Z,MAAM8R,QAAQ+H,GAAaE,EAAM,EAAhF,IAAmFF,EAAaC,EAAYD,EAAaA,EAAW7H,OAAOC,cAAe,CACxJ,IAAI+H,EAEJ,GAAIF,EAAW,CACb,GAAIC,GAAOF,EAAW/Z,OAAQ,MAC9Bka,EAAQH,EAAWE,SACd,CAEL,IADAA,EAAMF,EAAW1H,QACTC,KAAM,MACd4H,EAAQD,EAAI3a,MAGd,IAAI4pB,EAAMhP,EACN6O,EAAQvpB,KAAK6B,KAAKstD,SAASzlC,GACpBH,EAAMqoD,KAEjB,IAAK,IAAI8I,KAAQnxD,EAAMgwD,WACrB2J,EAAWxI,IAAQ,EAIvB,IAAIhB,EAAcz5E,OAAOmiC,OAAO,GAAIpiC,KAAKi5E,IAAIjwD,QAAQkB,SASrD,OAPIlqB,KAAKi5E,IAAIjwD,QAAQkB,SAAWlqB,KAAKi5E,IAAIjwD,QAAQkB,QAAQ0vD,QACvDF,EAAYE,MAAQ55E,KAAK8iF,YAAY9iF,KAAKi5E,IAAIjwD,QAAQkB,QAAQ0vD,MAAOsJ,IAGvEl6D,EAAQiB,QAAU,CAAC,CACjBC,QAASwvD,IAEJ1wD,EAAQf,SAAW,CACxBzhB,QAAS,EACT8gB,QAAS,EACTC,OAAQ,CAAC,CACPP,MAAO,EACPe,GAAI,IAENI,SAAUnoB,KAAK6iF,YAAYriF,SAI/BmiF,EAAUprE,UAAU8rE,UAAY,SAAmB9xE,GACjD,OAAKA,GAIAvR,KAAKuyD,UACRvyD,KAAKuyD,QAAU,IAGjBvyD,KAAKuyD,QAAQrxD,KAAKqQ,GACX8M,GAAgB7d,OAASR,KAAKuyD,QAAQ/xD,OAAS,GAR7C,MAWXmiF,EAAUprE,UAAUuC,OAAS,SAAgBzH,GAC3CrS,KAAK4iF,oBACL,IAAIj5D,EAAU,CACZnjB,QAASxG,KAAK6iF,YAAYriF,OAAS,IAAM,EAAI,EAC7C+mB,OAAQ,CAAC,CACPP,MAAO,EACPC,MAAOjnB,KAAK6iF,YAAYriF,OAAS,KAGjCwoB,EAAU/oB,OAAOmiC,OAAO,GAAIpiC,KAAKi5E,IAAIjwD,SACzCA,EAAQkB,QAAU,KAClBlB,EAAQW,QAAUA,EAClBX,EAAQs6D,SAAW,KACnBt6D,EAAQnB,YAAc7nB,KAAK6iF,YAG3B,IAFA,IAAIzO,EAAO,CAAC,UAAW,SAAU,YAAa,WAAY,aAAc,SAAU,aAAc,eAAgB,YAEvGh3D,EAAM,EAAGA,EAAMg3D,EAAK5zE,OAAQ4c,IAAO,CAC1C,IAAIzd,EAAMy0E,EAAKh3D,GACf4L,EAAQrpB,GAAOK,KAAKqjF,UAAUrjF,KAAKi5E,IAAI1nE,OAAOyX,EAAQrpB,KAGxDqpB,EAAQI,IAAM,CAACppB,KAAKqjF,UAAU,SAAUrjF,KAAKqjF,UAAU,YAAa,GACpEr6D,EAAQu6D,SAAWvjF,KAAK6iF,YAAYriF,OAEhCR,KAAKi5E,IAAI9vD,UACXnpB,KAAKgjF,eAAeh6D,GAEpBhpB,KAAKojF,kBAAkBp6D,GAGzB,IAAIE,EAAM,CACR1iB,QAAS,EACTuS,QAAS/Y,KAAKi5E,IAAIlgE,QAClBI,QAASnZ,KAAKi5E,IAAIz4E,OAClBiT,OAAQzT,KAAKi5E,IAAIxlE,OACjBmV,UAAW,CAAC5oB,KAAKi5E,IAAI53E,gBACrBwnB,aAAc,CAACG,GACfF,YAAa9oB,KAAKuyD,QAClBxpC,gBAAiB/oB,KAAKw5E,QAExB9wD,GAAO5O,OAAOzH,EAAQ6W,IAGjBy5D,EA3NO,CA4Nd1B,IAIF,SAASuC,GAA0B9jF,EAAQgrC,EAAUC,EAAY/qC,EAAYgrC,GAC3E,IAAIC,EAAO,GAyBX,OAxBA5qC,OAAkB,KAAEL,GAAYkrC,SAAQ,SAAUnrC,GAChDkrC,EAAKlrC,GAAOC,EAAWD,MAEzBkrC,EAAK9yB,aAAe8yB,EAAK9yB,WACzB8yB,EAAK7yB,eAAiB6yB,EAAK7yB,cAEvB,UAAW6yB,GAAQA,EAAKE,eAC1BF,EAAK5yB,UAAW,GAGlB4yB,EAAOF,EAAWK,QAAQC,UAAUC,QAAO,SAAUL,EAAMM,GACzD,OAAOA,EAAUzrC,EAAQgrC,EAAUG,IAASA,IAC3CA,GAECD,QAAgC,IAArBC,EAAKE,cAClBF,EAAK/qC,MAAQ+qC,EAAKE,YAAcF,EAAKE,YAAYhrC,KAAK6qC,QAAW,EACjEC,EAAKE,iBAAc5gC,QAGI,IAArB0gC,EAAKE,cACP9qC,OAA4B,eAAEP,EAAQgrC,EAAUG,GAChDA,EAAO,MAGFA,EAQT,IAAI44C,IAmmBCD,IAnmBUhP,GAAS,WAMtB,SAASiP,EAAQpxE,GACf,IAAIqxE,EAAkBnjF,UAAUC,OAAS,QAAsB2J,IAAjB5J,UAAU,GAAmBA,UAAU,GAAK,KAW1F,IAAK,IAAIqR,KAVT4F,EAAexX,KAAMyjF,GACrBzjF,KAAKqS,OAASA,EACdrS,KAAK0jF,gBAAkBA,EACvB1jF,KAAK2jF,cAAgB3jF,KAAKqS,OAAOiH,IACjCtZ,KAAK4jF,QAAU,GACf5jF,KAAKowD,QAAU,GAEfpwD,KAAK6jF,mBAGW7jF,KAAKq4E,UAAU3xE,OAAQ,CACrC,IAAIL,EAAQrG,KAAKq4E,UAAU3xE,OAAOkL,GAE9BlL,GAAOkL,IAAQvL,EAAM7F,OAAS,GAChCP,OAAOC,eAAeF,KAAM4R,EAAK,CAC/B/R,IAAKG,KAAK8jF,UAAU91B,KAAKhuD,KAAMqG,MA2kBvC,OAjmBAo9E,EAAQ7hF,MAAQ,SAAeF,GAC7B,IAAIT,EAASS,EAAOqiF,SAAS,QAAS,EAAG,GACzC,MAAkB,SAAX9iF,GAAgC,SAAXA,GAAqBA,IAAWuQ,OAAOkkE,aAAa,EAAG,EAAG,EAAG,IA0B3F+N,EAAQlsE,UAAUusE,UAAY,SAAmBz9E,GAC/C,KAAMA,EAAMuL,OAAO5R,KAAK4jF,SACtB,IACE5jF,KAAK4jF,QAAQv9E,EAAMuL,KAAO5R,KAAKgkF,aAAa39E,GAC5C,MAAOs0E,GACHp7E,EAAU0kF,YACZC,QAAQC,MAAM,wBAA0B99E,EAAMuL,KAC9CsyE,QAAQC,MAAMxJ,EAAE7pB,QAKtB,OAAO9wD,KAAK4jF,QAAQv9E,EAAMuL,MAG5B6xE,EAAQlsE,UAAUq/D,gBAAkB,SAAyBhlE,GAC3D,IAAIvL,EAAQrG,KAAKq4E,UAAU3xE,OAAOkL,GAElC,OAAIvL,GACFrG,KAAKqS,OAAOiH,IAAMjT,EAAMsT,OACjB3Z,KAAKqS,QAGP,MAGToxE,EAAQlsE,UAAUssE,iBAAmB,WACnC,OAAO7jF,KAAKq4E,UAAYjuC,GAAUpxB,OAAOhZ,KAAKqS,OAAQ,CACpDmK,aAAc,KAIlBinE,EAAQlsE,UAAUysE,aAAe,SAAsB39E,GACrD,IAAIiT,EAAMtZ,KAAKqS,OAAOiH,IAElBjH,EAASrS,KAAK42E,gBAAgBvwE,EAAMuL,KAEpC/Q,EAAS6F,GAAOL,EAAMuL,KAAKoH,OAAO3G,EAAQrS,KAAMqG,EAAM7F,QAE1D,OADAR,KAAKqS,OAAOiH,IAAMA,EACXzY,GAcT4iF,EAAQlsE,UAAU6sE,QAAU,SAAiBzkF,GAC3C,IAAI63D,EAAOj3D,UAAUC,OAAS,QAAsB2J,IAAjB5J,UAAU,GAAmBA,UAAU,GAAK,KAC3EwS,EAAS/S,KAAKohC,KAAKpvB,QAAQrS,GAE/B,OAAIoT,EACKA,EAAOykD,GAGT,MAeTisB,EAAQlsE,UAAUimD,qBAAuB,SAA8BrtB,GACrE,QAASnwC,KAAKwyD,eAAevmB,OAAOkE,IAWtCszC,EAAQlsE,UAAUgnD,kBAAoB,SAA2BpuB,GAC/D,OAAOnwC,KAAKmvD,SAASnvD,KAAKwyD,eAAevmB,OAAOkE,GAAY,CAACA,KAa/DszC,EAAQlsE,UAAUy4D,gBAAkB,SAAyBz+D,GAO3D,IANA,IAAIoP,EAAS,GACT7D,EAAMvL,EAAO/Q,OACb+1D,EAAM,EACN9G,GAAQ,EACRpC,GAAS,EAENkJ,GAAOz5C,GAAK,CACjB,IAAI69B,EAAO,EACPw1B,EAAY,EAEhB,GAAI5Z,EAAMz5C,EAAK,CAIb,GAAI,QAFJ69B,EAAOppC,EAAOq+D,WAAWrZ,OAEH5b,GAAQ,OAAU4b,EAAMz5C,EAAK,CACjD,IAAIjK,EAAOtB,EAAOq+D,WAAWrZ,GAEzB,OAAU1jD,GAAQA,GAAQ,QAC5B0jD,IACA5b,IAAgB,KAAPA,IAAiB,KAAc,KAAP9nC,GAAgB,OAKrDs9D,EAAY,OAAUx1B,GAAQA,GAAQ,OAAU,QAAWA,GAAQA,GAAQ,OAAU,EAAI,OAEzF4b,IAGY,IAAVlJ,GAA6B,IAAd8iB,EAEjBxvD,EAAOzf,KAAKlB,KAAKmvD,SAASnvD,KAAKwyD,eAAevmB,OAAOwjB,EAAM9U,GAAO,CAAC8U,EAAM9U,KACtD,IAAV0S,GAA6B,IAAd8iB,GAExBxvD,EAAOzf,KAAKlB,KAAKu+D,kBAAkB9O,IAGrCA,EAAO9U,EACP0S,EAAQ8iB,EAGV,OAAOxvD,GAcT8iE,EAAQlsE,UAAUo4D,OAAS,SAAgBp+D,EAAQ+iD,EAAcp1C,EAAQnb,EAAUo2C,GACjF,OAAOn6C,KAAKujE,cAAcoM,OAAOp+D,EAAQ+iD,EAAcp1C,EAAQnb,EAAUo2C,IAQ3EspC,EAAQlsE,UAAU66C,gBAAkB,SAAyB1oC,GAC3D,OAAO1pB,KAAKujE,cAAcnR,gBAAgB1oC,IAY5C+5D,EAAQlsE,UAAUu6C,qBAAuB,SAA8B5yC,EAAQnb,GAC7E,OAAO/D,KAAKujE,cAAczR,qBAAqB5yC,EAAQnb,IAGzD0/E,EAAQlsE,UAAU8lE,cAAgB,SAAuB9zD,GACvD,IAAIwiD,EAAaxrE,UAAUC,OAAS,QAAsB2J,IAAjB5J,UAAU,GAAmBA,UAAU,GAAK,GAUrF,OARKP,KAAKowD,QAAQ7mC,KACZvpB,KAAKq4E,UAAU3xE,OAAO0Q,KACxBpX,KAAKowD,QAAQ7mC,GAAS,IAAIktD,GAASltD,EAAOwiD,EAAY/rE,OAC7CA,KAAKq4E,UAAU3xE,OAAO,SAAW1G,KAAKq4E,UAAU3xE,OAAOqyE,QAChE/4E,KAAKowD,QAAQ7mC,GAAS,IAAIuvD,GAASvvD,EAAOwiD,EAAY/rE,QAInDA,KAAKowD,QAAQ7mC,IAAU,MAahCk6D,EAAQlsE,UAAU43C,SAAW,SAAkB5lC,GAC7C,IAAIwiD,EAAaxrE,UAAUC,OAAS,QAAsB2J,IAAjB5J,UAAU,GAAmBA,UAAU,GAAK,GAYrF,OAVKP,KAAKowD,QAAQ7mC,KACZvpB,KAAKq4E,UAAU3xE,OAAOioB,KACxB3uB,KAAKowD,QAAQ7mC,GAAS,IAAI+yD,GAAU/yD,EAAOwiD,EAAY/rE,MAC9CA,KAAKq4E,UAAU3xE,OAAOyoB,MAAQnvB,KAAKq4E,UAAU3xE,OAAOmpB,KAC7D7vB,KAAKowD,QAAQ7mC,GAAS,IAAIuzD,GAAUvzD,EAAOwiD,EAAY/rE,MAEvDA,KAAKq9E,cAAc9zD,EAAOwiD,IAIvB/rE,KAAKowD,QAAQ7mC,IAAU,MAQhCk6D,EAAQlsE,UAAU8sE,aAAe,WAC/B,OAAIrkF,KAAKq4E,UAAU3xE,OAAO,QACjB,IAAIi8E,GAAU3iF,MAGhB,IAAIqiF,GAAUriF,OAoBvByjF,EAAQlsE,UAAU+sE,aAAe,SAAsBC,GACrD,IAAMvkF,KAAKq4E,UAAU3xE,OAAO+9B,QAASzkC,KAAKq4E,UAAU3xE,OAAOu+B,MAAQjlC,KAAKq4E,UAAU3xE,OAAO0Q,MAAQpX,KAAKq4E,UAAU3xE,OAAOqyE,MACrH,MAAM,IAAIz3E,MAAM,2EAOlB,GAJwB,iBAAbijF,IACTA,EAAWvkF,KAAKwkF,gBAAgBD,IAG0C,iBAAnD,IAAbA,EAA2B,YAAcltE,EAAQktE,IAC3D,MAAM,IAAIjjF,MAAM,0EAIlB,IAAI02D,EAASh4D,KAAKykC,KAAKK,KAAKluB,KAAI,SAAUkuB,EAAMnjC,GAC9C,IAAIsiC,EAAUa,EAAKb,QAAQwgD,OAE3B,OAAIxgD,KAAWsgD,EACNjgF,KAAKC,IAAIugC,EAAKZ,SAAU5/B,KAAKkmC,IAAI1F,EAAKV,SAAUmgD,EAAStgD,KAEzDa,EAAKX,gBAGZ9xB,EAAS,IAAI,IAAEvQ,aAAa9B,KAAKqS,OAAO3Q,QAC5C2Q,EAAOiH,IAAMtZ,KAAK2jF,cAClB,IAAI9hF,EAAO,IAAI4hF,EAAQpxE,EAAQ2lD,GAE/B,OADAn2D,EAAK+hF,QAAU5jF,KAAK4jF,QACb/hF,GAIT4hF,EAAQlsE,UAAUxV,QAAU,SAAiBq/B,GAC3C,OAAOphC,KAAKskF,aAAaljD,IAG3BxpB,GAAY6rE,EAAS,CAAC,CACpB9jF,IAAK,iBACLE,IAAK,WACH,IAAIuhC,EAAOphC,KAAKohC,KAAKpvB,QAAQ3Q,eAE7B,OAAI+/B,EAEKA,EADInhC,OAAOiyD,KAAK9wB,GAAM,IAIxB,OAER,CACDzhC,IAAK,WACLE,IAAK,WACH,OAAOG,KAAKokF,QAAQ,cAOrB,CACDzkF,IAAK,aACLE,IAAK,WACH,OAAOG,KAAKokF,QAAQ,gBAOrB,CACDzkF,IAAK,gBACLE,IAAK,WACH,OAAOG,KAAKokF,QAAQ,mBAOrB,CACDzkF,IAAK,YACLE,IAAK,WACH,OAAOG,KAAKokF,QAAQ,eAOrB,CACDzkF,IAAK,UACLE,IAAK,WACH,OAAOG,KAAKokF,QAAQ,aAOrB,CACDzkF,IAAK,SACLE,IAAK,WACH,OAAOG,KAAK8H,KAAKC,SAOlB,CACDpI,IAAK,UACLE,IAAK,WACH,OAAOG,KAAK8H,KAAKE,UAOlB,CACDrI,IAAK,UACLE,IAAK,WACH,OAAOG,KAAK8H,KAAKG,UAOlB,CACDtI,IAAK,oBACLE,IAAK,WACH,OAAOG,KAAK6V,KAAKG,oBAOlB,CACDrW,IAAK,qBACLE,IAAK,WACH,OAAOG,KAAK6V,KAAKI,qBAOlB,CACDtW,IAAK,cACLE,IAAK,WACH,OAAOG,KAAK6V,KAAKE,cAQlB,CACDpW,IAAK,YACLE,IAAK,WACH,IAAIy1E,EAAMt1E,KAAK,QACf,OAAOs1E,EAAMA,EAAIhgE,UAAYtV,KAAK+H,SAQnC,CACDpI,IAAK,UACLE,IAAK,WACH,IAAIy1E,EAAMt1E,KAAK,QACf,OAAOs1E,EAAMA,EAAIjgE,QAAU,IAO5B,CACD1V,IAAK,YACLE,IAAK,WACH,OAAOG,KAAKkJ,KAAKC,YAOlB,CACDxJ,IAAK,aACLE,IAAK,WACH,OAAOG,KAAK2G,KAAKM,aAOlB,CACDtH,IAAK,OACLE,IAAK,WACH,OAAOI,OAAO4yE,OAAO,IAAIziC,GAAKpwC,KAAK2G,KAAKS,KAAMpH,KAAK2G,KAAKU,KAAMrH,KAAK2G,KAAKW,KAAMtH,KAAK2G,KAAKY,SAEzF,CACD5H,IAAK,iBACLE,IAAK,WACH,OAAO,IAAI8rC,GAAc3rC,KAAKuG,QAO/B,CACD5G,IAAK,eACLE,IAAK,WACH,OAAOG,KAAKwyD,eAAevlB,oBAE5B,CACDttC,IAAK,gBACLE,IAAK,WACH,OAAO,IAAI2vE,GAAaxvE,QAEzB,CACDL,IAAK,oBACLE,IAAK,WACH,OAAOG,KAAKujE,cAAczR,yBAE3B,CACDnyD,IAAK,gBACLE,IAAK,WACH,IAAI6nB,EAAM,GAEV,IAAK1nB,KAAKykC,KACR,OAAO/c,EAGJ,IAAIpV,EAAYtS,KAAKykC,KAAKK,KAAMvyB,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAA/E,IAAkFH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CACnJ,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAGZ,IAAIglC,EAAOlyB,EACX8U,EAAIod,EAAKb,QAAQwgD,QAAU,CACzBrjD,KAAM0D,EAAK1D,KAAK9tB,GAChBk3B,IAAK1F,EAAKZ,SACVwgD,QAAS5/C,EAAKX,aACd5/B,IAAKugC,EAAKV,UAId,OAAO1c,IAUR,CACD/nB,IAAK,kBACLE,IAAK,WACH,IAAI6nB,EAAM,GAEV,IAAK1nB,KAAKykC,KACR,OAAO/c,EAGJ,IAAIvN,EAAana,KAAKykC,KAAKhtB,SAAU2C,EAAY1Z,MAAM8R,QAAQ2H,GAAaE,EAAM,EAAvF,IAA0FF,EAAaC,EAAYD,EAAaA,EAAWzH,OAAOC,cAAe,CAC/J,IAAI2H,EAEJ,GAAIF,EAAW,CACb,GAAIC,GAAOF,EAAW3Z,OAAQ,MAC9B8Z,EAAQH,EAAWE,SACd,CAEL,IADAA,EAAMF,EAAWtH,QACTC,KAAM,MACdwH,EAAQD,EAAIva,MAMd,IAHA,IAAI2X,EAAW6C,EACXiqE,EAAW,GAEN5iF,EAAI,EAAGA,EAAI3B,KAAKykC,KAAKK,KAAKtkC,OAAQmB,IAAK,CAE9C4iF,EADWvkF,KAAKykC,KAAKK,KAAKnjC,GACZsiC,QAAQwgD,QAAUhtE,EAAS6sB,MAAM3iC,GAGjD+lB,EAAIjQ,EAAS2pB,KAAK9tB,IAAMixE,EAG1B,OAAO78D,IAER,CACD/nB,IAAK,sBACLE,IAAK,WACH,IAAKG,KAAKykC,KACR,OAAO,KAGT,IAAIi/C,EAAkB1jF,KAAK0jF,gBAE3B,OAAKA,GAAoB1jF,KAAK+4E,MAIzB2K,IACHA,EAAkB1jF,KAAKykC,KAAKK,KAAKluB,KAAI,SAAUkuB,GAC7C,OAAOA,EAAKX,iBAIT,IAAIm5C,GAAwBt9E,KAAM0jF,IAThC,SAYND,EAlmBe,IAmmBclsE,UAAW,OAAQ,CAAC9X,GAAQQ,OAAOkuC,yBAAyBqmC,GAAOj9D,UAAW,QAASi9D,GAAOj9D,WAAYisE,GAA0BhP,GAAOj9D,UAAW,iBAAkB,CAAC9X,GAAQQ,OAAOkuC,yBAAyBqmC,GAAOj9D,UAAW,kBAAmBi9D,GAAOj9D,WAAYisE,GAA0BhP,GAAOj9D,UAAW,eAAgB,CAAC9X,GAAQQ,OAAOkuC,yBAAyBqmC,GAAOj9D,UAAW,gBAAiBi9D,GAAOj9D,WAAYisE,GAA0BhP,GAAOj9D,UAAW,gBAAiB,CAAC9X,GAAQQ,OAAOkuC,yBAAyBqmC,GAAOj9D,UAAW,iBAAkBi9D,GAAOj9D,WAAYisE,GAA0BhP,GAAOj9D,UAAW,gBAAiB,CAAC9X,GAAQQ,OAAOkuC,yBAAyBqmC,GAAOj9D,UAAW,iBAAkBi9D,GAAOj9D,WAAYisE,GAA0BhP,GAAOj9D,UAAW,kBAAmB,CAAC9X,GAAQQ,OAAOkuC,yBAAyBqmC,GAAOj9D,UAAW,mBAAoBi9D,GAAOj9D,WAAYisE,GAA0BhP,GAAOj9D,UAAW,sBAAuB,CAAC9X,GAAQQ,OAAOkuC,yBAAyBqmC,GAAOj9D,UAAW,uBAAwBi9D,GAAOj9D,WAAYi9D,IAC1kCmQ,GAAqB,IAAI,IAAE1iF,OAAO,CACpC2P,IAAK,IAAI,IAAEJ,OAAO,GAClBmI,OAAQ,IAAI,IAAElW,QAAQ,IAAEf,OAAQ,OAAQ,CACtCgB,KAAM,WAERkhF,WAAY,IAAEliF,OACdlC,OAAQ,IAAEkC,OACVmiF,aAAc,IAAEniF,SAEdoiF,GAAgB,IAAI,IAAE7iF,OAAO,CAC/B2P,IAAK,IAAI,IAAEJ,OAAO,GAElBuzE,OAAQ,IAAEriF,OACVlC,OAAQ,IAAEkC,OACV2nC,UAAW,IAAEloC,OACbqD,SAAU,IAAI,IAAEN,SAAS,IAAE/C,QAC3B6iF,cAAe,IAAEtiF,OACjB4jB,aAAc,IAAEnkB,OAChBokB,aAAc,IAAEpkB,OAChB8iF,WAAY,IAAEviF,OACdwiF,WAAY,IAAExiF,OACdyiF,eAAgB,IAAEziF,OAClB0iF,WAAY,IAAE1iF,OACd2iF,WAAY,IAAE3iF,OACdgE,OAAQ,IAAI,IAAEhG,MAAMikF,GAAoB,eAG1CG,GAAc1yE,QAAU,WACtB,IAAIg5B,EAAY,GAEP94B,EAAYtS,KAAK0G,OAAQ6L,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAA5E,IAA+EH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CAChJ,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAGZ,IAAIuG,EAAQuM,EACZw4B,EAAU/kC,EAAMuL,KAAOvL,EAGzBrG,KAAK0G,OAAS0kC,GAGhB,IAAIk6C,GAAW,SAAUC,GAGvB,SAASD,IAEP,OADA9tE,EAAexX,KAAMslF,GACd7sE,GAA0BzY,KAAMulF,EAASzkF,MAAMd,KAAMO,YAiC9D,OArCA6X,GAASktE,EAAUC,GAOnBD,EAAS1jF,MAAQ,SAAeF,GAC9B,MAA0C,SAAnCA,EAAOqiF,SAAS,QAAS,EAAG,IAGrCuB,EAAS/tE,UAAUssE,iBAAmB,WACpC7jF,KAAKq4E,UAAYyM,GAAc9rE,OAAOhZ,KAAKqS,OAAQ,CACjDmK,aAAc,KAIlB8oE,EAAS/tE,UAAUq/D,gBAAkB,SAAyBhlE,GAC5D,IAAIvL,EAAQrG,KAAKq4E,UAAU3xE,OAAOkL,GAElC,GAAIvL,EAAO,CAGT,GAFArG,KAAKqS,OAAOiH,IAAMjT,EAAMsT,OAEpBtT,EAAMu+E,WAAav+E,EAAM7F,OAAQ,CACnCR,KAAKqS,OAAOiH,KAAO,EAEnB,IAAIksE,EAAYpyE,EAAOqyE,MAAMp/E,EAAM7F,QAC/B4rC,EAAM,IAAQpsC,KAAKqS,OAAOmX,WAAWnjB,EAAMu+E,WAAa,GAAIY,GAChE,OAAO,IAAI,IAAE1jF,aAAasqC,GAE1B,OAAOpsC,KAAKqS,OAIhB,OAAO,MAGFizE,EAtCM,CAuCb7B,IAEEiC,GAAY,IAAI,IAAE7hF,gBAAgB,IAAEnB,OAAQ,CAC9C,MAAY,CACVijF,SAAU,IAAEjjF,OACZiU,QAAS,IAAI,IAAEjW,MAAM,IAAEgC,OAAQ,aAEjC,OAAY,CACVijF,SAAU,IAAEjjF,OACZiU,QAAS,IAAI,IAAEjW,MAAM,IAAEgC,OAAQ,YAC/BkjF,QAAS,IAAEljF,OACXmjF,WAAY,IAAEnjF,OACdojF,WAAY,IAAEpjF,UAIdqjF,GAAqB,WAKvB,SAASA,EAAmB1zE,GAI1B,GAHAmF,EAAexX,KAAM+lF,GACrB/lF,KAAKqS,OAASA,EAEe,SAAzBA,EAAO2zE,WAAW,GACpB,MAAM,IAAI1kF,MAAM,6BAGlBtB,KAAKyT,OAASiyE,GAAU1sE,OAAO3G,GAuDjC,OAnEA0zE,EAAmBnkF,MAAQ,SAAeF,GACxC,MAA0C,SAAnCA,EAAOqiF,SAAS,QAAS,EAAG,IAcrCgC,EAAmBxuE,UAAUxV,QAAU,SAAiBq/B,GACjD,IAAI9uB,EAAYtS,KAAKyT,OAAOkD,QAASpE,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAApF,IAAuFH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CACxJ,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAGZ,IAAI6Z,EAAS/G,EACTP,EAAS,IAAI,IAAEvQ,aAAa9B,KAAKqS,OAAO3Q,QAC5C2Q,EAAOiH,IAAMK,EACb,IAAI9X,EAAO,IAAI4hF,GAAQpxE,GAEvB,GAAIxQ,EAAKR,iBAAmB+/B,EAC1B,OAAOv/B,EAIX,OAAO,MAGT+V,GAAYmuE,EAAoB,CAAC,CAC/BpmF,IAAK,QACLE,IAAK,WACH,IAAIomF,EAAQ,GAEH9rE,EAAana,KAAKyT,OAAOkD,QAASyD,EAAY1Z,MAAM8R,QAAQ2H,GAAaE,EAAM,EAAxF,IAA2FF,EAAaC,EAAYD,EAAaA,EAAWzH,OAAOC,cAAe,CAChK,IAAI2H,EAEJ,GAAIF,EAAW,CACb,GAAIC,GAAOF,EAAW3Z,OAAQ,MAC9B8Z,EAAQH,EAAWE,SACd,CAEL,IADAA,EAAMF,EAAWtH,QACTC,KAAM,MACdwH,EAAQD,EAAIva,MAGd,IAAI6Z,EAASW,EACTjI,EAAS,IAAI,IAAEvQ,aAAa9B,KAAKqS,OAAO3Q,QAC5C2Q,EAAOiH,IAAMK,EACbssE,EAAM/kF,KAAK,IAAIuiF,GAAQpxE,IAGzB,OAAO4zE,MAGJF,EApEgB,GAuErBG,GAAY,IAAI,IAAE10E,OAAO,IAAEvO,OAK3BkjF,IAJY,IAAI,IAAElkF,OAAO,CAC3B6a,IAAK,IAAEpa,OACP0pC,IAAK,IAAI,IAAEh5B,OAAO,SAEV,IAAI,IAAEnR,OAAO,CACrBqsC,GAAI,IAAEnsC,OACNikF,WAAY,IAAE9jF,MACd+jF,KAAM,IAAEpjF,MACRqjF,WAAY,IAAEvjF,OACdwjF,OAAQ,IAAE7jF,UAER8jF,GAAO,IAAI,IAAEvkF,OAAO,CACtBm/B,KAAM,IAAI,IAAE5vB,OAAO,GACnBi1E,aAAc,IAAEtkF,OAChBukF,QAAS,IAAI,IAAEjjF,QAAQ,IAAEtB,OAAQ,IAAI,IAAEzB,MAAMylF,IAAK,SAAU9hF,GAC1D,OAAOA,EAAEoiF,aAAe,KACtB,CACF/iF,KAAM,aAGNijF,GAAW,IAAI,IAAE1kF,OAAO,CAC1BzB,OAAQ,IAAE2B,OACVqxB,MAAO,IAAI,IAAE9yB,MAAM8lF,IAAM,SAAUniF,GACjC,OAAOA,EAAE7D,OAAS,OAGlBomF,GAAW,IAAI,IAAE3kF,OAAO,CAC1BuD,SAAU,IAAI,IAAEN,SAAS,IAAEjC,MAAO,IAClC4jF,SAAU,IAAI,IAAEpjF,QAAQ,IAAEtB,OAAQwkF,IAClCG,eAAgB,IAAI,IAAErjF,QAAQ,IAAEtB,OAAQ,UAEtC4kF,GAAc,IAAI,IAAE9kF,OAAO,CAC7BqkF,WAAY,IAAE5jF,OACdkU,IAAK,IAAI,IAAEnT,QAAQ,IAAEf,OAAQkkF,IAC7BI,WAAY,IAAEtkF,OACdukF,UAAW,IAAEvkF,SAGXwkF,GAAQ,WAgCV,SAASA,EAAM70E,GACbmF,EAAexX,KAAMknF,GACrBlnF,KAAKqS,OAASA,EACdrS,KAAKyT,OAASszE,GAAY/tE,OAAOhZ,KAAKqS,QAEjC,IAAI8H,EAAana,KAAKyT,OAAOmD,IAAIiwE,SAASrzD,MAAOpZ,EAAY1Z,MAAM8R,QAAQ2H,GAAaE,EAAM,EAAnG,IAAsGF,EAAaC,EAAYD,EAAaA,EAAWzH,OAAOC,cAAe,CAC3K,IAAI2H,EAEJ,GAAIF,EAAW,CACb,GAAIC,GAAOF,EAAW3Z,OAAQ,MAC9B8Z,EAAQH,EAAWE,SACd,CAEL,IADAA,EAAMF,EAAWtH,QACTC,KAAM,MACdwH,EAAQD,EAAIva,MAGd,IAAI4D,EAAO4W,EAEFC,EAAa7W,EAAKgjF,QAASlsE,EAAY9Z,MAAM8R,QAAQ+H,GAAaE,EAAM,EAAjF,IAAoFF,EAAaC,EAAYD,EAAaA,EAAW7H,OAAOC,cAAe,CACzJ,IAAI+H,EAEJ,GAAIF,EAAW,CACb,GAAIC,GAAOF,EAAW/Z,OAAQ,MAC9Bka,EAAQH,EAAWE,SACd,CAEL,IADAA,EAAMF,EAAW1H,QACTC,KAAM,MACd4H,EAAQD,EAAI3a,MAGd,IAAIygF,EAAM7lE,EAEN6lE,EAAI6F,YAAc,GACpBpmF,KAAKqS,OAAOiH,IAAMinE,EAAI6F,WAAapmF,KAAKyT,OAAOmD,IAAIkwE,eACnDvG,EAAIn/C,KAAO8kD,GAAUltE,OAAOhZ,KAAKqS,SAEjCkuE,EAAIn/C,KAAO,KAIG,SAAd19B,EAAK09B,OACPphC,KAAKmnF,KAAOzjF,IA6DlB,OAtIAwjF,EAAMtlF,MAAQ,SAAeF,GAC3B,IAAI2Q,EAAS,IAAI,IAAEvQ,aAAaJ,GAEhC,IACE,IAAI+R,EAASszE,GAAY/tE,OAAO3G,GAChC,MAAOsoE,GACP,OAAO,EAGJ,IAAIroE,EAAYmB,EAAOmD,IAAIiwE,SAASrzD,MAAOjhB,EAAW7R,MAAM8R,QAAQF,GAAYG,EAAK,EAA1F,IAA6FH,EAAYC,EAAWD,EAAYA,EAAUI,OAAOC,cAAe,CAC9J,IAAIC,EAEJ,GAAIL,EAAU,CACZ,GAAIE,GAAMH,EAAU9R,OAAQ,MAC5BoS,EAAON,EAAUG,SACZ,CAEL,IADAA,EAAKH,EAAUO,QACRC,KAAM,MACbF,EAAOH,EAAG3S,MAKZ,GAAkB,SAFP8S,EAEFwuB,KACP,OAAO,EAIX,OAAO,GAkDT8lD,EAAM3vE,UAAUxV,QAAU,SAAiBq/B,GACzC,IAAKphC,KAAKmnF,KACR,OAAO,KAGJ,IAAIjqE,EAAald,KAAKmnF,KAAKT,QAASvpE,EAAYzc,MAAM8R,QAAQ0K,GAAaE,EAAM,EAAtF,IAAyFF,EAAaC,EAAYD,EAAaA,EAAWxK,OAAOC,cAAe,CAC9J,IAAI0K,EAEJ,GAAIF,EAAW,CACb,GAAIC,GAAOF,EAAW1c,OAAQ,MAC9B6c,EAAQH,EAAWE,SACd,CAEL,IADAA,EAAMF,EAAWrK,QACTC,KAAM,MACduK,EAAQD,EAAItd,MAGd,IAAIygF,EAAMljE,EACN/D,EAAMtZ,KAAKyT,OAAO6yE,WAAa/F,EAAI+F,WAAa,EAChDj0E,EAAS,IAAI,IAAEvQ,aAAa9B,KAAKqS,OAAO3Q,OAAOspC,MAAM1xB,IACrDzX,EAAO,IAAI4hF,GAAQpxE,GAEvB,GAAIxQ,EAAKR,iBAAmB+/B,EAC1B,OAAOv/B,EAIX,OAAO,MAGT+V,GAAYsvE,EAAO,CAAC,CAClBvnF,IAAK,QACLE,IAAK,WACH,IAAIomF,EAAQ,GAEH3oE,EAAatd,KAAKmnF,KAAKT,QAASnpE,EAAY7c,MAAM8R,QAAQ8K,GAAaE,EAAM,EAAtF,IAAyFF,EAAaC,EAAYD,EAAaA,EAAW5K,OAAOC,cAAe,CAC9J,IAAI8K,EAEJ,GAAIF,EAAW,CACb,GAAIC,GAAOF,EAAW9c,OAAQ,MAC9Bid,EAAQH,EAAWE,SACd,CAEL,IADAA,EAAMF,EAAWzK,QACTC,KAAM,MACd2K,EAAQD,EAAI1d,MAGd,IAAIygF,EAAM9iE,EACNnE,EAAMtZ,KAAKyT,OAAO6yE,WAAa/F,EAAI+F,WAAa,EAChDj0E,EAAS,IAAI,IAAEvQ,aAAa9B,KAAKqS,OAAO3Q,OAAOspC,MAAM1xB,IACzD2sE,EAAM/kF,KAAK,IAAIuiF,GAAQpxE,IAGzB,OAAO4zE,MAGJiB,EAvIG,GA2IZ3nF,EAAUyB,eAAeyiF,IACzBlkF,EAAUyB,eAAeskF,IACzB/lF,EAAUyB,eAAe+kF,IACzBxmF,EAAUyB,eAAekmF,IACV,Q","file":"210e6083-4cd39ea2df1e91aff130.js","sourcesContent":["import r from 'restructure';\nimport { PropertyDescriptor, resolveLength } from 'restructure/src/utils';\nimport isEqual from 'deep-equal';\nimport unicode from '@react-pdf/unicode-properties';\nimport UnicodeTrie from 'unicode-trie';\nimport StateMachine from 'dfa';\nimport cloneDeep from 'clone';\nimport inflate from 'tiny-inflate';\nvar fs = {};\nvar fontkit$1 = {};\nfontkit$1.logErrors = false;\nvar formats = [];\n\nfontkit$1.registerFormat = function (format) {\n  formats.push(format);\n};\n\nfontkit$1.openSync = function (filename, postscriptName) {\n  {\n    throw new Error('fontkit.openSync unavailable for browser build');\n  }\n  var buffer = fs.readFileSync(filename);\n  return fontkit$1.create(buffer, postscriptName);\n};\n\nfontkit$1.open = function (filename, postscriptName, callback) {\n  {\n    throw new Error('fontkit.open unavailable for browser build');\n  }\n\n  if (typeof postscriptName === 'function') {\n    callback = postscriptName;\n    postscriptName = null;\n  }\n\n  fs.readFile(filename, function (err, buffer) {\n    if (err) {\n      return callback(err);\n    }\n\n    try {\n      var font = fontkit$1.create(buffer, postscriptName);\n    } catch (e) {\n      return callback(e);\n    }\n\n    return callback(null, font);\n  });\n  return;\n};\n\nfontkit$1.create = function (buffer, postscriptName) {\n  for (var i = 0; i < formats.length; i++) {\n    var format = formats[i];\n\n    if (format.probe(buffer)) {\n      var font = new format(new r.DecodeStream(buffer));\n\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\n\n\nfunction cache(target, key, descriptor) {\n  if (descriptor.get) {\n    var get = descriptor.get;\n\n    descriptor.get = function () {\n      var value = get.call(this);\n      Object.defineProperty(this, key, {\n        value: value\n      });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    var fn = descriptor.value;\n    return {\n      get: function get() {\n        var cache = new Map();\n\n        function memoized() {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var key = args.length > 0 ? args[0] : 'value';\n\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          var result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        }\n\n        Object.defineProperty(this, key, {\n          value: memoized\n        });\n        return memoized;\n      }\n    };\n  }\n}\n\nvar SubHeader = new r.Struct({\n  firstCode: r.uint16,\n  entryCount: r.uint16,\n  idDelta: r.int16,\n  idRangeOffset: r.uint16\n});\nvar CmapGroup = new r.Struct({\n  startCharCode: r.uint32,\n  endCharCode: r.uint32,\n  glyphID: r.uint32\n});\nvar UnicodeValueRange = new r.Struct({\n  startUnicodeValue: r.uint24,\n  additionalCount: r.uint8\n});\nvar UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID: r.uint16\n});\nvar DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nvar NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\nvar VarSelectorRecord = new r.Struct({\n  varSelector: r.uint24,\n  defaultUVS: new r.Pointer(r.uint32, DefaultUVS, {\n    type: 'parent'\n  }),\n  nonDefaultUVS: new r.Pointer(r.uint32, NonDefaultUVS, {\n    type: 'parent'\n  })\n});\nvar CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Byte encoding\n    length: r.uint16,\n    // Total table length in bytes (set to 262 for format 0)\n    language: r.uint16,\n    // Language code for this encoding subtable, or zero if language-independent\n    codeMap: new r.LazyArray(r.uint8, 256)\n  },\n  2: {\n    // High-byte mapping (CJK)\n    length: r.uint16,\n    language: r.uint16,\n    subHeaderKeys: new r.Array(r.uint16, 256),\n    subHeaderCount: function subHeaderCount(t) {\n      return Math.max.apply(Math, t.subHeaderKeys);\n    },\n    subHeaders: new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n  4: {\n    // Segment mapping to delta values\n    length: r.uint16,\n    // Total table length in bytes\n    language: r.uint16,\n    // Language code\n    segCountX2: r.uint16,\n    segCount: function segCount(t) {\n      return t.segCountX2 >> 1;\n    },\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    endCode: new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad: new r.Reserved(r.uint16),\n    // This value should be zero\n    startCode: new r.LazyArray(r.uint16, 'segCount'),\n    idDelta: new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset: new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, function (t) {\n      return (t.length - t._currentOffset) / 2;\n    })\n  },\n  6: {\n    // Trimmed table\n    length: r.uint16,\n    language: r.uint16,\n    firstCode: r.uint16,\n    entryCount: r.uint16,\n    glyphIndices: new r.LazyArray(r.uint16, 'entryCount')\n  },\n  8: {\n    // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint16,\n    is32: new r.LazyArray(r.uint8, 8192),\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  10: {\n    // Trimmed Array\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    firstCode: r.uint32,\n    entryCount: r.uint32,\n    glyphIndices: new r.LazyArray(r.uint16, 'numChars')\n  },\n  12: {\n    // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  13: {\n    // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  14: {\n    // Unicode Variation Sequences\n    length: r.uint32,\n    numRecords: r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\nvar CmapEntry = new r.Struct({\n  platformID: r.uint16,\n  // Platform identifier\n  encodingID: r.uint16,\n  // Platform-specific encoding identifier\n  table: new r.Pointer(r.uint32, CmapSubtable, {\n    type: 'parent',\n    lazy: true\n  })\n}); // character to glyph mapping\n\nvar cmap = new r.Struct({\n  version: r.uint16,\n  numSubtables: r.uint16,\n  tables: new r.Array(CmapEntry, 'numSubtables')\n}); // font header\n\nvar head = new r.Struct({\n  version: r.int32,\n  // 0x00010000 (version 1.0)\n  revision: r.int32,\n  // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber: r.uint32,\n  // set to 0x5F0F3CF5\n  flags: r.uint16,\n  unitsPerEm: r.uint16,\n  // range from 64 to 16384\n  created: new r.Array(r.int32, 2),\n  modified: new r.Array(r.int32, 2),\n  xMin: r.int16,\n  // for all glyph bounding boxes\n  yMin: r.int16,\n  // for all glyph bounding boxes\n  xMax: r.int16,\n  // for all glyph bounding boxes\n  yMax: r.int16,\n  // for all glyph bounding boxes\n  macStyle: new r.Bitfield(r.uint16, ['bold', 'italic', 'underline', 'outline', 'shadow', 'condensed', 'extended']),\n  lowestRecPPEM: r.uint16,\n  // smallest readable size in pixels\n  fontDirectionHint: r.int16,\n  indexToLocFormat: r.int16,\n  // 0 for short offsets, 1 for long\n  glyphDataFormat: r.int16 // 0 for current format\n\n}); // horizontal header\n\nvar hhea = new r.Struct({\n  version: r.int32,\n  ascent: r.int16,\n  // Distance from baseline of highest ascender\n  descent: r.int16,\n  // Distance from baseline of lowest descender\n  lineGap: r.int16,\n  // Typographic line gap\n  advanceWidthMax: r.uint16,\n  // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing: r.int16,\n  // Maximum advance width value in 'hmtx' table\n  minRightSideBearing: r.int16,\n  // Minimum right sidebearing value\n  xMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun: r.int16,\n  // 0 for vertical\n  caretOffset: r.int16,\n  // Set to 0 for non-slanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // 0 for current format\n  numberOfMetrics: r.uint16 // Number of advance widths in 'hmtx' table\n\n});\nvar HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\nvar hmtx = new r.Struct({\n  metrics: new r.LazyArray(HmtxEntry, function (t) {\n    return t.parent.hhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics;\n  })\n}); // maxiumum profile\n\nvar maxp = new r.Struct({\n  version: r.int32,\n  numGlyphs: r.uint16,\n  // The number of glyphs in the font\n  maxPoints: r.uint16,\n  // Maximum points in a non-composite glyph\n  maxContours: r.uint16,\n  // Maximum contours in a non-composite glyph\n  maxComponentPoints: r.uint16,\n  // Maximum points in a composite glyph\n  maxComponentContours: r.uint16,\n  // Maximum contours in a composite glyph\n  maxZones: r.uint16,\n  // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints: r.uint16,\n  // Maximum points used in Z0\n  maxStorage: r.uint16,\n  // Number of Storage Area locations\n  maxFunctionDefs: r.uint16,\n  // Number of FDEFs\n  maxInstructionDefs: r.uint16,\n  // Number of IDEFs\n  maxStackElements: r.uint16,\n  // Maximum stack depth\n  maxSizeOfInstructions: r.uint16,\n  // Maximum byte count for glyph instructions\n  maxComponentElements: r.uint16,\n  // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth: r.uint16 // Maximum levels of recursion; 1 for simple components\n\n});\n/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\n\nfunction getEncoding(platformID, encodingID) {\n  var languageID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n\n  return ENCODINGS[platformID][encodingID];\n} // Map of platform ids to encoding ids.\n\n\nvar ENCODINGS = [// unicode\n['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'], // macintosh\n// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n// 0\tRoman                 17\tMalayalam\n// 1\tJapanese\t            18\tSinhalese\n// 2\tTraditional Chinese\t  19\tBurmese\n// 3\tKorean\t              20\tKhmer\n// 4\tArabic\t              21\tThai\n// 5\tHebrew\t              22\tLaotian\n// 6\tGreek\t                23\tGeorgian\n// 7\tRussian\t              24\tArmenian\n// 8\tRSymbol\t              25\tSimplified Chinese\n// 9\tDevanagari\t          26\tTibetan\n// 10\tGurmukhi\t            27\tMongolian\n// 11\tGujarati\t            28\tGeez\n// 12\tOriya\t                29\tSlavic\n// 13\tBengali\t              30\tVietnamese\n// 14\tTamil\t                31\tSindhi\n// 15\tTelugu\t              32\t(Uninterpreted)\n// 16\tKannada\n['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8', 'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati', 'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese', 'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', 'Tibetan', 'Mongolian', 'Geez', 'maccenteuro', 'Vietnamese', 'Sindhi'], // ISO (deprecated)\n['ascii'], // windows\n// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'utf16be']]; // Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\n\nvar MAC_LANGUAGE_ENCODINGS = {\n  15: 'maciceland',\n  17: 'macturkish',\n  18: 'maccroatian',\n  24: 'maccenteuro',\n  25: 'maccenteuro',\n  26: 'maccenteuro',\n  27: 'maccenteuro',\n  28: 'maccenteuro',\n  30: 'maciceland',\n  37: 'macromania',\n  38: 'maccenteuro',\n  39: 'maccenteuro',\n  40: 'maccenteuro',\n  143: 'macinuit',\n  // Unsupported by iconv-lite\n  146: 'macgaelic' // Unsupported by iconv-lite\n\n}; // Map of platform ids to BCP-47 language codes.\n\nvar LANGUAGES = [// unicode\n[], {\n  // macintosh\n  0: 'en',\n  30: 'fo',\n  60: 'ks',\n  90: 'rw',\n  1: 'fr',\n  31: 'fa',\n  61: 'ku',\n  91: 'rn',\n  2: 'de',\n  32: 'ru',\n  62: 'sd',\n  92: 'ny',\n  3: 'it',\n  33: 'zh',\n  63: 'bo',\n  93: 'mg',\n  4: 'nl',\n  34: 'nl-BE',\n  64: 'ne',\n  94: 'eo',\n  5: 'sv',\n  35: 'ga',\n  65: 'sa',\n  128: 'cy',\n  6: 'es',\n  36: 'sq',\n  66: 'mr',\n  129: 'eu',\n  7: 'da',\n  37: 'ro',\n  67: 'bn',\n  130: 'ca',\n  8: 'pt',\n  38: 'cz',\n  68: 'as',\n  131: 'la',\n  9: 'no',\n  39: 'sk',\n  69: 'gu',\n  132: 'qu',\n  10: 'he',\n  40: 'si',\n  70: 'pa',\n  133: 'gn',\n  11: 'ja',\n  41: 'yi',\n  71: 'or',\n  134: 'ay',\n  12: 'ar',\n  42: 'sr',\n  72: 'ml',\n  135: 'tt',\n  13: 'fi',\n  43: 'mk',\n  73: 'kn',\n  136: 'ug',\n  14: 'el',\n  44: 'bg',\n  74: 'ta',\n  137: 'dz',\n  15: 'is',\n  45: 'uk',\n  75: 'te',\n  138: 'jv',\n  16: 'mt',\n  46: 'be',\n  76: 'si',\n  139: 'su',\n  17: 'tr',\n  47: 'uz',\n  77: 'my',\n  140: 'gl',\n  18: 'hr',\n  48: 'kk',\n  78: 'km',\n  141: 'af',\n  19: 'zh-Hant',\n  49: 'az-Cyrl',\n  79: 'lo',\n  142: 'br',\n  20: 'ur',\n  50: 'az-Arab',\n  80: 'vi',\n  143: 'iu',\n  21: 'hi',\n  51: 'hy',\n  81: 'id',\n  144: 'gd',\n  22: 'th',\n  52: 'ka',\n  82: 'tl',\n  145: 'gv',\n  23: 'ko',\n  53: 'mo',\n  83: 'ms',\n  146: 'ga',\n  24: 'lt',\n  54: 'ky',\n  84: 'ms-Arab',\n  147: 'to',\n  25: 'pl',\n  55: 'tg',\n  85: 'am',\n  148: 'el-polyton',\n  26: 'hu',\n  56: 'tk',\n  86: 'ti',\n  149: 'kl',\n  27: 'es',\n  57: 'mn-CN',\n  87: 'om',\n  150: 'az',\n  28: 'lv',\n  58: 'mn',\n  88: 'so',\n  151: 'nn',\n  29: 'se',\n  59: 'ps',\n  89: 'sw'\n}, // ISO (deprecated)\n[], {\n  // windows                                        \n  0x0436: 'af',\n  0x4009: 'en-IN',\n  0x0487: 'rw',\n  0x0432: 'tn',\n  0x041C: 'sq',\n  0x1809: 'en-IE',\n  0x0441: 'sw',\n  0x045B: 'si',\n  0x0484: 'gsw',\n  0x2009: 'en-JM',\n  0x0457: 'kok',\n  0x041B: 'sk',\n  0x045E: 'am',\n  0x4409: 'en-MY',\n  0x0412: 'ko',\n  0x0424: 'sl',\n  0x1401: 'ar-DZ',\n  0x1409: 'en-NZ',\n  0x0440: 'ky',\n  0x2C0A: 'es-AR',\n  0x3C01: 'ar-BH',\n  0x3409: 'en-PH',\n  0x0454: 'lo',\n  0x400A: 'es-BO',\n  0x0C01: 'ar',\n  0x4809: 'en-SG',\n  0x0426: 'lv',\n  0x340A: 'es-CL',\n  0x0801: 'ar-IQ',\n  0x1C09: 'en-ZA',\n  0x0427: 'lt',\n  0x240A: 'es-CO',\n  0x2C01: 'ar-JO',\n  0x2C09: 'en-TT',\n  0x082E: 'dsb',\n  0x140A: 'es-CR',\n  0x3401: 'ar-KW',\n  0x0809: 'en-GB',\n  0x046E: 'lb',\n  0x1C0A: 'es-DO',\n  0x3001: 'ar-LB',\n  0x0409: 'en',\n  0x042F: 'mk',\n  0x300A: 'es-EC',\n  0x1001: 'ar-LY',\n  0x3009: 'en-ZW',\n  0x083E: 'ms-BN',\n  0x440A: 'es-SV',\n  0x1801: 'ary',\n  0x0425: 'et',\n  0x043E: 'ms',\n  0x100A: 'es-GT',\n  0x2001: 'ar-OM',\n  0x0438: 'fo',\n  0x044C: 'ml',\n  0x480A: 'es-HN',\n  0x4001: 'ar-QA',\n  0x0464: 'fil',\n  0x043A: 'mt',\n  0x080A: 'es-MX',\n  0x0401: 'ar-SA',\n  0x040B: 'fi',\n  0x0481: 'mi',\n  0x4C0A: 'es-NI',\n  0x2801: 'ar-SY',\n  0x080C: 'fr-BE',\n  0x047A: 'arn',\n  0x180A: 'es-PA',\n  0x1C01: 'aeb',\n  0x0C0C: 'fr-CA',\n  0x044E: 'mr',\n  0x3C0A: 'es-PY',\n  0x3801: 'ar-AE',\n  0x040C: 'fr',\n  0x047C: 'moh',\n  0x280A: 'es-PE',\n  0x2401: 'ar-YE',\n  0x140C: 'fr-LU',\n  0x0450: 'mn',\n  0x500A: 'es-PR',\n  0x042B: 'hy',\n  0x180C: 'fr-MC',\n  0x0850: 'mn-CN',\n  0x0C0A: 'es',\n  0x044D: 'as',\n  0x100C: 'fr-CH',\n  0x0461: 'ne',\n  0x040A: 'es',\n  0x082C: 'az-Cyrl',\n  0x0462: 'fy',\n  0x0414: 'nb',\n  0x540A: 'es-US',\n  0x042C: 'az',\n  0x0456: 'gl',\n  0x0814: 'nn',\n  0x380A: 'es-UY',\n  0x046D: 'ba',\n  0x0437: 'ka',\n  0x0482: 'oc',\n  0x200A: 'es-VE',\n  0x042D: 'eu',\n  0x0C07: 'de-AT',\n  0x0448: 'or',\n  0x081D: 'sv-FI',\n  0x0423: 'be',\n  0x0407: 'de',\n  0x0463: 'ps',\n  0x041D: 'sv',\n  0x0845: 'bn',\n  0x1407: 'de-LI',\n  0x0415: 'pl',\n  0x045A: 'syr',\n  0x0445: 'bn-IN',\n  0x1007: 'de-LU',\n  0x0416: 'pt',\n  0x0428: 'tg',\n  0x201A: 'bs-Cyrl',\n  0x0807: 'de-CH',\n  0x0816: 'pt-PT',\n  0x085F: 'tzm',\n  0x141A: 'bs',\n  0x0408: 'el',\n  0x0446: 'pa',\n  0x0449: 'ta',\n  0x047E: 'br',\n  0x046F: 'kl',\n  0x046B: 'qu-BO',\n  0x0444: 'tt',\n  0x0402: 'bg',\n  0x0447: 'gu',\n  0x086B: 'qu-EC',\n  0x044A: 'te',\n  0x0403: 'ca',\n  0x0468: 'ha',\n  0x0C6B: 'qu',\n  0x041E: 'th',\n  0x0C04: 'zh-HK',\n  0x040D: 'he',\n  0x0418: 'ro',\n  0x0451: 'bo',\n  0x1404: 'zh-MO',\n  0x0439: 'hi',\n  0x0417: 'rm',\n  0x041F: 'tr',\n  0x0804: 'zh',\n  0x040E: 'hu',\n  0x0419: 'ru',\n  0x0442: 'tk',\n  0x1004: 'zh-SG',\n  0x040F: 'is',\n  0x243B: 'smn',\n  0x0480: 'ug',\n  0x0404: 'zh-TW',\n  0x0470: 'ig',\n  0x103B: 'smj-NO',\n  0x0422: 'uk',\n  0x0483: 'co',\n  0x0421: 'id',\n  0x143B: 'smj',\n  0x042E: 'hsb',\n  0x041A: 'hr',\n  0x045D: 'iu',\n  0x0C3B: 'se-FI',\n  0x0420: 'ur',\n  0x101A: 'hr-BA',\n  0x085D: 'iu-Latn',\n  0x043B: 'se',\n  0x0843: 'uz-Cyrl',\n  0x0405: 'cs',\n  0x083C: 'ga',\n  0x083B: 'se-SE',\n  0x0443: 'uz',\n  0x0406: 'da',\n  0x0434: 'xh',\n  0x203B: 'sms',\n  0x042A: 'vi',\n  0x048C: 'prs',\n  0x0435: 'zu',\n  0x183B: 'sma-NO',\n  0x0452: 'cy',\n  0x0465: 'dv',\n  0x0410: 'it',\n  0x1C3B: 'sms',\n  0x0488: 'wo',\n  0x0813: 'nl-BE',\n  0x0810: 'it-CH',\n  0x044F: 'sa',\n  0x0485: 'sah',\n  0x0413: 'nl',\n  0x0411: 'ja',\n  0x1C1A: 'sr-Cyrl-BA',\n  0x0478: 'ii',\n  0x0C09: 'en-AU',\n  0x044B: 'kn',\n  0x0C1A: 'sr',\n  0x046A: 'yo',\n  0x2809: 'en-BZ',\n  0x043F: 'kk',\n  0x181A: 'sr-Latn-BA',\n  0x1009: 'en-CA',\n  0x0453: 'km',\n  0x081A: 'sr-Latn',\n  0x2409: 'en-029',\n  0x0486: 'quc',\n  0x046C: 'nso'\n}];\nvar NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID: r.uint16,\n  length: r.uint16,\n  string: new r.Pointer(r.uint16, new r.String('length', function (t) {\n    return getEncoding(t.platformID, t.encodingID, t.languageID);\n  }), {\n    type: 'parent',\n    relativeTo: 'parent.stringOffset',\n    allowNull: false\n  })\n});\nvar LangTagRecord = new r.Struct({\n  length: r.uint16,\n  tag: new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {\n    type: 'parent',\n    relativeTo: 'stringOffset'\n  })\n});\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count'),\n    langTagCount: r.uint16,\n    langTags: new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\nvar NAMES = ['copyright', 'fontFamily', 'fontSubfamily', 'uniqueSubfamily', 'fullName', 'version', 'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n'trademark', 'manufacturer', 'designer', 'description', 'vendorURL', 'designerURL', 'license', 'licenseURL', null, // reserved\n'preferredFamily', 'preferredSubfamily', 'compatibleFull', 'sampleText', 'postscriptCIDFontName', 'wwsFamilyName', 'wwsSubfamilyName'];\n\nNameTable.process = function (stream) {\n  var records = {};\n\n  for (var _iterator = this.records, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var record = _ref; // find out what language this is for\n\n    var language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    } // if the nameID is >= 256, it is a font feature record (AAT)\n\n\n    var key = record.nameID >= 256 ? 'fontFeatures' : NAMES[record.nameID] || record.nameID;\n\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    var obj = records[key];\n\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n  var records = [];\n\n  for (var key in this.records) {\n    var val = this.records[key];\n    if (key === 'fontFeatures') continue;\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: Buffer.byteLength(val.en, 'utf16le'),\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth: r.int16,\n    // average weighted advance width of lower case letters and space\n    usWeightClass: r.uint16,\n    // visual weight of stroke in glyphs\n    usWidthClass: r.uint16,\n    // relative change from the normal aspect ratio (width to height ratio)\n    fsType: new r.Bitfield(r.uint16, [// Indicates font embedding licensing rights\n    null, 'noEmbedding', 'viewOnly', 'editable', null, null, null, null, 'noSubsetting', 'bitmapOnly']),\n    ySubscriptXSize: r.int16,\n    // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize: r.int16,\n    // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset: r.int16,\n    // recommended horizontal offset for subscripts\n    ySubscriptYOffset: r.int16,\n    // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize: r.int16,\n    // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize: r.int16,\n    // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset: r.int16,\n    // recommended horizontal offset for superscripts\n    ySuperscriptYOffset: r.int16,\n    // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize: r.int16,\n    // width of the strikeout stroke\n    yStrikeoutPosition: r.int16,\n    // position of the strikeout stroke relative to the baseline\n    sFamilyClass: r.int16,\n    // classification of font-family design\n    panose: new r.Array(r.uint8, 10),\n    // describe the visual characteristics of a given typeface\n    ulCharRange: new r.Array(r.uint32, 4),\n    vendorID: new r.String(4),\n    // four character identifier for the font vendor\n    fsSelection: new r.Bitfield(r.uint16, [// bit field containing information about the font\n    'italic', 'underscore', 'negative', 'outlined', 'strikeout', 'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique']),\n    usFirstCharIndex: r.uint16,\n    // The minimum Unicode index in this font\n    usLastCharIndex: r.uint16 // The maximum Unicode index in this font\n\n  },\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n  1: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2)\n  },\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16\n  },\n  5: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16,\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\nvar versions = OS2.versions;\nversions[3] = versions[4] = versions[2]; // PostScript information\n\nvar post = new r.VersionedStruct(r.fixed32, {\n  header: {\n    // these fields exist at the top of all versions\n    italicAngle: r.fixed32,\n    // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition: r.int16,\n    // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16,\n    // Suggested values for the underline thickness\n    isFixedPitch: r.uint32,\n    // Whether the font is monospaced\n    minMemType42: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42: r.uint32,\n    // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1: r.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n\n  },\n  1: {},\n  // version 1 has no additional fields\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names: new r.Array(new r.String(r.uint8))\n  },\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets: new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n  3: {},\n  // version 3 has no additional fields\n  4: {\n    map: new r.Array(r.uint32, function (t) {\n      return t.parent.maxp.numGlyphs;\n    })\n  }\n}); // An array of predefined values accessible by instructions\n\nvar cvt = new r.Struct({\n  controlValues: new r.Array(r.int16)\n}); // A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n\nvar fpgm = new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\nvar loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n  }\n};\n\nloca.preEncode = function () {\n  if (this.version != null) return; // assume this.offsets is a sorted array\n\n  this.version = this.offsets[this.offsets.length - 1] > 0xffff ? 1 : 0;\n\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n  }\n}; // Set of instructions executed whenever the point size or font transformation change\n\n\nvar prep = new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n}); // only used for encoding\n\nvar glyf = new r.Array(new r.Buffer());\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar CFFIndex = function () {\n  function CFFIndex(type) {\n    classCallCheck(this, CFFIndex);\n    this.type = type;\n  }\n\n  CFFIndex.prototype.getCFFVersion = function getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  };\n\n  CFFIndex.prototype.decode = function decode(stream, parent) {\n    var version = this.getCFFVersion(parent);\n    var count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    var offSize = stream.readUInt8();\n    var offsetType = void 0;\n\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset size in CFFIndex: \" + offSize + \" \" + stream.pos);\n    }\n\n    var ret = [];\n    var startPos = stream.pos + (count + 1) * offSize - 1;\n    var start = offsetType.decode(stream);\n\n    for (var i = 0; i < count; i++) {\n      var end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        var pos = stream.pos;\n        stream.pos = startPos + start;\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  };\n\n  CFFIndex.prototype.size = function size(arr, parent) {\n    var size = 2;\n\n    if (arr.length === 0) {\n      return size;\n    }\n\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var offset = 1;\n\n    for (var i = 0; i < arr.length; i++) {\n      var item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    var offsetType = void 0;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n    return size;\n  };\n\n  CFFIndex.prototype.encode = function encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n\n    if (arr.length === 0) {\n      return;\n    }\n\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var sizes = [];\n    var offset = 1;\n\n    for (var _iterator = arr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var item = _ref;\n      var s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    var offsetType = void 0;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    } // write offset size\n\n\n    stream.writeUInt8(offsetType.size()); // write elements\n\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (var _iterator2 = sizes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var size = _ref2;\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (var _iterator3 = arr, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var _item = _ref3;\n      type.encode(stream, _item, parent);\n    }\n\n    return;\n  };\n\n  return CFFIndex;\n}();\n\nvar FLOAT_EOF = 0xf;\nvar FLOAT_LOOKUP = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\nvar FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nvar CFFOperand = function () {\n  function CFFOperand() {\n    classCallCheck(this, CFFOperand);\n  }\n\n  CFFOperand.decode = function decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      var str = '';\n\n      while (true) {\n        var b = stream.readUInt8();\n        var n1 = b >> 4;\n\n        if (n1 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n1];\n        var n2 = b & 15;\n\n        if (n2 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  };\n\n  CFFOperand.size = function size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) {\n      // floating point\n      var str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n    } else {\n      return 5;\n    }\n  };\n\n  CFFOperand.encode = function encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    var val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    } else if ((val | 0) !== val) {\n      // floating point\n      stream.writeUInt8(30);\n      var str = '' + val;\n\n      for (var i = 0; i < str.length; i += 2) {\n        var c1 = str[i];\n        var n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          var c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8(n1 << 4 | n2 & 15);\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8(FLOAT_EOF << 4);\n      }\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  };\n\n  return CFFOperand;\n}();\n\nvar CFFDict = function () {\n  function CFFDict() {\n    var ops = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, CFFDict);\n    this.ops = ops;\n    this.fields = {};\n\n    for (var _iterator = ops, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var field = _ref;\n      var key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  CFFDict.prototype.decodeOperands = function decodeOperands(type, stream, ret, operands) {\n    var _this = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this.decodeOperands(type[i], stream, ret, [op]);\n      });\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n\n        case 'boolean':\n          return !!operands[0];\n\n        default:\n          return operands;\n      }\n    }\n  };\n\n  CFFDict.prototype.encodeOperands = function encodeOperands(type, stream, ctx, operands) {\n    var _this2 = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this2.encodeOperands(type[i], stream, ctx, op)[0];\n      });\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  };\n\n  CFFDict.prototype.decode = function decode(stream, parent) {\n    var end = stream.pos + parent.length;\n    var ret = {};\n    var operands = []; // define hidden properties\n\n    Object.defineProperties(ret, {\n      parent: {\n        value: parent\n      },\n      _startOffset: {\n        value: stream.pos\n      }\n    }); // fill in defaults\n\n    for (var key in this.fields) {\n      var field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      var b = stream.readUInt8();\n\n      if (b < 28) {\n        if (b === 12) {\n          b = b << 8 | stream.readUInt8();\n        }\n\n        var _field = this.fields[b];\n\n        if (!_field) {\n          throw new Error('Unknown operator ' + b);\n        }\n\n        var val = this.decodeOperands(_field[2], stream, ret, operands);\n\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, _field[1], val);\n          } else {\n            ret[_field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  };\n\n  CFFDict.prototype.size = function size(dict, parent) {\n    var includePointers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var ctx = {\n      parent: parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n    var len = 0;\n\n    for (var k in this.fields) {\n      var field = this.fields[k];\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], null, ctx, val);\n\n      for (var _iterator2 = operands, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var op = _ref2;\n        len += CFFOperand.size(op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  };\n\n  CFFDict.prototype.encode = function encode(stream, dict, parent) {\n    var ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent: parent,\n      val: dict,\n      pointerSize: 0\n    };\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (var _iterator3 = this.ops, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var field = _ref3;\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], stream, ctx, val);\n\n      for (var _iterator4 = operands, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray4) {\n          if (_i4 >= _iterator4.length) break;\n          _ref4 = _iterator4[_i4++];\n        } else {\n          _i4 = _iterator4.next();\n          if (_i4.done) break;\n          _ref4 = _i4.value;\n        }\n\n        var op = _ref4;\n        CFFOperand.encode(stream, op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n\n      for (var _iterator5 = key, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var _op = _ref5;\n        stream.writeUInt8(_op);\n      }\n    }\n\n    var i = 0;\n\n    while (i < ctx.pointers.length) {\n      var ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  };\n\n  return CFFDict;\n}();\n\nvar CFFPointer = function (_r$Pointer) {\n  inherits(CFFPointer, _r$Pointer);\n\n  function CFFPointer(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, CFFPointer);\n\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    return possibleConstructorReturn(this, _r$Pointer.call(this, null, type, options));\n  }\n\n  CFFPointer.prototype.decode = function decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: function decode() {\n        return operands[0];\n      }\n    };\n    return _r$Pointer.prototype.decode.call(this, stream, parent, operands);\n  };\n\n  CFFPointer.prototype.encode = function encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: function size() {\n          return 0;\n        }\n      };\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    var ptr = null;\n    this.offsetType = {\n      encode: function encode(stream, val) {\n        return ptr = val;\n      }\n    };\n\n    _r$Pointer.prototype.encode.call(this, stream, value, ctx);\n\n    return [new Ptr(ptr)];\n  };\n\n  return CFFPointer;\n}(r.Pointer);\n\nvar Ptr = function () {\n  function Ptr(val) {\n    classCallCheck(this, Ptr);\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  Ptr.prototype.valueOf = function valueOf() {\n    return this.val;\n  };\n\n  return Ptr;\n}();\n\nvar CFFBlendOp = function () {\n  function CFFBlendOp() {\n    classCallCheck(this, CFFBlendOp);\n  }\n\n  CFFBlendOp.decode = function decode(stream, parent, operands) {\n    var numBlends = operands.pop(); // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  };\n\n  return CFFBlendOp;\n}();\n\nvar CFFPrivateDict = new CFFDict([// key       name                    type                                          default\n[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'number', 0.039625], [[12, 10], 'BlueShift', 'number', 7], [[12, 11], 'BlueFuzz', 'number', 1], [10, 'StdHW', 'number', null], [11, 'StdVW', 'number', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'boolean', false], [[12, 17], 'LanguageGroup', 'number', 0], [[12, 18], 'ExpansionFactor', 'number', 0.06], [[12, 19], 'initialRandomSeed', 'number', 0], [20, 'defaultWidthX', 'number', 0], [21, 'nominalWidthX', 'number', 0], [22, 'vsindex', 'number', 0], [23, 'blend', CFFBlendOp, null], [19, 'Subrs', new CFFPointer(new CFFIndex(), {\n  type: 'local'\n}), null]]); // Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\n\nvar standardStrings = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior']; //########################\n// Scripts and Languages #\n//########################\n\nvar LangSysTable = new r.Struct({\n  reserved: new r.Reserved(r.uint16),\n  reqFeatureIndex: r.uint16,\n  featureCount: r.uint16,\n  featureIndexes: new r.Array(r.uint16, 'featureCount')\n});\nvar LangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  langSys: new r.Pointer(r.uint16, LangSysTable, {\n    type: 'parent'\n  })\n});\nvar Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count: r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\nvar ScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, Script, {\n    type: 'parent'\n  })\n});\nvar ScriptList = new r.Array(ScriptRecord, r.uint16); //#######################\n// Features and Lookups #\n//#######################\n\nvar Feature = new r.Struct({\n  featureParams: r.uint16,\n  // pointer\n  lookupCount: r.uint16,\n  lookupListIndexes: new r.Array(r.uint16, 'lookupCount')\n});\nvar FeatureRecord = new r.Struct({\n  tag: new r.String(4),\n  feature: new r.Pointer(r.uint16, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureList = new r.Array(FeatureRecord, r.uint16);\nvar LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures', 'ignoreMarks', 'useMarkFilteringSet'])\n});\n\nfunction LookupList(SubTable) {\n  var Lookup = new r.Struct({\n    lookupType: r.uint16,\n    flags: LookupFlags,\n    subTableCount: r.uint16,\n    subTables: new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet: new r.Optional(r.uint16, function (t) {\n      return t.flags.flags.useMarkFilteringSet;\n    })\n  });\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n} //#################\n// Coverage Table #\n//#################\n\n\nvar RangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  startCoverageIndex: r.uint16\n});\nvar Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount: r.uint16,\n    glyphs: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount: r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n}); //#########################\n// Class Definition Table #\n//#########################\n\nvar ClassRangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  class: r.uint16\n});\nvar ClassDef = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Class array\n    startGlyph: r.uint16,\n    glyphCount: r.uint16,\n    classValueArray: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    // Class ranges\n    classRangeCount: r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n}); //###############\n// Device Table #\n//###############\n\nvar Device = new r.Struct({\n  a: r.uint16,\n  // startSize for hinting Device, outerIndex for VariationIndex\n  b: r.uint16,\n  // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: r.uint16\n}); //#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nvar LookupRecord = new r.Struct({\n  sequenceIndex: r.uint16,\n  lookupListIndex: r.uint16\n});\nvar Rule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\nvar ClassRule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  classes: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\nvar Context = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    ruleSetCount: r.uint16,\n    ruleSets: new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: {\n    // Class-based context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    classDef: new r.Pointer(r.uint16, ClassDef),\n    classSetCnt: r.uint16,\n    classSet: new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount: r.uint16,\n    lookupCount: r.uint16,\n    coverages: new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n}); //######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nvar ChainRule = new r.Struct({\n  backtrackGlyphCount: r.uint16,\n  backtrack: new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.inputGlyphCount - 1;\n  }),\n  lookaheadGlyphCount: r.uint16,\n  lookahead: new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount: r.uint16,\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\nvar ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context glyph substitution\n    coverage: new r.Pointer(r.uint16, Coverage),\n    chainCount: r.uint16,\n    chainRuleSets: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  2: {\n    // Class-based chaining context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef: new r.Pointer(r.uint16, ClassDef),\n    inputClassDef: new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef: new r.Pointer(r.uint16, ClassDef),\n    chainCount: r.uint16,\n    chainClassSet: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  3: {\n    // Coverage-based chaining context\n    backtrackGlyphCount: r.uint16,\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount: r.uint16,\n    inputCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount: r.uint16,\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\nvar _;\n/*******************\n * Variation Store *\n *******************/\n\n\nvar F2DOT14 = new r.Fixed(16, 'BE', 14);\nvar RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\nvar VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\nvar DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, function (t) {\n    return t.parent.shortDeltaCount;\n  }),\n  regionDeltas: new r.Array(r.int8, function (t) {\n    return t.parent.regionIndexCount - t.parent.shortDeltaCount;\n  }),\n  deltas: function deltas(t) {\n    return t.shortDeltas.concat(t.regionDeltas);\n  }\n});\nvar ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\nvar ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\n/**********************\n * Feature Variations *\n **********************/\n\nvar ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: (_ = {\n    axisIndex: r.uint16\n  }, _['axisIndex'] = r.uint16, _.filterRangeMinValue = F2DOT14, _.filterRangeMaxValue = F2DOT14, _)\n});\nvar ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\nvar FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\nvar FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, {\n    type: 'parent'\n  }),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, {\n    type: 'parent'\n  })\n});\nvar FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n}); // Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\n\nvar PredefinedOp = function () {\n  function PredefinedOp(predefinedOps, type) {\n    classCallCheck(this, PredefinedOp);\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  PredefinedOp.prototype.decode = function decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  };\n\n  PredefinedOp.prototype.size = function size(value, ctx) {\n    return this.type.size(value, ctx);\n  };\n\n  PredefinedOp.prototype.encode = function encode(stream, value, ctx) {\n    var index = this.predefinedOps.indexOf(value);\n\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  };\n\n  return PredefinedOp;\n}();\n\nvar CFFEncodingVersion = function (_r$Number) {\n  inherits(CFFEncodingVersion, _r$Number);\n\n  function CFFEncodingVersion() {\n    classCallCheck(this, CFFEncodingVersion);\n    return possibleConstructorReturn(this, _r$Number.call(this, 'UInt8'));\n  }\n\n  CFFEncodingVersion.prototype.decode = function decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  };\n\n  return CFFEncodingVersion;\n}(r.Number);\n\nvar Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\nvar Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\nvar CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges') // TODO: supplement?\n\n  }\n});\nvar CFFEncoding = new PredefinedOp([StandardEncoding, ExpertEncoding], new CFFPointer(CFFCustomEncoding, {\n  lazy: true\n})); // Decodes an array of ranges until the total\n// length is equal to the provided length.\n\nvar RangeArray = function (_r$Array) {\n  inherits(RangeArray, _r$Array);\n\n  function RangeArray() {\n    classCallCheck(this, RangeArray);\n    return possibleConstructorReturn(this, _r$Array.apply(this, arguments));\n  }\n\n  RangeArray.prototype.decode = function decode(stream, parent) {\n    var length = resolveLength(this.length, stream, parent);\n    var count = 0;\n    var res = [];\n\n    while (count < length) {\n      var range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  };\n\n  return RangeArray;\n}(r.Array);\n\nvar CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  1: {\n    ranges: new RangeArray(Range1, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  2: {\n    ranges: new RangeArray(Range2, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  }\n});\nvar CFFCharset = new PredefinedOp([ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset], new CFFPointer(CFFCustomCharset, {\n  lazy: true\n}));\nvar FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\nvar FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\nvar FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, function (t) {\n      return t.parent.CharStrings.length;\n    })\n  },\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\nvar ptr = new CFFPointer(CFFPrivateDict);\n\nvar CFFPrivateOp = function () {\n  function CFFPrivateOp() {\n    classCallCheck(this, CFFPrivateOp);\n  }\n\n  CFFPrivateOp.prototype.decode = function decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  };\n\n  CFFPrivateOp.prototype.size = function size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  };\n\n  CFFPrivateOp.prototype.encode = function encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  };\n\n  return CFFPrivateOp;\n}();\n\nvar FontDict = new CFFDict([// key       name                   type(s)                                 default\n[18, 'Private', new CFFPrivateOp(), null], [[12, 38], 'FontName', 'sid', null]]);\nvar CFFTopDict = new CFFDict([// key       name                   type(s)                                 default\n[[12, 30], 'ROS', ['sid', 'sid', 'number'], null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'boolean', false], [[12, 2], 'ItalicAngle', 'number', 0], [[12, 3], 'UnderlinePosition', 'number', -100], [[12, 4], 'UnderlineThickness', 'number', 50], [[12, 5], 'PaintType', 'number', 0], [[12, 6], 'CharstringType', 'number', 2], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'number', null], [5, 'FontBBox', 'array', [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'number', 0], [14, 'XUID', 'array', null], [15, 'charset', CFFCharset, ISOAdobeCharset], [16, 'Encoding', CFFEncoding, StandardEncoding], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [18, 'Private', new CFFPrivateOp(), null], [[12, 20], 'SyntheticBase', 'number', null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], // CID font specific\n[[12, 31], 'CIDFontVersion', 'number', 0], [[12, 32], 'CIDFontRevision', 'number', 0], [[12, 33], 'CIDFontType', 'number', 0], [[12, 34], 'CIDCount', 'number', 8720], [[12, 35], 'UIDBase', 'number', null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [[12, 38], 'FontName', 'sid', null]]);\nvar VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n});\nvar CFF2TopDict = new CFFDict([[[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [24, 'vstore', new CFFPointer(VariationStore), null], [25, 'maxstack', 'number', 193]]);\nvar CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize: r.uint8,\n    offSize: r.uint8,\n    nameIndex: new CFFIndex(new r.String('length')),\n    topDictIndex: new CFFIndex(CFFTopDict),\n    stringIndex: new CFFIndex(new r.String('length')),\n    globalSubrIndex: new CFFIndex()\n  },\n  2: {\n    hdrSize: r.uint8,\n    length: r.uint16,\n    topDict: CFF2TopDict,\n    globalSubrIndex: new CFFIndex()\n  }\n});\n\nvar CFFFont = function () {\n  function CFFFont(stream) {\n    classCallCheck(this, CFFFont);\n    this.stream = stream;\n    this.decode();\n  }\n\n  CFFFont.decode = function decode(stream) {\n    return new CFFFont(stream);\n  };\n\n  CFFFont.prototype.decode = function decode() {\n    var start = this.stream.pos;\n    var top = CFFTop.decode(this.stream);\n\n    for (var key in top) {\n      var val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  };\n\n  CFFFont.prototype.string = function string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  };\n\n  CFFFont.prototype.getCharString = function getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  };\n\n  CFFFont.prototype.getGlyphName = function getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    } // CID-keyed fonts don't have glyph names\n\n\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    var charset = this.topDict.charset;\n\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (var i = 0; i < charset.ranges.length; i++) {\n          var range = charset.ranges[i];\n\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n\n        break;\n    }\n\n    return null;\n  };\n\n  CFFFont.prototype.fdForGlyph = function fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        var ranges = this.topDict.FDSelect.ranges;\n        var low = 0;\n        var high = ranges.length - 1;\n\n        while (low <= high) {\n          var mid = low + high >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid > ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n\n      default:\n        throw new Error('Unknown FDSelect version: ' + this.topDict.FDSelect.version);\n    }\n  };\n\n  CFFFont.prototype.privateDictForGlyph = function privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      var fd = this.fdForGlyph(gid);\n\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  };\n\n  createClass(CFFFont, [{\n    key: 'postscriptName',\n    get: function get$$1() {\n      if (this.version < 2) {\n        return this.nameIndex[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'fullName',\n    get: function get$$1() {\n      return this.string(this.topDict.FullName);\n    }\n  }, {\n    key: 'familyName',\n    get: function get$$1() {\n      return this.string(this.topDict.FamilyName);\n    }\n  }]);\n  return CFFFont;\n}();\n\nvar VerticalOrigin = new r.Struct({\n  glyphIndex: r.uint16,\n  vertOriginY: r.int16\n});\nvar VORG = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  defaultVertOriginY: r.int16,\n  numVertOriginYMetrics: r.uint16,\n  metrics: new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\nvar BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\nvar SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\nvar EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nvar ByteAligned = function ByteAligned() {\n  classCallCheck(this, ByteAligned);\n};\n\nvar BitAligned = function BitAligned() {\n  classCallCheck(this, BitAligned);\n};\n\nvar glyph = new r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n  5: {\n    data: BitAligned\n  },\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\nvar SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\nvar CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\nvar IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n  1: {\n    offsetArray: new r.Array(r.uint32, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n  3: {\n    offsetArray: new r.Array(r.uint16, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, function (t) {\n      return t.numGlyphs + 1;\n    })\n  },\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\nvar IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\nvar BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), {\n    type: 'parent'\n  }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\nvar EBLC = new r.Struct({\n  version: r.uint32,\n  // 0x00020000\n  numSizes: r.uint32,\n  sizes: new r.Array(BitmapSizeTable, 'numSizes')\n});\nvar ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), function (t) {\n    return t.parent.parent.maxp.numGlyphs + 1;\n  })\n}); // This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n\nvar sbix = new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\nvar LayerRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16 // Index value to use in the appropriate palette. This value must\n\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\n\nvar BaseGlyphRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of reference glyph. This glyph is for reference only\n  // and is not rendered for color.\n  firstLayerIndex: r.uint16,\n  // Index (from beginning of the Layer Records) to the layer record.\n  // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\nvar COLR = new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), {\n    lazy: true\n  }),\n  numLayerRecords: r.uint16\n});\nvar ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\nvar CPAL = new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes')\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\nvar BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16 // X or Y value, in design units\n\n  },\n  2: {\n    // Design units plus contour point\n    coordinate: r.int16,\n    // X or Y value, in design units\n    referenceGlyph: r.uint16,\n    // GlyphID of control glyph\n    baseCoordPoint: r.uint16 // Index of contour point on the referenceGlyph\n\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    // X or Y value, in design units\n    deviceTable: new r.Pointer(r.uint16, Device) // Device table for X or Y value\n\n  }\n});\nvar BaseValues = new r.Struct({\n  defaultIndex: r.uint16,\n  // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords: new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\nvar FeatMinMaxRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }) // May be NULL\n\n});\nvar MinMax = new r.Struct({\n  minCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  featMinMaxCount: r.uint16,\n  // May be 0\n  featMinMaxRecords: new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n\n});\nvar BaseLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, {\n    type: 'parent'\n  })\n});\nvar BaseScript = new r.Struct({\n  baseValues: new r.Pointer(r.uint16, BaseValues),\n  // May be NULL\n  defaultMinMax: new r.Pointer(r.uint16, MinMax),\n  // May be NULL\n  baseLangSysCount: r.uint16,\n  // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n\n});\nvar BaseScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte script identification tag\n  script: new r.Pointer(r.uint16, BaseScript, {\n    type: 'parent'\n  })\n});\nvar BaseScriptList = new r.Array(BaseScriptRecord, r.uint16); // Array of 4-byte baseline identification tags-must be in alphabetical order\n\nvar BaseTagList = new r.Array(new r.String(4), r.uint16);\nvar Axis = new r.Struct({\n  baseTagList: new r.Pointer(r.uint16, BaseTagList),\n  // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\nvar BASE = new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis: new r.Pointer(r.uint16, Axis),\n    // May be NULL\n    vertAxis: new r.Pointer(r.uint16, Axis) // May be NULL\n\n  },\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\nvar AttachPoint = new r.Array(r.uint16, r.uint16);\nvar AttachList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  glyphCount: r.uint16,\n  attachPoints: new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\nvar CaretValue = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16\n  },\n  2: {\n    // Contour point\n    caretValuePoint: r.uint16\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    deviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\nvar LigCaretList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount: r.uint16,\n  ligGlyphs: new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\nvar MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount: r.uint16,\n  coverage: new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\nvar GDEF = new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef: new r.Pointer(r.uint16, ClassDef),\n    attachList: new r.Pointer(r.uint16, AttachList),\n    ligCaretList: new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\nvar ValueFormat = new r.Bitfield(r.uint16, ['xPlacement', 'yPlacement', 'xAdvance', 'yAdvance', 'xPlaDevice', 'yPlaDevice', 'xAdvDevice', 'yAdvDevice']);\nvar types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance: r.int16,\n  yAdvance: r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  })\n};\n\nvar ValueRecord = function () {\n  function ValueRecord() {\n    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'valueFormat';\n    classCallCheck(this, ValueRecord);\n    this.key = key;\n  }\n\n  ValueRecord.prototype.buildStruct = function buildStruct(parent) {\n    var struct = parent;\n\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n    var fields = {};\n\n    fields.rel = function () {\n      return struct._startOffset;\n    };\n\n    var format = struct[this.key];\n\n    for (var key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  };\n\n  ValueRecord.prototype.size = function size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  };\n\n  ValueRecord.prototype.decode = function decode(stream, parent) {\n    var res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  };\n\n  return ValueRecord;\n}();\n\nvar PairValueRecord = new r.Struct({\n  secondGlyph: r.uint16,\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar PairSet = new r.Array(PairValueRecord, r.uint16);\nvar Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar Anchor = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    xCoordinate: r.int16,\n    yCoordinate: r.int16\n  },\n  2: {\n    // Design units plus contour point\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    anchorPoint: r.uint16\n  },\n  3: {\n    // Design units plus Device tables\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    xDeviceTable: new r.Pointer(r.uint16, Device),\n    yDeviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar EntryExitRecord = new r.Struct({\n  entryAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  }),\n  exitAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkRecord = new r.Struct({\n  class: r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkArray = new r.Array(MarkRecord, r.uint16);\nvar BaseRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.classCount;\n});\nvar BaseArray = new r.Array(BaseRecord, r.uint16);\nvar ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.parent.classCount;\n});\nvar LigatureAttach = new r.Array(ComponentRecord, r.uint16);\nvar LigatureArray = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\nvar GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Adjustment\n    1: {\n      // Single positioning value\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      value: new ValueRecord()\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      valueCount: r.uint16,\n      values: new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n  2: new r.VersionedStruct(r.uint16, {\n    // Pair Adjustment Positioning\n    1: {\n      // Adjustments for glyph pairs\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      pairSetCount: r.uint16,\n      pairSets: new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n    2: {\n      // Class pair adjustment\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      classDef1: new r.Pointer(r.uint16, ClassDef),\n      classDef2: new r.Pointer(r.uint16, ClassDef),\n      class1Count: r.uint16,\n      class2Count: r.uint16,\n      classRecords: new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n  3: {\n    // Cursive Attachment Positioning\n    format: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    entryExitCount: r.uint16,\n    entryExitRecords: new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n  4: {\n    // MarkToBase Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    baseCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    baseArray: new r.Pointer(r.uint16, BaseArray)\n  },\n  5: {\n    // MarkToLigature Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    ligatureArray: new r.Pointer(r.uint16, LigatureArray)\n  },\n  6: {\n    // MarkToMark Attachment Positioning\n    format: r.uint16,\n    mark1Coverage: new r.Pointer(r.uint16, Coverage),\n    mark2Coverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    mark1Array: new r.Pointer(r.uint16, MarkArray),\n    mark2Array: new r.Pointer(r.uint16, BaseArray)\n  },\n  7: Context,\n  // Contextual positioning\n  8: ChainingContext,\n  // Chaining contextual positioning\n  9: {\n    // Extension Positioning\n    posFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 9\n    extension: new r.Pointer(r.uint32, undefined)\n  }\n}); // Fix circular reference\n\nGPOSLookup.versions[9].extension.type = GPOSLookup;\nvar GPOS = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\nvar Sequence = new r.Array(r.uint16, r.uint16);\nvar AlternateSet = Sequence;\nvar Ligature = new r.Struct({\n  glyph: r.uint16,\n  compCount: r.uint16,\n  components: new r.Array(r.uint16, function (t) {\n    return t.compCount - 1;\n  })\n});\nvar LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\nvar GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Substitution\n    1: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID: r.int16\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      glyphCount: r.uint16,\n      substitute: new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n  2: {\n    // Multiple Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    sequences: new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n  3: {\n    // Alternate Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    alternateSet: new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n  4: {\n    // Ligature Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    ligatureSets: new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n  5: Context,\n  // Contextual Substitution\n  6: ChainingContext,\n  // Chaining Contextual Substitution\n  7: {\n    // Extension Substitution\n    substFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 7\n    extension: new r.Pointer(r.uint32, undefined)\n  },\n  8: {\n    // Reverse Chaining Contextual Single Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount: r.uint16,\n    substitutes: new r.Array(r.uint16, 'glyphCount')\n  }\n}); // Fix circular reference\n\nGSUBLookup.versions[7].extension.type = GSUBLookup;\nvar GSUB = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\nvar JstfGSUBModList = new r.Array(r.uint16, r.uint16);\nvar JstfPriority = new r.Struct({\n  shrinkageEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\nvar JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\nvar JstfLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\nvar JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)),\n  // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount: r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\nvar JstfScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, {\n    type: 'parent'\n  })\n});\nvar JSTF = new r.Struct({\n  version: r.uint32,\n  // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList: new r.Array(JstfScriptRecord, 'scriptCount')\n}); // TODO: add this to restructure\n\nvar VariableSizeNumber = function () {\n  function VariableSizeNumber(size) {\n    classCallCheck(this, VariableSizeNumber);\n    this._size = size;\n  }\n\n  VariableSizeNumber.prototype.decode = function decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1:\n        return stream.readUInt8();\n\n      case 2:\n        return stream.readUInt16BE();\n\n      case 3:\n        return stream.readUInt24BE();\n\n      case 4:\n        return stream.readUInt32BE();\n    }\n  };\n\n  VariableSizeNumber.prototype.size = function size(val, parent) {\n    return resolveLength(this._size, null, parent);\n  };\n\n  return VariableSizeNumber;\n}();\n\nvar MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(function (t) {\n    return ((t.parent.entryFormat & 0x0030) >> 4) + 1;\n  }),\n  outerIndex: function outerIndex(t) {\n    return t.entry >> (t.parent.entryFormat & 0x000F) + 1;\n  },\n  innerIndex: function innerIndex(t) {\n    return t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1;\n  }\n});\nvar DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\nvar HVAR = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\nvar Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\nvar SignatureBlock = new r.Struct({\n  reserved: new r.Reserved(r.uint16, 2),\n  cbSignature: r.uint32,\n  // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature: new r.Buffer('cbSignature')\n});\nvar DSIG = new r.Struct({\n  ulVersion: r.uint32,\n  // Version number of the DSIG table (0x00000001)\n  usNumSigs: r.uint16,\n  // Number of signatures in the table\n  usFlag: r.uint16,\n  // Permission flags\n  signatures: new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\nvar GaspRange = new r.Struct({\n  rangeMaxPPEM: r.uint16,\n  // Upper limit of range, in ppem\n  rangeGaspBehavior: new r.Bitfield(r.uint16, [// Flags describing desired rasterizer behavior\n  'grayscale', 'gridfit', 'symmetricSmoothing', 'symmetricGridfit' // only in version 1, for ClearType\n  ])\n});\nvar gasp = new r.Struct({\n  version: r.uint16,\n  // set to 0\n  numRanges: r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n\n});\nvar DeviceRecord = new r.Struct({\n  pixelSize: r.uint8,\n  maximumWidth: r.uint8,\n  widths: new r.Array(r.uint8, function (t) {\n    return t.parent.parent.maxp.numGlyphs;\n  })\n}); // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n\nvar hdmx = new r.Struct({\n  version: r.uint16,\n  numRecords: r.int16,\n  sizeDeviceRecord: r.int32,\n  records: new r.Array(DeviceRecord, 'numRecords')\n});\nvar KernPair = new r.Struct({\n  left: r.uint16,\n  right: r.uint16,\n  value: r.int16\n});\nvar ClassTable = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: function max(t) {\n    return t.offsets.length && Math.max.apply(Math, t.offsets);\n  }\n});\nvar Kern2Array = new r.Struct({\n  off: function off(t) {\n    return t._startOffset - t.parent.parent._startOffset;\n  },\n  len: function len(t) {\n    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2);\n  },\n  values: new r.LazyArray(r.int16, 'len')\n});\nvar KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    pairs: new r.Array(KernPair, 'nPairs')\n  },\n  2: {\n    rowWidth: r.uint16,\n    leftTable: new r.Pointer(r.uint16, ClassTable, {\n      type: 'parent'\n    }),\n    rightTable: new r.Pointer(r.uint16, ClassTable, {\n      type: 'parent'\n    }),\n    array: new r.Pointer(r.uint16, Kern2Array, {\n      type: 'parent'\n    })\n  },\n  3: {\n    glyphCount: r.uint16,\n    kernValueCount: r.uint8,\n    leftClassCount: r.uint8,\n    rightClassCount: r.uint8,\n    flags: r.uint8,\n    kernValue: new r.Array(r.int16, 'kernValueCount'),\n    leftClass: new r.Array(r.uint8, 'glyphCount'),\n    rightClass: new r.Array(r.uint8, 'glyphCount'),\n    kernIndex: new r.Array(r.uint8, function (t) {\n      return t.leftClassCount * t.rightClassCount;\n    })\n  }\n});\nvar KernTable = new r.VersionedStruct('version', {\n  0: {\n    // Microsoft uses this format\n    subVersion: r.uint16,\n    // Microsoft has an extra sub-table version number\n    length: r.uint16,\n    // Length of the subtable, in bytes\n    format: r.uint8,\n    // Format of subtable\n    coverage: new r.Bitfield(r.uint8, ['horizontal', // 1 if table has horizontal data, 0 if vertical\n    'minimum', // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n    'crossStream', // If set to 1, kerning is perpendicular to the flow of the text\n    'override' // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  },\n  1: {\n    // Apple uses this format\n    length: r.uint32,\n    coverage: new r.Bitfield(r.uint8, [null, null, null, null, null, 'variation', // Set if table has variation kerning values\n    'crossStream', // Set if table has cross-stream kerning values\n    'vertical' // Set if table has vertical kerning values\n    ]),\n    format: r.uint8,\n    tupleIndex: r.uint16,\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  }\n});\nvar kern = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Microsoft Version\n    nTables: r.uint16,\n    tables: new r.Array(KernTable, 'nTables')\n  },\n  1: {\n    // Apple Version\n    reserved: new r.Reserved(r.uint16),\n    // the other half of the version number\n    nTables: r.uint32,\n    tables: new r.Array(KernTable, 'nTables')\n  }\n}); // Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n\nvar LTSH = new r.Struct({\n  version: r.uint16,\n  numGlyphs: r.uint16,\n  yPels: new r.Array(r.uint8, 'numGlyphs')\n}); // PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n\nvar PCLT = new r.Struct({\n  version: r.uint16,\n  fontNumber: r.uint32,\n  pitch: r.uint16,\n  xHeight: r.uint16,\n  style: r.uint16,\n  typeFamily: r.uint16,\n  capHeight: r.uint16,\n  symbolSet: r.uint16,\n  typeface: new r.String(16),\n  characterComplement: new r.String(8),\n  fileName: new r.String(6),\n  strokeWeight: new r.String(1),\n  widthType: new r.String(1),\n  serifStyle: r.uint8,\n  reserved: new r.Reserved(r.uint8)\n}); // VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\n\nvar Ratio = new r.Struct({\n  bCharSet: r.uint8,\n  // Character set\n  xRatio: r.uint8,\n  // Value to use for x-Ratio\n  yStartRatio: r.uint8,\n  // Starting y-Ratio value\n  yEndRatio: r.uint8 // Ending y-Ratio value\n\n});\nvar vTable = new r.Struct({\n  yPelHeight: r.uint16,\n  // yPelHeight to which values apply\n  yMax: r.int16,\n  // Maximum value (in pels) for this yPelHeight\n  yMin: r.int16 // Minimum value (in pels) for this yPelHeight\n\n});\nvar VdmxGroup = new r.Struct({\n  recs: r.uint16,\n  // Number of height records in this group\n  startsz: r.uint8,\n  // Starting yPelHeight\n  endsz: r.uint8,\n  // Ending yPelHeight\n  entries: new r.Array(vTable, 'recs') // The VDMX records\n\n});\nvar VDMX = new r.Struct({\n  version: r.uint16,\n  // Version number (0 or 1)\n  numRecs: r.uint16,\n  // Number of VDMX groups present\n  numRatios: r.uint16,\n  // Number of aspect ratio groupings\n  ratioRanges: new r.Array(Ratio, 'numRatios'),\n  // Ratio ranges\n  offsets: new r.Array(r.uint16, 'numRatios'),\n  // Offset to the VDMX group for this ratio range\n  groups: new r.Array(VdmxGroup, 'numRecs') // The actual VDMX groupings\n\n}); // Vertical Header Table\n\nvar vhea = new r.Struct({\n  version: r.uint16,\n  // Version number of the Vertical Header Table\n  ascent: r.int16,\n  // The vertical typographic ascender for this font\n  descent: r.int16,\n  // The vertical typographic descender for this font\n  lineGap: r.int16,\n  // The vertical typographic line gap for this font\n  advanceHeightMax: r.int16,\n  // The maximum advance height measurement found in the font\n  minTopSideBearing: r.int16,\n  // The minimum top side bearing measurement found in the font\n  minBottomSideBearing: r.int16,\n  // The minimum bottom side bearing measurement found in the font\n  yMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Caret slope (rise/run)\n  caretSlopeRun: r.int16,\n  caretOffset: r.int16,\n  // Set value equal to 0 for nonslanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // Set to 0\n  numberOfMetrics: r.uint16 // Number of advance heights in the Vertical Metrics table\n\n});\nvar VmtxEntry = new r.Struct({\n  advance: r.uint16,\n  // The advance height of the glyph\n  bearing: r.int16 // The top sidebearing of the glyph\n\n}); // Vertical Metrics Table\n\nvar vmtx = new r.Struct({\n  metrics: new r.LazyArray(VmtxEntry, function (t) {\n    return t.parent.vhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics;\n  })\n});\nvar shortFrac = new r.Fixed(16, 'BE', 14);\nvar Correspondence = new r.Struct({\n  fromCoord: shortFrac,\n  toCoord: shortFrac\n});\nvar Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\nvar avar = new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n\nvar UnboundedArrayAccessor = function () {\n  function UnboundedArrayAccessor(type, stream, parent) {\n    classCallCheck(this, UnboundedArrayAccessor);\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  UnboundedArrayAccessor.prototype.getItem = function getItem(index) {\n    if (this._items[index] == null) {\n      var pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  };\n\n  UnboundedArrayAccessor.prototype.inspect = function inspect() {\n    return '[UnboundedArray ' + this.type.constructor.name + ']';\n  };\n\n  return UnboundedArrayAccessor;\n}();\n\nvar UnboundedArray = function (_r$Array) {\n  inherits(UnboundedArray, _r$Array);\n\n  function UnboundedArray(type) {\n    classCallCheck(this, UnboundedArray);\n    return possibleConstructorReturn(this, _r$Array.call(this, type, 0));\n  }\n\n  UnboundedArray.prototype.decode = function decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  };\n\n  return UnboundedArray;\n}(r.Array);\n\nvar LookupTable = function LookupTable() {\n  var ValueType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : r.uint16; // Helper class that makes internal structures invisible to pointers\n\n  var Shadow = function () {\n    function Shadow(type) {\n      classCallCheck(this, Shadow);\n      this.type = type;\n    }\n\n    Shadow.prototype.decode = function decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    };\n\n    Shadow.prototype.size = function size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    };\n\n    Shadow.prototype.encode = function encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    };\n\n    return Shadow;\n  }();\n\n  ValueType = new Shadow(ValueType);\n  var BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n  var LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n  var LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, function (t) {\n      return t.lastGlyph - t.firstGlyph + 1;\n    }), {\n      type: 'parent'\n    })\n  });\n  var LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\n\nfunction StateTable() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : r.uint16;\n  var entry = Object.assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint16, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n  return StateHeader;\n} // This is the old version of the StateTable structure\n\n\nfunction StateTable1() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : r.uint16;\n  var ClassLookupTable = new r.Struct({\n    version: function version() {\n      return 8;\n    },\n    // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n  var entry = Object.assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: function newState(t) {\n      return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses;\n    },\n    flags: r.uint16\n  }, entryData);\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint8, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n  return StateHeader1;\n}\n\nvar BslnSubtable = new r.VersionedStruct('format', {\n  0: {\n    // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n  1: {\n    // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n  2: {\n    // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n  3: {\n    // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\nvar bsln = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\nvar Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), {\n    type: 'parent'\n  }),\n  featureFlags: new r.Bitfield(r.uint8, [null, null, null, null, null, null, 'hasDefault', 'exclusive']),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar feat = new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\nvar Axis$1 = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  }\n});\nvar Instance = new r.Struct({\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  },\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, function (t) {\n    return t.parent.axisCount;\n  }),\n  postscriptNameID: new r.Optional(r.uint16, function (t) {\n    return t.parent.instanceSize - t._currentOffset > 0;\n  })\n});\nvar fvar = new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis$1, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\nvar shortFrac$1 = new r.Fixed(16, 'BE', 14);\n\nvar Offset = function () {\n  function Offset() {\n    classCallCheck(this, Offset);\n  }\n\n  Offset.decode = function decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n  };\n\n  return Offset;\n}();\n\nvar gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac$1, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', {\n    relativeTo: 'offsetToData',\n    allowNull: false\n  }), function (t) {\n    return t.glyphCount + 1;\n  })\n});\nvar ClassTable$1 = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1()\n});\nvar WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\nvar WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\nvar ActionData = new r.VersionedStruct('actionType', {\n  0: {\n    // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n  1: {\n    // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n  2: {\n    // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n  3: {},\n  // Stretch glyph action (no data, not supported by CoreText)\n  4: {\n    // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n  5: {\n    // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\nvar Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.actionLength - t._currentOffset;\n  })\n});\nvar PostcompensationAction = new r.Array(Action, r.uint32);\nvar PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\nvar JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable$1, {\n    type: 'parent'\n  }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, {\n    type: 'parent'\n  }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, {\n    type: 'parent',\n    relativeTo: 'wdcOffset'\n  }))\n});\nvar just = new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\nvar LigatureData = {\n  action: r.uint16\n};\nvar ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\nvar InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\nvar SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable()))\n});\nvar SubtableData = new r.VersionedStruct('type', {\n  0: {\n    // Indic Rearrangement Subtable\n    stateTable: new StateTable()\n  },\n  1: {\n    // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n  2: {\n    // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n  4: {\n    // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable()\n  },\n  5: {\n    // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\nvar Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.length - t._currentOffset;\n  })\n});\nvar FeatureEntry = new r.Struct({\n  featureType: r.uint16,\n  featureSetting: r.uint16,\n  enableFlags: r.uint32,\n  disableFlags: r.uint32\n});\nvar MorxChain = new r.Struct({\n  defaultFlags: r.uint32,\n  chainLength: r.uint32,\n  nFeatureEntries: r.uint32,\n  nSubtables: r.uint32,\n  features: new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables: new r.Array(Subtable, 'nSubtables')\n});\nvar morx = new r.Struct({\n  version: r.uint16,\n  unused: new r.Reserved(r.uint16),\n  nChains: r.uint32,\n  chains: new r.Array(MorxChain, 'nChains')\n});\nvar OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\nvar opbd = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\nvar tables = {}; // Required Tables\n\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = NameTable;\ntables['OS/2'] = OS2;\ntables.post = post; // TrueType Outlines\n\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf; // PostScript Outlines\n\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG; // Bitmap Glyphs\n\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL; // Advanced OpenType Tables\n\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF; // OpenType variations tables\n\ntables.HVAR = HVAR; // Other OpenType Tables\n\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx; // Apple Advanced Typography Tables\n\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\nvar TableEntry = new r.Struct({\n  tag: new r.String(4),\n  checkSum: r.uint32,\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  length: r.uint32\n});\nvar Directory = new r.Struct({\n  tag: new r.String(4),\n  numTables: r.uint16,\n  searchRange: r.uint16,\n  entrySelector: r.uint16,\n  rangeShift: r.uint16,\n  tables: new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function () {\n  var tables$$1 = {};\n\n  for (var _iterator = this.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var table = _ref;\n    tables$$1[table.tag] = table;\n  }\n\n  this.tables = tables$$1;\n};\n\nDirectory.preEncode = function (stream) {\n  var tables$$1 = [];\n\n  for (var tag in this.tables) {\n    var table = this.tables[tag];\n\n    if (table) {\n      tables$$1.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new r.VoidPointer(tables[tag], table),\n        length: tables[tag].size(table)\n      });\n    }\n  }\n\n  this.tag = 'true';\n  this.numTables = tables$$1.length;\n  this.tables = tables$$1;\n  this.searchRange = Math.floor(Math.log(this.numTables) / Math.LN2) * 16;\n  this.entrySelector = Math.floor(this.searchRange / Math.LN2);\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nfunction binarySearch(arr, cmp) {\n  var min = 0;\n  var max = arr.length - 1;\n\n  while (min <= max) {\n    var mid = min + max >> 1;\n    var res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nfunction range(index, end) {\n  var range = [];\n\n  while (index < end) {\n    range.push(index++);\n  }\n\n  return range;\n}\n\nvar _class$1;\n\nfunction _applyDecoratedDescriptor$1(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n} // iconv-lite is an optional dependency.\n\n\ntry {\n  var iconv = require('iconv-lite');\n} catch (err) {}\n\nvar CmapProcessor = (_class$1 = function () {\n  function CmapProcessor(cmapTable) {\n    classCallCheck(this, CmapProcessor); // Attempt to find a Unicode cmap first\n\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [// 32-bit subtables\n    [3, 10], [0, 6], [0, 4], // 16-bit subtables\n    [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]); // If not unicode cmap was found, and iconv-lite is installed,\n    // take the first table with a supported encoding.\n\n    if (!this.cmap && iconv) {\n      for (var _iterator = cmapTable.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var cmap = _ref;\n        var encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n\n        if (iconv.encodingExists(encoding)) {\n          this.cmap = cmap.table;\n          this.encoding = encoding;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  CmapProcessor.prototype.findSubtable = function findSubtable(cmapTable, pairs) {\n    for (var _iterator2 = pairs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var _ref3 = _ref2,\n          platformID = _ref3[0],\n          encodingID = _ref3[1];\n\n      for (var _iterator3 = cmapTable.tables, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref4 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref4 = _i3.value;\n        }\n\n        var cmap = _ref4;\n\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  CmapProcessor.prototype.lookup = function lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      var buf = iconv.encode(String.fromCodePoint(codepoint), this.encoding);\n      codepoint = 0;\n\n      for (var i = 0; i < buf.length; i++) {\n        codepoint = codepoint << 8 | buf[i];\n      } // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n\n    } else if (variationSelector) {\n      var gid = this.getVariationSelector(codepoint, variationSelector);\n\n      if (gid) {\n        return gid;\n      }\n    }\n\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4:\n        {\n          var min = 0;\n          var max = cmap.segCount - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n\n            if (codepoint < cmap.startCode.get(mid)) {\n              max = mid - 1;\n            } else if (codepoint > cmap.endCode.get(mid)) {\n              min = mid + 1;\n            } else {\n              var rangeOffset = cmap.idRangeOffset.get(mid);\n\n              var _gid = void 0;\n\n              if (rangeOffset === 0) {\n                _gid = codepoint + cmap.idDelta.get(mid);\n              } else {\n                var index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                _gid = cmap.glyphIndexArray.get(index) || 0;\n\n                if (_gid !== 0) {\n                  _gid += cmap.idDelta.get(mid);\n                }\n              }\n\n              return _gid & 0xffff;\n            }\n          }\n\n          return 0;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13:\n        {\n          var _min = 0;\n\n          var _max = cmap.nGroups - 1;\n\n          while (_min <= _max) {\n            var _mid = _min + _max >> 1;\n\n            var group = cmap.groups.get(_mid);\n\n            if (codepoint < group.startCharCode) {\n              _max = _mid - 1;\n            } else if (codepoint > group.endCharCode) {\n              _min = _mid + 1;\n            } else {\n              if (cmap.version === 12) {\n                return group.glyphID + (codepoint - group.startCharCode);\n              } else {\n                return group.glyphID;\n              }\n            }\n          }\n\n          return 0;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  CmapProcessor.prototype.getVariationSelector = function getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    var selectors = this.uvs.varSelectors.toArray();\n    var i = binarySearch(selectors, function (x) {\n      return variationSelector - x.varSelector;\n    });\n    var sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, function (x) {\n        return codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0;\n      });\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, function (x) {\n        return codepoint - x.unicodeValue;\n      });\n\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  };\n\n  CmapProcessor.prototype.getCharacterSet = function getCharacterSet() {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4:\n        {\n          var res = [];\n          var endCodes = cmap.endCode.toArray();\n\n          for (var i = 0; i < endCodes.length; i++) {\n            var tail = endCodes[i] + 1;\n            var start = cmap.startCode.get(i);\n            res.push.apply(res, range(start, tail));\n          }\n\n          return res;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13:\n        {\n          var _res = [];\n\n          for (var _iterator4 = cmap.groups.toArray(), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n            var _ref5;\n\n            if (_isArray4) {\n              if (_i4 >= _iterator4.length) break;\n              _ref5 = _iterator4[_i4++];\n            } else {\n              _i4 = _iterator4.next();\n              if (_i4.done) break;\n              _ref5 = _i4.value;\n            }\n\n            var group = _ref5;\n\n            _res.push.apply(_res, range(group.startCharCode, group.endCharCode + 1));\n          }\n\n          return _res;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  CmapProcessor.prototype.codePointsForGlyph = function codePointsForGlyph(gid) {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        {\n          var res = [];\n\n          for (var i = 0; i < 256; i++) {\n            if (cmap.codeMap.get(i) === gid) {\n              res.push(i);\n            }\n          }\n\n          return res;\n        }\n\n      case 4:\n        {\n          var _res2 = [];\n\n          for (var _i5 = 0; _i5 < cmap.segCount; _i5++) {\n            var end = cmap.endCode.get(_i5);\n            var start = cmap.startCode.get(_i5);\n            var rangeOffset = cmap.idRangeOffset.get(_i5);\n            var delta = cmap.idDelta.get(_i5);\n\n            for (var c = start; c <= end; c++) {\n              var g = 0;\n\n              if (rangeOffset === 0) {\n                g = c + delta;\n              } else {\n                var index = rangeOffset / 2 + (c - start) - (cmap.segCount - _i5);\n                g = cmap.glyphIndexArray.get(index) || 0;\n\n                if (g !== 0) {\n                  g += delta;\n                }\n              }\n\n              if (g === gid) {\n                _res2.push(c);\n              }\n            }\n          }\n\n          return _res2;\n        }\n\n      case 12:\n        {\n          var _res3 = [];\n\n          for (var _iterator5 = cmap.groups.toArray(), _isArray5 = Array.isArray(_iterator5), _i6 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n            var _ref6;\n\n            if (_isArray5) {\n              if (_i6 >= _iterator5.length) break;\n              _ref6 = _iterator5[_i6++];\n            } else {\n              _i6 = _iterator5.next();\n              if (_i6.done) break;\n              _ref6 = _i6.value;\n            }\n\n            var group = _ref6;\n\n            if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n              _res3.push(group.startCharCode + (gid - group.glyphID));\n            }\n          }\n\n          return _res3;\n        }\n\n      case 13:\n        {\n          var _res4 = [];\n\n          for (var _iterator6 = cmap.groups.toArray(), _isArray6 = Array.isArray(_iterator6), _i7 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n            var _ref7;\n\n            if (_isArray6) {\n              if (_i7 >= _iterator6.length) break;\n              _ref7 = _iterator6[_i7++];\n            } else {\n              _i7 = _iterator6.next();\n              if (_i7.done) break;\n              _ref7 = _i7.value;\n            }\n\n            var _group = _ref7;\n\n            if (gid === _group.glyphID) {\n              _res4.push.apply(_res4, range(_group.startCharCode, _group.endCharCode + 1));\n            }\n          }\n\n          return _res4;\n        }\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  return CmapProcessor;\n}(), _applyDecoratedDescriptor$1(_class$1.prototype, 'getCharacterSet', [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, 'getCharacterSet'), _class$1.prototype), _applyDecoratedDescriptor$1(_class$1.prototype, 'codePointsForGlyph', [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, 'codePointsForGlyph'), _class$1.prototype), _class$1);\n\nvar KernProcessor = function () {\n  function KernProcessor(font) {\n    classCallCheck(this, KernProcessor);\n    this.kern = font.kern;\n  }\n\n  KernProcessor.prototype.process = function process(glyphs, positions) {\n    for (var glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      var left = glyphs[glyphIndex].id;\n      var right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  };\n\n  KernProcessor.prototype.getKerning = function getKerning(left, right) {\n    var res = 0;\n\n    for (var _iterator = this.kern.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var table = _ref;\n\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n\n        default:\n          throw new Error('Unsupported kerning table version ' + table.version);\n      }\n\n      var val = 0;\n      var s = table.subtable;\n\n      switch (table.format) {\n        case 0:\n          var pairIdx = binarySearch(s.pairs, function (pair) {\n            return left - pair.left || right - pair.right;\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          var leftOffset = 0,\n              rightOffset = 0;\n\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          var index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error('Unsupported kerning sub-table format ' + table.format);\n      } // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n\n\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  };\n\n  return KernProcessor;\n}();\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\n\n\nvar UnicodeLayoutEngine = function () {\n  function UnicodeLayoutEngine(font) {\n    classCallCheck(this, UnicodeLayoutEngine);\n    this.font = font;\n  }\n\n  UnicodeLayoutEngine.prototype.positionGlyphs = function positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    var clusterStart = 0;\n    var clusterEnd = 0;\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.isMark) {\n        // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  };\n\n  UnicodeLayoutEngine.prototype.positionCluster = function positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    var base = glyphs[clusterStart];\n    var baseBox = base.cbox.copy(); // adjust bounding box for ligature glyphs\n\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n    }\n\n    var xOffset = -positions[clusterStart].xAdvance;\n    var yOffset = 0;\n    var yGap = this.font.unitsPerEm / 16; // position each of the mark glyphs relative to the base glyph\n\n    for (var index = clusterStart + 1; index <= clusterEnd; index++) {\n      var mark = glyphs[index];\n      var markBox = mark.cbox;\n      var position = positions[index];\n      var combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0; // x positioning\n\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default:\n            // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        } // y positioning\n\n\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  };\n\n  UnicodeLayoutEngine.prototype.getCombiningClass = function getCombiningClass(codePoint) {\n    var combiningClass = unicode.getCombiningClass(codePoint); // Thai / Lao need some per-character work\n\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) {\n        // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n      case 'CCC10': // sheva\n\n      case 'CCC11': // hataf segol\n\n      case 'CCC12': // hataf patah\n\n      case 'CCC13': // hataf qamats\n\n      case 'CCC14': // hiriq\n\n      case 'CCC15': // tsere\n\n      case 'CCC16': // segol\n\n      case 'CCC17': // patah\n\n      case 'CCC18': // qamats\n\n      case 'CCC20': // qubuts\n\n      case 'CCC22':\n        // meteg\n        return 'Below';\n\n      case 'CCC23':\n        // rafe\n        return 'Attached_Above';\n\n      case 'CCC24':\n        // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n\n      case 'CCC19':\n        // holam\n        return 'Above_Left';\n\n      case 'CCC26':\n        // point varika\n        return 'Above';\n\n      case 'CCC21':\n        // dagesh\n        break;\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n\n      case 'CCC28': // dammatan\n\n      case 'CCC30': // fatha\n\n      case 'CCC31': // damma\n\n      case 'CCC33': // shadda\n\n      case 'CCC34': // sukun\n\n      case 'CCC35': // superscript alef\n\n      case 'CCC36':\n        // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n\n      case 'CCC32':\n        // kasra\n        return 'Below';\n      // Thai\n\n      case 'CCC103':\n        // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107':\n        // mai\n        return 'Above_Right';\n      // Lao\n\n      case 'CCC118':\n        // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122':\n        // mai\n        return 'Above';\n      // Tibetan\n\n      case 'CCC129': // sign aa\n\n      case 'CCC132':\n        // sign u\n        return 'Below';\n\n      case 'CCC130':\n        // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  };\n\n  return UnicodeLayoutEngine;\n}();\n/**\n * Represents a glyph bounding box\n */\n\n\nvar BBox = function () {\n  function BBox() {\n    var minX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n    var minY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n    var maxX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -Infinity;\n    var maxY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -Infinity;\n    classCallCheck(this, BBox);\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n\n    this.minX = minX;\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.minY = minY;\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n\n    this.maxX = maxX;\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.maxY = maxY;\n  }\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n\n\n  BBox.prototype.addPoint = function addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  };\n\n  BBox.prototype.copy = function copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  };\n\n  createClass(BBox, [{\n    key: \"width\",\n    get: function get$$1() {\n      return this.maxX - this.minX;\n    }\n    /**\n     * The height of the bounding box\n     * @type {number}\n     */\n\n  }, {\n    key: \"height\",\n    get: function get$$1() {\n      return this.maxY - this.minY;\n    }\n  }]);\n  return BBox;\n}(); // This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\n\n\nvar UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\nvar OPENTYPE_SCRIPTS = {};\n\nfor (var script in UNICODE_SCRIPTS) {\n  var tag = UNICODE_SCRIPTS[script];\n\n  if (Array.isArray(tag)) {\n    for (var _iterator = tag, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var t = _ref;\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\n\nfunction fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\n\nfunction forString(string) {\n  var len = string.length;\n  var idx = 0;\n\n  while (idx < len) {\n    var code = string.charCodeAt(idx++); // Check if this is a high surrogate\n\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      var next = string.charCodeAt(idx); // Check if this is a low surrogate\n\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    var _script = unicode.getScript(code);\n\n    if (_script !== 'Common' && _script !== 'Inherited' && _script !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n} // The scripts in this map are written from right to left\n\n\nvar RTL = {\n  arab: true,\n  // Arabic\n  hebr: true,\n  // Hebrew\n  syrc: true,\n  // Syriac\n  thaa: true,\n  // Thaana\n  cprt: true,\n  // Cypriot Syllabary\n  khar: true,\n  // Kharosthi\n  phnx: true,\n  // Phoenician\n  'nko ': true,\n  // N'Ko\n  lydi: true,\n  // Lydian\n  avst: true,\n  // Avestan\n  armi: true,\n  // Imperial Aramaic\n  phli: true,\n  // Inscriptional Pahlavi\n  prti: true,\n  // Inscriptional Parthian\n  sarb: true,\n  // Old South Arabian\n  orkh: true,\n  // Old Turkic, Orkhon Runic\n  samr: true,\n  // Samaritan\n  mand: true,\n  // Mandaic, Mandaean\n  merc: true,\n  // Meroitic Cursive\n  mero: true,\n  // Meroitic Hieroglyphs\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,\n  // Manichaean\n  mend: true,\n  // Mende Kikakui\n  nbat: true,\n  // Nabataean\n  narb: true,\n  // Old North Arabian\n  palm: true,\n  // Palmyrene\n  phlp: true // Psalter Pahlavi\n\n};\n\nfunction direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\n\n\nvar GlyphRun = function () {\n  function GlyphRun(glyphs, features, script, language, direction$$1) {\n    classCallCheck(this, GlyphRun);\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n\n    this.glyphs = glyphs;\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n\n    this.positions = null;\n    /**\n     * An array of indices to indices in the input string for each glyph\n     * @type {number[]}\n     */\n\n    this.stringIndices = null;\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n\n    this.script = script;\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n\n    this.language = language || null;\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n\n    this.direction = direction$$1 || direction(script);\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n\n    this.features = {}; // Convert features to an object\n\n    if (Array.isArray(features)) {\n      for (var _iterator = features, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var tag = _ref;\n        this.features[tag] = true;\n      }\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      this.features = features;\n    }\n  }\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n\n\n  createClass(GlyphRun, [{\n    key: 'advanceWidth',\n    get: function get$$1() {\n      var width = 0;\n\n      for (var _iterator2 = this.positions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var position = _ref2;\n        width += position.xAdvance;\n      }\n\n      return width;\n    }\n    /**\n     * The total advance height of the run.\n     * @type {number}\n     */\n\n  }, {\n    key: 'advanceHeight',\n    get: function get$$1() {\n      var height = 0;\n\n      for (var _iterator3 = this.positions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var position = _ref3;\n        height += position.yAdvance;\n      }\n\n      return height;\n    }\n    /**\n     * The bounding box containing all glyphs in the run.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      var bbox = new BBox();\n      var x = 0;\n      var y = 0;\n\n      for (var index = 0; index < this.glyphs.length; index++) {\n        var glyph = this.glyphs[index];\n        var p = this.positions[index];\n        var b = glyph.bbox;\n        bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n        bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n        x += p.xAdvance;\n        y += p.yAdvance;\n      }\n\n      return bbox;\n    }\n  }]);\n  return GlyphRun;\n}();\n/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\n\n\nvar GlyphPosition = function GlyphPosition() {\n  var xAdvance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var yAdvance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var xOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var yOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  classCallCheck(this, GlyphPosition);\n  /**\n   * The amount to move the virtual pen in the X direction after rendering this glyph.\n   * @type {number}\n   */\n\n  this.xAdvance = xAdvance;\n  /**\n   * The amount to move the virtual pen in the Y direction after rendering this glyph.\n   * @type {number}\n   */\n\n  this.yAdvance = yAdvance;\n  /**\n   * The offset from the pen position in the X direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.xOffset = xOffset;\n  /**\n   * The offset from the pen position in the Y direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.yOffset = yOffset;\n}; // see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\n\n\nvar features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  // upperAndLowerCase: 0          # deprecated\n  // allCaps: 1                    # deprecated\n  // allLowerCase: 2               # deprecated\n  // smallCaps: 3                  # deprecated\n  // initialCaps: 4                # deprecated\n  // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n  // formInterrobang: 6\n  // smartQuotes: 8\n  // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  // hanjaToHangul: 1\n  // hiraganaToKatakana: 2\n  // katakanaToHiragana: 3\n  // kanaToRomanization: 4\n  // romanizationToHiragana: 5\n  // romanizationToKatakana: 6\n  // hanjaToHangulAltOne: 7\n  // hanjaToHangulAltTwo: 8\n  // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: {\n    // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nvar feature = function feature(name, selector) {\n  return [features[name].code, features[name][selector]];\n};\n\nvar OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'),\n  // ??\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'),\n  // ??\n  numr: feature('fractions', 'diagonalFractions'),\n  // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'),\n  // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'),\n  // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'),\n  // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n  init: feature('smartSwash', 'wordInitialSwashes'),\n  // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'),\n  // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n  calt: feature('contextualAlternates', 'contextualAlternates'),\n  // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'),\n  // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'),\n  // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'),\n  // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'),\n  //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n}; // salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\n\nfor (var i = 1; i <= 99; i++) {\n  OTMapping['cv' + ('00' + i).slice(-2)] = [features.characterAlternatives.code, i];\n} // create inverse mapping\n\n\nvar AATMapping = {};\n\nfor (var ot in OTMapping) {\n  var aat = OTMapping[ot];\n\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n} // Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\n\n\nfunction mapOTToAAT(features) {\n  var res = {};\n\n  for (var k in features) {\n    var r$$1 = void 0;\n\n    if (r$$1 = OTMapping[k]) {\n      if (res[r$$1[0]] == null) {\n        res[r$$1[0]] = {};\n      }\n\n      res[r$$1[0]][r$$1[1]] = features[k];\n    }\n  }\n\n  return res;\n} // Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\n\n\nfunction mapFeatureStrings(f) {\n  var type = f[0],\n      setting = f[1];\n\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n} // Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\n\n\nfunction mapAATToOT(features) {\n  var res = {};\n\n  if (Array.isArray(features)) {\n    for (var k = 0; k < features.length; k++) {\n      var r$$1 = void 0;\n      var f = mapFeatureStrings(features[k]);\n\n      if (r$$1 = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r$$1] = true;\n      }\n    }\n  } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n    for (var type in features) {\n      var _feature = features[type];\n\n      for (var setting in _feature) {\n        var _r = void 0;\n\n        var _f = mapFeatureStrings([type, setting]);\n\n        if (_feature[setting] && (_r = AATMapping[_f[0]] && AATMapping[_f[0]][_f[1]])) {\n          res[_r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n\nvar _class$3;\n\nfunction _applyDecoratedDescriptor$3(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nvar AATLookupTable = (_class$3 = function () {\n  function AATLookupTable(table) {\n    classCallCheck(this, AATLookupTable);\n    this.table = table;\n  }\n\n  AATLookupTable.prototype.lookup = function lookup(glyph) {\n    switch (this.table.version) {\n      case 0:\n        // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n\n      case 4:\n        {\n          var min = 0;\n          var max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.firstGlyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.firstGlyph) {\n              max = mid - 1;\n            } else if (glyph > seg.lastGlyph) {\n              min = mid + 1;\n            } else {\n              if (this.table.version === 2) {\n                return seg.value;\n              } else {\n                return seg.values[glyph - seg.firstGlyph];\n              }\n            }\n          }\n\n          return null;\n        }\n\n      case 6:\n        {\n          // lookup single\n          var _min = 0;\n\n          var _max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (_min <= _max) {\n            var mid = _min + _max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.glyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.glyph) {\n              _max = mid - 1;\n            } else if (glyph > seg.glyph) {\n              _min = mid + 1;\n            } else {\n              return seg.value;\n            }\n          }\n\n          return null;\n        }\n\n      case 8:\n        // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error('Unknown lookup table format: ' + this.table.version);\n    }\n  };\n\n  AATLookupTable.prototype.glyphsForValue = function glyphsForValue(classValue) {\n    var res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n\n      case 4:\n        {\n          for (var _iterator = this.table.segments, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var segment = _ref;\n\n            if (this.table.version === 2 && segment.value === classValue) {\n              res.push.apply(res, range(segment.firstGlyph, segment.lastGlyph + 1));\n            } else {\n              for (var index = 0; index < segment.values.length; index++) {\n                if (segment.values[index] === classValue) {\n                  res.push(segment.firstGlyph + index);\n                }\n              }\n            }\n          }\n\n          break;\n        }\n\n      case 6:\n        {\n          // lookup single\n          for (var _iterator2 = this.table.segments, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray2) {\n              if (_i2 >= _iterator2.length) break;\n              _ref2 = _iterator2[_i2++];\n            } else {\n              _i2 = _iterator2.next();\n              if (_i2.done) break;\n              _ref2 = _i2.value;\n            }\n\n            var _segment = _ref2;\n\n            if (_segment.value === classValue) {\n              res.push(_segment.glyph);\n            }\n          }\n\n          break;\n        }\n\n      case 8:\n        {\n          // lookup trimmed\n          for (var i = 0; i < this.table.values.length; i++) {\n            if (this.table.values[i] === classValue) {\n              res.push(this.table.firstGlyph + i);\n            }\n          }\n\n          break;\n        }\n\n      default:\n        throw new Error('Unknown lookup table format: ' + this.table.version);\n    }\n\n    return res;\n  };\n\n  return AATLookupTable;\n}(), _applyDecoratedDescriptor$3(_class$3.prototype, 'glyphsForValue', [cache], Object.getOwnPropertyDescriptor(_class$3.prototype, 'glyphsForValue'), _class$3.prototype), _class$3);\nvar START_OF_TEXT_STATE = 0;\nvar END_OF_TEXT_CLASS = 0;\nvar OUT_OF_BOUNDS_CLASS = 1;\nvar DELETED_GLYPH_CLASS = 2;\nvar DONT_ADVANCE = 0x4000;\n\nvar AATStateMachine = function () {\n  function AATStateMachine(stateTable) {\n    classCallCheck(this, AATStateMachine);\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  AATStateMachine.prototype.process = function process(glyphs, reverse, processEntry) {\n    var currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n\n    var index = reverse ? glyphs.length - 1 : 0;\n    var dir = reverse ? -1 : 1;\n\n    while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n      var glyph = null;\n      var classCode = OUT_OF_BOUNDS_CLASS;\n      var shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n\n        if (glyph.id === 0xffff) {\n          // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      var row = this.stateTable.stateArray.getItem(currentState);\n      var entryIndex = row[classCode];\n      var entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  };\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n\n\n  AATStateMachine.prototype.traverse = function traverse(opts) {\n    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var visited = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n    var _stateTable = this.stateTable,\n        nClasses = _stateTable.nClasses,\n        stateArray = _stateTable.stateArray,\n        entryTable = _stateTable.entryTable;\n    var row = stateArray.getItem(state); // Skip predefined classes\n\n    for (var classCode = 4; classCode < nClasses; classCode++) {\n      var entryIndex = row[classCode];\n      var entry = entryTable.getItem(entryIndex); // Try all glyphs in the class\n\n      for (var _iterator = this.lookupTable.glyphsForValue(classCode), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var glyph = _ref;\n\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  };\n\n  return AATStateMachine;\n}();\n\nvar _class$2;\n\nfunction _applyDecoratedDescriptor$2(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n} // indic replacement flags\n\n\nvar MARK_FIRST = 0x8000;\nvar MARK_LAST = 0x2000;\nvar VERB = 0x000f; // contextual substitution and glyph insertion flag\n\nvar SET_MARK = 0x8000; // ligature entry flags\n\nvar SET_COMPONENT = 0x8000;\nvar PERFORM_ACTION = 0x2000; // ligature action masks\n\nvar LAST_MASK = 0x80000000;\nvar STORE_MASK = 0x40000000;\nvar OFFSET_MASK = 0x3fffffff;\nvar REVERSE_DIRECTION = 0x400000;\nvar CURRENT_INSERT_BEFORE = 0x0800;\nvar MARKED_INSERT_BEFORE = 0x0400;\nvar CURRENT_INSERT_COUNT = 0x03e0;\nvar MARKED_INSERT_COUNT = 0x001f;\nvar AATMorxProcessor = (_class$2 = function () {\n  function AATMorxProcessor(font) {\n    classCallCheck(this, AATMorxProcessor);\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  } // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:true}}\n\n\n  AATMorxProcessor.prototype.process = function process(glyphs) {\n    var features = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (var _iterator = this.morx.chains, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var chain = _ref;\n      var flags = chain.defaultFlags; // enable/disable the requested features\n\n      for (var _iterator2 = chain.features, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var feature = _ref2;\n        var f = void 0;\n\n        if ((f = features[feature.featureType]) && f[feature.featureSetting]) {\n          flags &= feature.disableFlags;\n          flags |= feature.enableFlags;\n        }\n      }\n\n      for (var _iterator3 = chain.subtables, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var subtable = _ref3;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    } // remove deleted glyphs\n\n\n    var index = glyphs.length - 1;\n\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  };\n\n  AATMorxProcessor.prototype.processSubtable = function processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  };\n\n  AATMorxProcessor.prototype.getStateMachine = function getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  };\n\n  AATMorxProcessor.prototype.getProcessor = function getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n\n      case 1:\n        return this.processContextualSubstitution;\n\n      case 2:\n        return this.processLigature;\n\n      case 4:\n        return this.processNoncontextualSubstitutions;\n\n      case 5:\n        return this.processGlyphInsertion;\n\n      default:\n        throw new Error('Invalid morx subtable type: ' + this.subtable.type);\n    }\n  };\n\n  AATMorxProcessor.prototype.processIndicRearragement = function processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  };\n\n  AATMorxProcessor.prototype.processContextualSubstitution = function processContextualSubstitution(glyph, entry, index) {\n    var subsitutions = this.subtable.table.substitutionTable.items;\n\n    if (entry.markIndex !== 0xffff) {\n      var lookup = subsitutions.getItem(entry.markIndex);\n      var lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      var _lookup = subsitutions.getItem(entry.currentIndex);\n\n      var _lookupTable = new AATLookupTable(_lookup);\n\n      glyph = this.glyphs[index];\n\n      var gid = _lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  };\n\n  AATMorxProcessor.prototype.processLigature = function processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      var _ligatureStack;\n\n      var actions = this.subtable.table.ligatureActions;\n      var components = this.subtable.table.components;\n      var ligatureList = this.subtable.table.ligatureList;\n      var actionIndex = entry.action;\n      var last = false;\n      var ligatureIndex = 0;\n      var codePoints = [];\n      var ligatureGlyphs = [];\n\n      while (!last) {\n        var _codePoints;\n\n        var componentGlyph = this.ligatureStack.pop();\n\n        (_codePoints = codePoints).unshift.apply(_codePoints, this.glyphs[componentGlyph].codePoints);\n\n        var action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        var store = !!(action & STORE_MASK);\n        var offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n\n        offset += this.glyphs[componentGlyph].id;\n        var component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          var ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      } // Put ligature glyph indexes back on the stack\n\n\n      (_ligatureStack = this.ligatureStack).push.apply(_ligatureStack, ligatureGlyphs);\n    }\n  };\n\n  AATMorxProcessor.prototype.processNoncontextualSubstitutions = function processNoncontextualSubstitutions(subtable, glyphs, index) {\n    var lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.id !== 0xffff) {\n        var gid = lookupTable.lookup(glyph.id);\n\n        if (gid) {\n          // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  };\n\n  AATMorxProcessor.prototype._insertGlyphs = function _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    var _glyphs;\n\n    var stringIndex = this.glyphs[glyphIndex].stringIndex;\n    var insertions = [];\n\n    while (count--) {\n      var gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    (_glyphs = this.glyphs).splice.apply(_glyphs, [glyphIndex, 0].concat(insertions));\n  };\n\n  AATMorxProcessor.prototype.processGlyphInsertion = function processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      var count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      var isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      var _count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n\n      var _isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n\n      this._insertGlyphs(index, entry.currentInsertIndex, _count, _isBefore);\n    }\n  };\n\n  AATMorxProcessor.prototype.getSupportedFeatures = function getSupportedFeatures() {\n    var features = [];\n\n    for (var _iterator4 = this.morx.chains, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var chain = _ref4;\n\n      for (var _iterator5 = chain.features, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var feature = _ref5;\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  };\n\n  AATMorxProcessor.prototype.generateInputs = function generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  };\n\n  AATMorxProcessor.prototype.generateInputCache = function generateInputCache() {\n    this.inputCache = {};\n\n    for (var _iterator6 = this.morx.chains, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n      var _ref6;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref6 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref6 = _i6.value;\n      }\n\n      var chain = _ref6;\n      var flags = chain.defaultFlags;\n\n      for (var _iterator7 = chain.subtables, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n        var _ref7;\n\n        if (_isArray7) {\n          if (_i7 >= _iterator7.length) break;\n          _ref7 = _iterator7[_i7++];\n        } else {\n          _i7 = _iterator7.next();\n          if (_i7.done) break;\n          _ref7 = _i7.value;\n        }\n\n        var subtable = _ref7;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  };\n\n  AATMorxProcessor.prototype.generateInputsForSubtable = function generateInputsForSubtable(subtable) {\n    var _this = this; // Currently, only supporting ligature subtables.\n\n\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    var reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var input = [];\n    var stack = [];\n    this.glyphs = [];\n    stateMachine.traverse({\n      enter: function enter(glyph, entry) {\n        var glyphs = _this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: _this.ligatureStack.slice()\n        }); // Add glyph to input and glyphs to process.\n\n        var g = _this.font.getGlyph(glyph);\n\n        input.push(g);\n        glyphs.push(input[input.length - 1]); // Process ligature substitution\n\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1); // Add input to result if only one matching (non-deleted) glyph remains.\n\n        var count = 0;\n        var found = 0;\n\n        for (var i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          var result = input.map(function (g) {\n            return g.id;\n          });\n          var _cache = _this.inputCache[found];\n\n          if (_cache) {\n            _cache.push(result);\n          } else {\n            _this.inputCache[found] = [result];\n          }\n        }\n      },\n      exit: function exit() {\n        var _stack$pop = stack.pop();\n\n        _this.glyphs = _stack$pop.glyphs;\n        _this.ligatureStack = _stack$pop.ligatureStack;\n        input.pop();\n      }\n    });\n  };\n\n  return AATMorxProcessor;\n}(), _applyDecoratedDescriptor$2(_class$2.prototype, 'getStateMachine', [cache], Object.getOwnPropertyDescriptor(_class$2.prototype, 'getStateMachine'), _class$2.prototype), _class$2);\n\nfunction swap(glyphs, rangeA, rangeB) {\n  var reverseA = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var reverseB = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n\n  if (reverseB) {\n    end.reverse();\n  }\n\n  var start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(end));\n\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(start));\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  switch (verb) {\n    case 0:\n      // no change\n      return glyphs;\n\n    case 1:\n      // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2:\n      // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3:\n      // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4:\n      // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5:\n      // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6:\n      // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7:\n      // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8:\n      // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9:\n      // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10:\n      // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11:\n      // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12:\n      // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13:\n      // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14:\n      // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15:\n      // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error('Unknown verb: ' + verb);\n  }\n}\n\nvar AATLayoutEngine = function () {\n  function AATLayoutEngine(font) {\n    classCallCheck(this, AATLayoutEngine);\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  AATLayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, mapOTToAAT(glyphRun.features));\n  };\n\n  AATLayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  };\n\n  AATLayoutEngine.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    var glyphStrings = this.morxProcessor.generateInputs(gid);\n    var result = new Set();\n\n    for (var _iterator = glyphStrings, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var glyphs = _ref;\n\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  };\n\n  AATLayoutEngine.prototype._addStrings = function _addStrings(glyphs, index, strings, string) {\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (var _iterator2 = codePoints, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var codePoint = _ref2;\n      var s = string + String.fromCodePoint(codePoint);\n\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  };\n\n  return AATLayoutEngine;\n}();\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\n\n\nvar ShapingPlan = function () {\n  function ShapingPlan(font, script, direction$$1) {\n    classCallCheck(this, ShapingPlan);\n    this.font = font;\n    this.script = script;\n    this.direction = direction$$1;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n\n\n  ShapingPlan.prototype._addFeatures = function _addFeatures(features, global) {\n    var stageIndex = this.stages.length - 1;\n    var stage = this.stages[stageIndex];\n\n    for (var _iterator = features, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var feature = _ref;\n\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  };\n  /**\n   * Add features to the last stage\n   */\n\n\n  ShapingPlan.prototype.add = function add(arg) {\n    var global = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object') {\n      this._addFeatures(arg.global || [], true);\n\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  };\n  /**\n   * Add a new stage\n   */\n\n\n  ShapingPlan.prototype.addStage = function addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  };\n\n  ShapingPlan.prototype.setFeatureOverrides = function setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      for (var tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          var stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  };\n  /**\n   * Assigns the global features to the given glyphs\n   */\n\n\n  ShapingPlan.prototype.assignGlobalFeatures = function assignGlobalFeatures(glyphs) {\n    for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var glyph = _ref2;\n\n      for (var feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n\n\n  ShapingPlan.prototype.process = function process(processor, glyphs, positions) {\n    for (var _iterator3 = this.stages, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var stage = _ref3;\n\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  };\n\n  return ShapingPlan;\n}();\n\nvar _class$4;\n\nvar _temp;\n\nvar VARIATION_FEATURES = ['rvrn'];\nvar COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nvar FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nvar HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nvar DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\nvar DefaultShaper = (_temp = _class$4 = function () {\n  function DefaultShaper() {\n    classCallCheck(this, DefaultShaper);\n  }\n\n  DefaultShaper.plan = function plan(_plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(_plan);\n    this.planFeatures(_plan);\n    this.planPostprocessing(_plan, features); // Assign the global features to all the glyphs\n\n    _plan.assignGlobalFeatures(glyphs); // Assign local features to glyphs\n\n\n    this.assignFeatures(_plan, glyphs);\n  };\n\n  DefaultShaper.planPreprocessing = function planPreprocessing(plan) {\n    plan.add({\n      global: [].concat(VARIATION_FEATURES, DIRECTIONAL_FEATURES[plan.direction]),\n      local: FRACTIONAL_FEATURES\n    });\n  };\n\n  DefaultShaper.planFeatures = function planFeatures(plan) {// Do nothing by default. Let subclasses override this.\n  };\n\n  DefaultShaper.planPostprocessing = function planPostprocessing(plan, userFeatures) {\n    plan.add([].concat(COMMON_FEATURES, HORIZONTAL_FEATURES));\n    plan.setFeatureOverrides(userFeatures);\n  };\n\n  DefaultShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (var i = 0; i < glyphs.length; i++) {\n      var glyph = glyphs[i];\n\n      if (glyph.codePoints[0] === 0x2044) {\n        // fraction slash\n        var start = i;\n        var end = i + 1; // Apply numerator\n\n        while (start > 0 && unicode.isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        } // Apply denominator\n\n\n        while (end < glyphs.length && unicode.isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        } // Apply fraction slash\n\n\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  };\n\n  return DefaultShaper;\n}(), _class$4.zeroMarkWidths = 'AFTER_GPOS', _temp);\nvar type = \"Buffer\";\nvar data = [0, 1, 16, 0, 0, 0, 0, 0, 0, 0, 49, 160, 1, 149, 1, 106, 254, 237, 216, 43, 79, 3, 65, 20, 5, 224, 217, 7, 77, 41, 138, 127, 64, 37, 146, 4, 131, 37, 4, 143, 68, 33, 193, 224, 192, 129, 3, 137, 196, 32, 81, 4, 73, 80, 72, 28, 18, 137, 194, 224, 144, 224, 48, 156, 210, 153, 228, 102, 152, 217, 206, 238, 206, 62, 40, 231, 38, 95, 102, 186, 219, 121, 246, 238, 35, 29, 167, 74, 173, 194, 26, 108, 192, 88, 127, 254, 43, 229, 14, 236, 194, 30, 236, 195, 33, 28, 195, 41, 156, 195, 5, 92, 194, 21, 92, 139, 118, 183, 112, 167, 63, 79, 60, 136, 250, 163, 168, 211, 124, 123, 130, 35, 237, 25, 94, 224, 181, 7, 243, 106, 203, 155, 168, 191, 247, 96, 62, 68, 68, 68, 68, 68, 68, 68, 68, 77, 153, 252, 255, 243, 209, 131, 121, 16, 17, 17, 17, 17, 205, 179, 124, 113, 234, 108, 216, 140, 45, 244, 125, 2, 247, 240, 9, 235, 35, 165, 14, 70, 211, 115, 55, 40, 183, 149, 82, 155, 195, 230, 214, 247, 5, 89, 246, 251, 248, 18, 142, 45, 59, 142, 119, 101, 37, 77, 126, 48, 24, 255, 57, 18, 15, 121, 222, 85, 143, 21, 185, 238, 55, 179, 228, 142, 210, 230, 106, 83, 150, 108, 215, 167, 144, 115, 146, 107, 180, 247, 42, 100, 125, 49, 84, 217, 219, 54, 100, 86, 61, 100, 29, 174, 188, 50, 231, 149, 40, 125, 17, 227, 58, 144, 227, 133, 132, 92, 179, 60, 86, 55, 22, 28, 253, 15, 180, 162, 223, 63, 52, 39, 50, 209, 167, 221, 110, 16, 97, 254, 170, 196, 92, 92, 121, 82, 55, 247, 138, 246, 198, 117, 126, 214, 184, 161, 209, 245, 117, 87, 55, 247, 124, 237, 103, 221, 235, 203, 228, 158, 252, 174, 235, 217, 230, 155, 87, 217, 28, 50, 247, 100, 223, 111, 92, 37, 18, 171, 173, 221, 79, 172, 103, 113, 215, 57, 226, 123, 255, 48, 235, 111, 43, 143, 235, 230, 115, 209, 250, 154, 232, 219, 247, 190, 22, 59, 98, 237, 113, 90, 113, 158, 190, 107, 47, 177, 74, 83, 79, 244, 88, 33, 239, 48, 105, 65, 255, 174, 241, 204, 88, 161, 115, 45, 243, 124, 47, 234, 211, 126, 158, 184, 230, 103, 215, 237, 251, 101, 157, 240, 237, 99, 19, 121, 247, 13];\nvar trieData = {\n  type: type,\n  data: data\n};\nvar trie = new UnicodeTrie(new Uint8Array(trieData.data));\nvar FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\nvar ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\nvar ISOL = 'isol';\nvar FINA = 'fina';\nvar FIN2 = 'fin2';\nvar FIN3 = 'fin3';\nvar MEDI = 'medi';\nvar MED2 = 'med2';\nvar INIT = 'init';\nvar NONE = null; // Each entry is [prevAction, curAction, nextState]\n\nvar STATE_TABLE = [//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n// State 0: prev was U,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 6]], // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN2, 5], [NONE, ISOL, 6]], // State 2: prev was D/L in ISOL form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [INIT, FINA, 1], [INIT, FINA, 3], [INIT, FINA, 4], [INIT, FINA, 6]], // State 3: prev was D in FINA form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MEDI, FINA, 1], [MEDI, FINA, 3], [MEDI, FINA, 4], [MEDI, FINA, 6]], // State 4: prev was FINA ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MED2, ISOL, 1], [MED2, ISOL, 2], [MED2, FIN2, 5], [MED2, ISOL, 6]], // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [ISOL, ISOL, 1], [ISOL, ISOL, 2], [ISOL, FIN2, 5], [ISOL, ISOL, 6]], // State 6: prev was DALATH/RISH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN3, 5], [NONE, ISOL, 6]]];\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\n\nvar ArabicShaper = function (_DefaultShaper) {\n  inherits(ArabicShaper, _DefaultShaper);\n\n  function ArabicShaper() {\n    classCallCheck(this, ArabicShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  ArabicShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n\n    for (var i = 0; i < FEATURES.length; i++) {\n      var feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  };\n\n  ArabicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    _DefaultShaper.assignFeatures.call(this, plan, glyphs);\n\n    var prev = -1;\n    var state = 0;\n    var actions = []; // Apply the state machine to map glyphs to features\n\n    for (var i = 0; i < glyphs.length; i++) {\n      var curAction = void 0,\n          prevAction = void 0;\n      var glyph = glyphs[i];\n      var type$$1 = getShapingClass(glyph.codePoints[0]);\n\n      if (type$$1 === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      var _STATE_TABLE$state$ty = STATE_TABLE[state][type$$1];\n      prevAction = _STATE_TABLE$state$ty[0];\n      curAction = _STATE_TABLE$state$ty[1];\n      state = _STATE_TABLE$state$ty[2];\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    } // Apply the chosen features to their respective glyphs\n\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var feature = void 0;\n      var glyph = glyphs[index];\n\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  return ArabicShaper;\n}(DefaultShaper);\n\nfunction getShapingClass(codePoint) {\n  var res = trie.get(codePoint);\n\n  if (res) {\n    return res - 1;\n  }\n\n  var category = unicode.getCategory(codePoint);\n\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n\nvar GlyphIterator = function () {\n  function GlyphIterator(glyphs, options) {\n    classCallCheck(this, GlyphIterator);\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  GlyphIterator.prototype.reset = function reset() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  };\n\n  GlyphIterator.prototype.shouldIgnore = function shouldIgnore(glyph) {\n    return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n  };\n\n  GlyphIterator.prototype.move = function move(dir) {\n    this.index += dir;\n\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  GlyphIterator.prototype.next = function next() {\n    return this.move(+1);\n  };\n\n  GlyphIterator.prototype.prev = function prev() {\n    return this.move(-1);\n  };\n\n  GlyphIterator.prototype.peek = function peek() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var idx = this.index;\n    var res = this.increment(count);\n    this.index = idx;\n    return res;\n  };\n\n  GlyphIterator.prototype.peekIndex = function peekIndex() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var idx = this.index;\n    this.increment(count);\n    var res = this.index;\n    this.index = idx;\n    return res;\n  };\n\n  GlyphIterator.prototype.increment = function increment() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  createClass(GlyphIterator, [{\n    key: \"cur\",\n    get: function get$$1() {\n      return this.glyphs[this.index] || null;\n    }\n  }]);\n  return GlyphIterator;\n}();\n\nvar DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nvar OTProcessor = function () {\n  function OTProcessor(font, table) {\n    classCallCheck(this, OTProcessor);\n    this.font = font;\n    this.table = table;\n    this.script = null;\n    this.scriptTag = null;\n    this.language = null;\n    this.languageTag = null;\n    this.features = {};\n    this.lookups = {}; // Setup variation substitutions\n\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1; // initialize to default script + language\n\n    this.selectScript(); // current context (set by applyFeatures)\n\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  OTProcessor.prototype.findScript = function findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (var _iterator = script, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var s = _ref;\n\n      for (var _iterator2 = this.table.scriptList, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var entry = _ref2;\n\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  OTProcessor.prototype.selectScript = function selectScript(script, language, direction$$1) {\n    var changed = false;\n    var entry = void 0;\n\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction$$1 || direction$$1 !== this.direction) {\n      this.direction = direction$$1 || direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (var _iterator3 = this.script.langSysRecords, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var lang = _ref3;\n\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    } // Build a feature lookup table\n\n\n    if (changed) {\n      this.features = {};\n\n      if (this.language) {\n        for (var _iterator4 = this.language.featureIndexes, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n          var _ref4;\n\n          if (_isArray4) {\n            if (_i4 >= _iterator4.length) break;\n            _ref4 = _iterator4[_i4++];\n          } else {\n            _i4 = _iterator4.next();\n            if (_i4.done) break;\n            _ref4 = _i4.value;\n          }\n\n          var featureIndex = _ref4;\n          var record = this.table.featureList[featureIndex];\n          var substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  };\n\n  OTProcessor.prototype.lookupsForFeatures = function lookupsForFeatures() {\n    var userFeatures = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var exclude = arguments[1];\n    var lookups = [];\n\n    for (var _iterator5 = userFeatures, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var tag = _ref5;\n      var feature = this.features[tag];\n\n      if (!feature) {\n        continue;\n      }\n\n      for (var _iterator6 = feature.lookupListIndexes, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n        var _ref6;\n\n        if (_isArray6) {\n          if (_i6 >= _iterator6.length) break;\n          _ref6 = _iterator6[_i6++];\n        } else {\n          _i6 = _iterator6.next();\n          if (_i6.done) break;\n          _ref6 = _i6.value;\n        }\n\n        var lookupIndex = _ref6;\n\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    return lookups;\n  };\n\n  OTProcessor.prototype.substituteFeatureForVariations = function substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    var record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    var substitutions = record.featureTableSubstitution.substitutions;\n\n    for (var _iterator7 = substitutions, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n      var _ref7;\n\n      if (_isArray7) {\n        if (_i7 >= _iterator7.length) break;\n        _ref7 = _iterator7[_i7++];\n      } else {\n        _i7 = _iterator7.next();\n        if (_i7.done) break;\n        _ref7 = _i7.value;\n      }\n\n      var substitution = _ref7;\n\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  };\n\n  OTProcessor.prototype.findVariationsIndex = function findVariationsIndex(coords) {\n    var variations = this.table.featureVariations;\n\n    if (!variations) {\n      return -1;\n    }\n\n    var records = variations.featureVariationRecords;\n\n    for (var i = 0; i < records.length; i++) {\n      var conditions = records[i].conditionSet.conditionTable;\n\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  OTProcessor.prototype.variationConditionsMatch = function variationConditionsMatch(conditions, coords) {\n    return conditions.every(function (condition) {\n      var coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  };\n\n  OTProcessor.prototype.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    var lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  };\n\n  OTProcessor.prototype.applyLookups = function applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (var _iterator8 = lookups, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : _iterator8[Symbol.iterator]();;) {\n      var _ref8;\n\n      if (_isArray8) {\n        if (_i8 >= _iterator8.length) break;\n        _ref8 = _iterator8[_i8++];\n      } else {\n        _i8 = _iterator8.next();\n        if (_i8.done) break;\n        _ref8 = _i8.value;\n      }\n\n      var _ref9 = _ref8,\n          feature = _ref9.feature,\n          lookup = _ref9.lookup;\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (var _iterator9 = lookup.subTables, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : _iterator9[Symbol.iterator]();;) {\n          var _ref10;\n\n          if (_isArray9) {\n            if (_i9 >= _iterator9.length) break;\n            _ref10 = _iterator9[_i9++];\n          } else {\n            _i9 = _iterator9.next();\n            if (_i9.done) break;\n            _ref10 = _i9.value;\n          }\n\n          var table = _ref10;\n          var res = this.applyLookup(lookup.lookupType, table);\n\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  };\n\n  OTProcessor.prototype.applyLookup = function applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  };\n\n  OTProcessor.prototype.applyLookupList = function applyLookupList(lookupRecords) {\n    var options = this.glyphIterator.options;\n    var glyphIndex = this.glyphIterator.index;\n\n    for (var _iterator10 = lookupRecords, _isArray10 = Array.isArray(_iterator10), _i10 = 0, _iterator10 = _isArray10 ? _iterator10 : _iterator10[Symbol.iterator]();;) {\n      var _ref11;\n\n      if (_isArray10) {\n        if (_i10 >= _iterator10.length) break;\n        _ref11 = _iterator10[_i10++];\n      } else {\n        _i10 = _iterator10.next();\n        if (_i10.done) break;\n        _ref11 = _i10.value;\n      }\n\n      var lookupRecord = _ref11; // Reset flags and find glyph index for this lookup record\n\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex); // Get the lookup and setup flags for subtables\n\n      var lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index); // Apply lookup subtables until one matches\n\n      for (var _iterator11 = lookup.subTables, _isArray11 = Array.isArray(_iterator11), _i11 = 0, _iterator11 = _isArray11 ? _iterator11 : _iterator11[Symbol.iterator]();;) {\n        var _ref12;\n\n        if (_isArray11) {\n          if (_i11 >= _iterator11.length) break;\n          _ref12 = _iterator11[_i11++];\n        } else {\n          _i11 = _iterator11.next();\n          if (_i11.done) break;\n          _ref12 = _i11.value;\n        }\n\n        var table = _ref12;\n\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  };\n\n  OTProcessor.prototype.coverageIndex = function coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (var _iterator12 = coverage.rangeRecords, _isArray12 = Array.isArray(_iterator12), _i12 = 0, _iterator12 = _isArray12 ? _iterator12 : _iterator12[Symbol.iterator]();;) {\n          var _ref13;\n\n          if (_isArray12) {\n            if (_i12 >= _iterator12.length) break;\n            _ref13 = _iterator12[_i12++];\n          } else {\n            _i12 = _iterator12.next();\n            if (_i12.done) break;\n            _ref13 = _i12.value;\n          }\n\n          var range = _ref13;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  };\n\n  OTProcessor.prototype.match = function match(sequenceIndex, sequence, fn, matched) {\n    var pos = this.glyphIterator.index;\n    var glyph = this.glyphIterator.increment(sequenceIndex);\n    var idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  };\n\n  OTProcessor.prototype.sequenceMatches = function sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      return component === glyph.id;\n    });\n  };\n\n  OTProcessor.prototype.sequenceMatchIndices = function sequenceMatchIndices(sequenceIndex, sequence) {\n    var _this = this;\n\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      // If the current feature doesn't apply to this glyph,\n      if (!(_this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  };\n\n  OTProcessor.prototype.coverageSequenceMatches = function coverageSequenceMatches(sequenceIndex, sequence) {\n    var _this2 = this;\n\n    return this.match(sequenceIndex, sequence, function (coverage, glyph) {\n      return _this2.coverageIndex(coverage, glyph.id) >= 0;\n    });\n  };\n\n  OTProcessor.prototype.getClassID = function getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1:\n        // Class array\n        var i = glyph - classDef.startGlyph;\n\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (var _iterator13 = classDef.classRangeRecord, _isArray13 = Array.isArray(_iterator13), _i13 = 0, _iterator13 = _isArray13 ? _iterator13 : _iterator13[Symbol.iterator]();;) {\n          var _ref14;\n\n          if (_isArray13) {\n            if (_i13 >= _iterator13.length) break;\n            _ref14 = _iterator13[_i13++];\n          } else {\n            _i13 = _iterator13.next();\n            if (_i13.done) break;\n            _ref14 = _i13.value;\n          }\n\n          var range = _ref14;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  };\n\n  OTProcessor.prototype.classSequenceMatches = function classSequenceMatches(sequenceIndex, sequence, classDef) {\n    var _this3 = this;\n\n    return this.match(sequenceIndex, sequence, function (classID, glyph) {\n      return classID === _this3.getClassID(glyph.id, classDef);\n    });\n  };\n\n  OTProcessor.prototype.applyContext = function applyContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set$$1 = table.ruleSets[index];\n\n        for (var _iterator14 = set$$1, _isArray14 = Array.isArray(_iterator14), _i14 = 0, _iterator14 = _isArray14 ? _iterator14 : _iterator14[Symbol.iterator]();;) {\n          var _ref15;\n\n          if (_isArray14) {\n            if (_i14 >= _iterator14.length) break;\n            _ref15 = _iterator14[_i14++];\n          } else {\n            _i14 = _iterator14.next();\n            if (_i14.done) break;\n            _ref15 = _i14.value;\n          }\n\n          var rule = _ref15;\n\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n\n        if (index === -1) {\n          return false;\n        }\n\n        set$$1 = table.classSet[index];\n\n        for (var _iterator15 = set$$1, _isArray15 = Array.isArray(_iterator15), _i15 = 0, _iterator15 = _isArray15 ? _iterator15 : _iterator15[Symbol.iterator]();;) {\n          var _ref16;\n\n          if (_isArray15) {\n            if (_i15 >= _iterator15.length) break;\n            _ref16 = _iterator15[_i15++];\n          } else {\n            _i15 = _iterator15.next();\n            if (_i15.done) break;\n            _ref16 = _i15.value;\n          }\n\n          var _rule = _ref16;\n\n          if (this.classSequenceMatches(1, _rule.classes, table.classDef)) {\n            return this.applyLookupList(_rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  OTProcessor.prototype.applyChainingContext = function applyChainingContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set$$1 = table.chainRuleSets[index];\n\n        for (var _iterator16 = set$$1, _isArray16 = Array.isArray(_iterator16), _i16 = 0, _iterator16 = _isArray16 ? _iterator16 : _iterator16[Symbol.iterator]();;) {\n          var _ref17;\n\n          if (_isArray16) {\n            if (_i16 >= _iterator16.length) break;\n            _ref17 = _iterator16[_i16++];\n          } else {\n            _i16 = _iterator16.next();\n            if (_i16.done) break;\n            _ref17 = _i16.value;\n          }\n\n          var rule = _ref17;\n\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        var rules = table.chainClassSet[index];\n\n        if (!rules) {\n          return false;\n        }\n\n        for (var _iterator17 = rules, _isArray17 = Array.isArray(_iterator17), _i17 = 0, _iterator17 = _isArray17 ? _iterator17 : _iterator17[Symbol.iterator]();;) {\n          var _ref18;\n\n          if (_isArray17) {\n            if (_i17 >= _iterator17.length) break;\n            _ref18 = _iterator17[_i17++];\n          } else {\n            _i17 = _iterator17.next();\n            if (_i17.done) break;\n            _ref18 = _i17.value;\n          }\n\n          var _rule2 = _ref18;\n\n          if (this.classSequenceMatches(-_rule2.backtrack.length, _rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, _rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + _rule2.input.length, _rule2.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(_rule2.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  return OTProcessor;\n}();\n\nvar GlyphInfo = function () {\n  function GlyphInfo(font, id) {\n    var codePoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var features = arguments[3];\n    var stringIndex = arguments[4];\n    classCallCheck(this, GlyphInfo);\n    this._font = font;\n    this.codePoints = codePoints;\n    this.stringIndex = stringIndex;\n    this.id = id;\n    this.features = {};\n\n    if (Array.isArray(features)) {\n      for (var i = 0; i < features.length; i++) {\n        var feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      Object.assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  GlyphInfo.prototype.copy = function copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features, this.stringIndex);\n  };\n\n  createClass(GlyphInfo, [{\n    key: 'id',\n    get: function get$$1() {\n      return this._id;\n    },\n    set: function set$$1(id) {\n      this._id = id;\n      this.substituted = true;\n      var GDEF = this._font.GDEF;\n\n      if (GDEF && GDEF.glyphClassDef) {\n        // TODO: clean this up\n        var classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n        this.isBase = classID === 1;\n        this.isLigature = classID === 2;\n        this.isMark = classID === 3;\n        this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n      } else {\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n        this.isBase = !this.isMark;\n        this.isLigature = this.codePoints.length > 1;\n        this.markAttachmentType = 0;\n      }\n    }\n  }, {\n    key: 'advanceWidth',\n    get: function get$$1() {\n      return this._font.getGlyph(this.id, this.codePoints).advanceWidth;\n    }\n  }]);\n  return GlyphInfo;\n}();\n\nvar _class$5;\n\nvar _temp$1;\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\n\n\nvar HangulShaper = (_temp$1 = _class$5 = function (_DefaultShaper) {\n  inherits(HangulShaper, _DefaultShaper);\n\n  function HangulShaper() {\n    classCallCheck(this, HangulShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  HangulShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  };\n\n  HangulShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var state = 0;\n    var i = 0;\n\n    while (i < glyphs.length) {\n      var action = void 0;\n      var glyph = glyphs[i];\n      var code = glyph.codePoints[0];\n      var type = getType(code);\n      var _STATE_TABLE$state$ty = STATE_TABLE$1[state][type];\n      action = _STATE_TABLE$state$ty[0];\n      state = _STATE_TABLE$state$ty[1];\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  };\n\n  return HangulShaper;\n}(DefaultShaper), _class$5.zeroMarkWidths = 'NONE', _temp$1);\nvar HANGUL_BASE = 0xac00;\nvar HANGUL_END = 0xd7a4;\nvar HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nvar L_BASE = 0x1100; // lead\n\nvar V_BASE = 0x1161; // vowel\n\nvar T_BASE = 0x11a7; // trail\n\nvar L_COUNT = 19;\nvar V_COUNT = 21;\nvar T_COUNT = 28;\nvar L_END = L_BASE + L_COUNT - 1;\nvar V_END = V_BASE + V_COUNT - 1;\nvar T_END = T_BASE + T_COUNT - 1;\nvar DOTTED_CIRCLE = 0x25cc;\n\nvar isL = function isL(code) {\n  return 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n};\n\nvar isV = function isV(code) {\n  return 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n};\n\nvar isT = function isT(code) {\n  return 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n};\n\nvar isTone = function isTone(code) {\n  return 0x302e <= code && code <= 0x302f;\n};\n\nvar isLVT = function isLVT(code) {\n  return HANGUL_BASE <= code && code <= HANGUL_END;\n};\n\nvar isLV = function isLV(code) {\n  return code - HANGUL_BASE < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\n};\n\nvar isCombiningL = function isCombiningL(code) {\n  return L_BASE <= code && code <= L_END;\n};\n\nvar isCombiningV = function isCombiningV(code) {\n  return V_BASE <= code && code <= V_END;\n};\n\nvar isCombiningT = function isCombiningT(code) {\n  return T_BASE + 1 && 1 <= code && code <= T_END;\n}; // Character categories\n\n\nvar X = 0; // Other character\n\nvar L = 1; // Leading consonant\n\nvar V = 2; // Medial vowel\n\nvar T = 3; // Trailing consonant\n\nvar LV = 4; // Composed <LV> syllable\n\nvar LVT = 5; // Composed <LVT> syllable\n\nvar M = 6; // Tone mark\n// This function classifies a character using the above categories.\n\nfunction getType(code) {\n  if (isL(code)) {\n    return L;\n  }\n\n  if (isV(code)) {\n    return V;\n  }\n\n  if (isT(code)) {\n    return T;\n  }\n\n  if (isLV(code)) {\n    return LV;\n  }\n\n  if (isLVT(code)) {\n    return LVT;\n  }\n\n  if (isTone(code)) {\n    return M;\n  }\n\n  return X;\n} // State machine actions\n\n\nvar NO_ACTION = 0;\nvar DECOMPOSE = 1;\nvar COMPOSE = 2;\nvar TONE_MARK = 4;\nvar INVALID = 5; // Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\n\nvar STATE_TABLE$1 = [//       X                 L                 V                T                  LV                LVT               M\n// State 0: start state\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], // State 1: <L>\n[[NO_ACTION, 0], [NO_ACTION, 1], [COMPOSE, 2], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], // State 2: <L,V> or <LV>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [COMPOSE, 3], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]], // State 3: <L,V,T> or <LVT>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]]];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyph.codePoints[0];\n  var s = code - HANGUL_BASE;\n  var t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  var l = L_BASE + s / V_COUNT | 0;\n  var v = V_BASE + s % V_COUNT; // Don't decompose if all of the components are not available\n\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== T_BASE && !font.hasGlyphForCodePoint(t)) {\n    return i;\n  } // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n\n\n  var ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n  var vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n  var insert = [ljmo, vjmo];\n\n  if (t > T_BASE) {\n    var tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice.apply(glyphs, [i, 1].concat(insert));\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  var type = getType(code);\n  var prev = glyphs[i - 1].codePoints[0];\n  var prevType = getType(prev); // Figure out what type of syllable we're dealing with\n\n  var lv = void 0,\n      ljmo = void 0,\n      vjmo = void 0,\n      tjmo = void 0;\n\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    var l = ljmo.codePoints[0];\n    var v = vjmo.codePoints[0]; // Make sure L and V are combining characters\n\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  var t = tjmo && tjmo.codePoints[0] || T_BASE;\n\n  if (lv != null && (t === T_BASE || isCombiningT(t))) {\n    var s = lv + (t - T_BASE); // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n\n    if (font.hasGlyphForCodePoint(s)) {\n      var del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  } // Didn't compose (either a non-combining component or unsupported by font).\n\n\n  if (ljmo) {\n    ljmo.features.ljmo = true;\n  }\n\n  if (vjmo) {\n    vjmo.features.vjmo = true;\n  }\n\n  if (tjmo) {\n    tjmo.features.tjmo = true;\n  }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n\n    case V:\n      return 2;\n\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0]; // Move tone mark to the beginning of the previous syllable, unless it is zero width\n\n  if (font.glyphForCodePoint(code).advanceWidth === 0) {\n    return;\n  }\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var len = getLength(prev);\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    var dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features); // If the tone mark is zero width, insert the dotted circle before, otherwise after\n\n    var idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n\nvar stateTable = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]];\nvar accepting = [false, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, false, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, false, false, true, false, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, false, false, true, true, false, false, true, true, true, false, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, false, false, false, false, false, false, false, true, true, false, false, true, true, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, false, true, true, false, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, false, true, true, true, true, true, false, true, true, false, true, true, true];\nvar tags = [[], [\"broken_cluster\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"symbol_cluster\"], [], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"standalone_cluster\"]];\nvar indicMachine = {\n  stateTable: stateTable,\n  accepting: accepting,\n  tags: tags\n};\nvar categories = [\"O\", \"IND\", \"S\", \"GB\", \"B\", \"FM\", \"CGJ\", \"VMAbv\", \"VMPst\", \"VAbv\", \"VPst\", \"CMBlw\", \"VPre\", \"VBlw\", \"H\", \"VMBlw\", \"CMAbv\", \"MBlw\", \"CS\", \"R\", \"SUB\", \"MPst\", \"MPre\", \"FAbv\", \"FPst\", \"FBlw\", \"SMAbv\", \"SMBlw\", \"VMPre\", \"ZWNJ\", \"ZWJ\", \"WJ\", \"VS\", \"N\", \"HN\", \"MAbv\"];\nvar decompositions$1 = {\n  \"2507\": [2503, 2494],\n  \"2508\": [2503, 2519],\n  \"2888\": [2887, 2902],\n  \"2891\": [2887, 2878],\n  \"2892\": [2887, 2903],\n  \"3018\": [3014, 3006],\n  \"3019\": [3015, 3006],\n  \"3020\": [3014, 3031],\n  \"3144\": [3142, 3158],\n  \"3264\": [3263, 3285],\n  \"3271\": [3270, 3285],\n  \"3272\": [3270, 3286],\n  \"3274\": [3270, 3266],\n  \"3275\": [3270, 3266, 3285],\n  \"3402\": [3398, 3390],\n  \"3403\": [3399, 3390],\n  \"3404\": [3398, 3415],\n  \"3546\": [3545, 3530],\n  \"3548\": [3545, 3535],\n  \"3549\": [3545, 3535, 3530],\n  \"3550\": [3545, 3551],\n  \"3635\": [3661, 3634],\n  \"3763\": [3789, 3762],\n  \"3955\": [3953, 3954],\n  \"3957\": [3953, 3956],\n  \"3958\": [4018, 3968],\n  \"3959\": [4018, 3953, 3968],\n  \"3960\": [4019, 3968],\n  \"3961\": [4019, 3953, 3968],\n  \"3969\": [3953, 3968],\n  \"6971\": [6970, 6965],\n  \"6973\": [6972, 6965],\n  \"6976\": [6974, 6965],\n  \"6977\": [6975, 6965],\n  \"6979\": [6978, 6965],\n  \"69934\": [69937, 69927],\n  \"69935\": [69938, 69927],\n  \"70475\": [70471, 70462],\n  \"70476\": [70471, 70487],\n  \"70843\": [70841, 70842],\n  \"70844\": [70841, 70832],\n  \"70846\": [70841, 70845],\n  \"71098\": [71096, 71087],\n  \"71099\": [71097, 71087]\n};\nvar stateTable$1 = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 2, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]];\nvar accepting$1 = [false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true];\nvar tags$1 = [[], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"virama_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"number_joiner_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"numeral_cluster\"]];\nvar useData = {\n  categories: categories,\n  decompositions: decompositions$1,\n  stateTable: stateTable$1,\n  accepting: accepting$1,\n  tags: tags$1\n}; // Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\n\nvar CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13,\n  // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14,\n  // Khmer-style Virama.\n  Repha: 1 << 15,\n  // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17,\n  // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n\n}; // Visual positions in a syllable from left to right.\n\nvar POSITIONS = {\n  Start: 1 << 0,\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n  Above_C: 1 << 6,\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n  End: 1 << 15\n};\nvar CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nvar JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nvar HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\nvar INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n}; // Additional decompositions that aren't in Unicode\n\nvar INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\nvar type$1 = \"Buffer\";\nvar data$1 = [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 194, 160, 1, 177, 13, 78, 242, 237, 157, 127, 172, 29, 69, 21, 199, 247, 245, 222, 119, 127, 188, 119, 251, 110, 95, 133, 68, 98, 251, 71, 67, 137, 49, 197, 152, 166, 16, 107, 138, 105, 21, 9, 34, 81, 219, 24, 132, 104, 177, 6, 67, 176, 36, 4, 106, 48, 109, 132, 82, 130, 63, 10, 216, 31, 198, 146, 148, 88, 19, 172, 37, 65, 44, 137, 40, 38, 160, 173, 41, 70, 146, 106, 172, 169, 70, 76, 99, 180, 182, 9, 105, 32, 169, 5, 98, 65, 41, 45, 224, 119, 238, 206, 188, 123, 238, 220, 153, 217, 249, 181, 187, 239, 209, 61, 201, 39, 187, 59, 59, 59, 115, 230, 156, 51, 179, 179, 179, 123, 223, 59, 94, 75, 146, 151, 192, 171, 224, 13, 48, 167, 158, 36, 239, 5, 243, 193, 37, 224, 21, 164, 253, 175, 22, 190, 189, 24, 101, 45, 2, 75, 192, 50, 135, 114, 175, 64, 222, 79, 128, 107, 192, 42, 112, 61, 88, 3, 110, 6, 183, 129, 175, 131, 141, 134, 242, 150, 226, 220, 10, 240, 77, 240, 93, 176, 25, 108, 7, 59, 193, 35, 224, 56, 242, 60, 134, 237, 207, 64, 194, 121, 154, 111, 15, 128, 131, 224, 79, 224, 111, 224, 40, 56, 1, 78, 130, 211, 224, 44, 168, 141, 38, 73, 27, 76, 130, 139, 192, 2, 240, 126, 240, 33, 240, 97, 176, 28, 92, 5, 62, 13, 174, 3, 55, 130, 155, 193, 109, 224, 78, 112, 55, 184, 15, 60, 8, 190, 15, 126, 0, 126, 4, 126, 2, 158, 228, 199, 207, 128, 103, 193, 239, 193, 159, 193, 17, 112, 12, 188, 8, 94, 1, 175, 129, 115, 163, 169, 206, 245, 70, 146, 116, 192, 5, 141, 244, 120, 30, 182, 11, 193, 165, 96, 49, 88, 10, 150, 131, 171, 249, 249, 207, 98, 123, 61, 88, 3, 110, 1, 183, 55, 82, 155, 172, 231, 91, 91, 54, 242, 252, 223, 198, 246, 46, 176, 149, 31, 63, 192, 183, 155, 80, 215, 14, 150, 94, 239, 95, 179, 203, 177, 14, 27, 118, 144, 50, 247, 96, 127, 47, 120, 10, 236, 3, 191, 3, 127, 4, 127, 5, 255, 0, 47, 128, 147, 36, 255, 155, 124, 123, 154, 167, 109, 99, 62, 198, 126, 173, 153, 36, 227, 224, 61, 205, 212, 94, 239, 195, 246, 226, 102, 154, 103, 17, 79, 91, 130, 237, 50, 112, 101, 51, 141, 39, 17, 75, 215, 226, 120, 37, 184, 1, 172, 1, 183, 128, 219, 249, 53, 235, 249, 118, 19, 182, 155, 121, 121, 226, 186, 173, 56, 222, 209, 52, 183, 117, 87, 198, 121, 106, 227, 31, 35, 239, 22, 110, 251, 245, 216, 254, 20, 199, 191, 0, 191, 38, 101, 252, 22, 251, 127, 0, 247, 224, 124, 7, 252, 69, 81, 254, 223, 45, 234, 180, 101, 173, 136, 5, 148, 121, 204, 177, 220, 151, 34, 234, 81, 20, 255, 134, 206, 255, 1, 111, 128, 164, 149, 36, 163, 173, 52, 125, 111, 61, 181, 185, 156, 127, 54, 63, 47, 250, 226, 5, 56, 158, 7, 22, 114, 104, 222, 69, 173, 52, 110, 150, 144, 244, 179, 6, 93, 88, 108, 47, 35, 121, 87, 241, 250, 175, 145, 244, 248, 56, 242, 92, 77, 242, 49, 93, 133, 223, 62, 211, 82, 235, 45, 48, 157, 171, 168, 168, 240, 99, 91, 213, 175, 42, 42, 42, 42, 42, 42, 42, 42, 42, 28, 217, 198, 215, 25, 202, 214, 67, 102, 39, 127, 214, 189, 174, 101, 127, 205, 91, 154, 244, 55, 53, 233, 95, 224, 207, 202, 95, 198, 246, 171, 224, 14, 176, 1, 220, 11, 238, 7, 91, 193, 67, 224, 135, 224, 81, 240, 4, 120, 170, 149, 174, 45, 237, 195, 246, 0, 56, 8, 14, 131, 35, 224, 40, 56, 1, 78, 181, 210, 245, 156, 215, 177, 125, 139, 61, 223, 183, 241, 12, 15, 46, 108, 167, 245, 206, 107, 247, 117, 88, 136, 253, 75, 219, 246, 109, 172, 168, 168, 168, 168, 8, 135, 173, 91, 94, 134, 177, 247, 76, 173, 191, 222, 94, 22, 101, 219, 162, 162, 162, 34, 14, 175, 145, 119, 82, 91, 121, 255, 94, 134, 113, 230, 74, 112, 173, 52, 215, 251, 156, 227, 220, 175, 195, 199, 138, 83, 188, 142, 183, 193, 23, 219, 253, 247, 169, 95, 193, 254, 173, 82, 153, 119, 180, 251, 239, 117, 40, 236, 189, 204, 6, 156, 187, 119, 26, 204, 63, 147, 57, 41, 43, 192, 157, 96, 127, 55, 155, 45, 200, 119, 72, 147, 247, 85, 164, 47, 156, 76, 146, 213, 224, 33, 240, 252, 228, 224, 249, 227, 56, 223, 153, 139, 185, 56, 88, 13, 238, 29, 75, 146, 103, 65, 50, 14, 95, 129, 187, 192, 10, 28, 239, 227, 219, 163, 124, 75, 153, 223, 25, 78, 147, 185, 17, 121, 54, 146, 124, 191, 193, 254, 57, 126, 124, 197, 236, 36, 185, 27, 236, 7, 15, 143, 196, 229, 28, 47, 243, 178, 9, 216, 115, 34, 221, 223, 52, 161, 214, 241, 128, 38, 189, 162, 162, 162, 162, 34, 127, 222, 41, 121, 12, 142, 125, 255, 113, 97, 121, 183, 252, 250, 203, 126, 254, 43, 155, 171, 192, 253, 152, 7, 126, 175, 61, 252, 60, 202, 190, 243, 121, 24, 233, 187, 200, 60, 113, 55, 246, 31, 111, 167, 243, 209, 45, 138, 242, 196, 247, 119, 236, 219, 177, 51, 252, 26, 246, 188, 205, 190, 169, 99, 229, 253, 156, 151, 245, 43, 69, 125, 12, 86, 230, 254, 246, 224, 243, 241, 205, 124, 251, 92, 123, 184, 62, 155, 57, 38, 251, 102, 138, 173, 119, 179, 57, 179, 124, 253, 33, 148, 121, 24, 28, 105, 247, 231, 198, 199, 120, 61, 47, 98, 251, 50, 248, 175, 164, 207, 219, 237, 254, 60, 188, 129, 62, 52, 27, 92, 56, 70, 230, 180, 60, 223, 124, 158, 118, 134, 127, 247, 181, 27, 233, 151, 32, 237, 131, 99, 195, 250, 95, 62, 214, 63, 62, 202, 203, 254, 232, 152, 157, 15, 5, 247, 248, 248, 31, 117, 124, 10, 172, 2, 159, 7, 95, 2, 55, 129, 29, 56, 183, 22, 219, 117, 96, 195, 88, 58, 79, 254, 14, 216, 198, 206, 129, 93, 96, 15, 216, 11, 158, 36, 122, 62, 51, 150, 206, 167, 15, 130, 195, 224, 8, 56, 10, 78, 128, 83, 22, 237, 121, 29, 121, 206, 128, 145, 113, 245, 249, 7, 224, 203, 54, 206, 77, 142, 247, 143, 47, 194, 254, 2, 126, 252, 32, 142, 63, 128, 253, 197, 252, 248, 35, 216, 126, 76, 83, 22, 181, 255, 82, 69, 108, 217, 194, 174, 223, 211, 40, 191, 47, 219, 232, 89, 36, 91, 13, 245, 127, 114, 92, 127, 221, 59, 138, 126, 58, 19, 219, 175, 226, 95, 205, 119, 81, 28, 120, 182, 37, 70, 221, 172, 191, 177, 241, 110, 37, 233, 219, 236, 158, 116, 3, 137, 171, 213, 216, 191, 9, 156, 203, 41, 158, 178, 218, 183, 174, 158, 234, 120, 171, 52, 254, 124, 205, 48, 30, 157, 15, 80, 63, 126, 3, 182, 216, 52, 158, 95, 159, 119, 141, 63, 241, 109, 229, 183, 52, 249, 46, 39, 247, 249, 117, 26, 63, 138, 243, 108, 222, 177, 221, 112, 126, 61, 223, 103, 191, 97, 217, 140, 178, 86, 242, 227, 237, 216, 223, 9, 30, 49, 140, 145, 50, 187, 45, 126, 75, 241, 114, 14, 223, 204, 63, 10, 29, 159, 152, 65, 241, 172, 107, 199, 47, 103, 72, 27, 88, 140, 236, 135, 174, 207, 129, 67, 224, 121, 240, 79, 174, 251, 11, 22, 109, 96, 109, 165, 191, 225, 96, 191, 17, 184, 15, 233, 39, 199, 211, 216, 103, 223, 95, 236, 37, 249, 214, 146, 107, 79, 35, 207, 217, 241, 52, 109, 164, 227, 222, 183, 92, 17, 191, 101, 88, 105, 81, 46, 123, 222, 104, 119, 6, 211, 232, 239, 31, 196, 111, 186, 68, 219, 39, 121, 94, 246, 108, 177, 143, 204, 253, 22, 75, 115, 212, 139, 120, 59, 31, 15, 152, 31, 78, 39, 98, 247, 255, 233, 194, 188, 214, 187, 187, 125, 148, 167, 13, 237, 220, 114, 158, 216, 64, 135, 203, 220, 42, 180, 46, 213, 250, 199, 76, 98, 129, 52, 94, 186, 216, 167, 232, 57, 117, 53, 22, 198, 133, 197, 238, 177, 218, 72, 194, 150, 64, 103, 26, 245, 241, 193, 125, 27, 202, 214, 121, 186, 114, 190, 75, 217, 246, 143, 22, 155, 77, 206, 76, 208, 117, 26, 35, 36, 235, 124, 86, 190, 46, 57, 159, 149, 207, 87, 207, 178, 109, 53, 211, 218, 225, 226, 179, 233, 96, 15, 149, 190, 101, 235, 23, 203, 7, 58, 41, 91, 23, 31, 157, 203, 210, 127, 186, 199, 68, 153, 54, 41, 35, 118, 108, 164, 108, 189, 203, 182, 81, 153, 177, 84, 134, 253, 169, 222, 121, 213, 239, 43, 101, 196, 196, 68, 107, 144, 250, 172, 8, 140, 68, 100, 142, 93, 190, 118, 51, 165, 133, 103, 233, 137, 185, 233, 254, 172, 102, 63, 221, 133, 86, 189, 127, 109, 207, 70, 99, 28, 110, 35, 154, 55, 83, 55, 110, 147, 54, 41, 143, 225, 250, 156, 236, 107, 107, 217, 199, 137, 169, 44, 142, 16, 221, 177, 171, 15, 123, 215, 26, 252, 43, 206, 83, 81, 149, 193, 68, 248, 183, 195, 253, 219, 81, 248, 79, 200, 44, 158, 71, 72, 135, 231, 103, 254, 149, 235, 83, 73, 167, 57, 156, 54, 212, 38, 201, 191, 83, 249, 44, 253, 43, 226, 59, 100, 108, 177, 245, 239, 80, 91, 10, 246, 175, 156, 87, 222, 103, 194, 252, 43, 108, 47, 252, 43, 144, 69, 78, 167, 254, 165, 146, 53, 38, 235, 218, 99, 188, 198, 210, 191, 83, 227, 42, 233, 143, 245, 201, 12, 133, 36, 113, 237, 191, 194, 167, 218, 227, 130, 252, 107, 219, 127, 101, 68, 63, 18, 125, 74, 248, 88, 229, 223, 144, 251, 45, 181, 137, 28, 75, 174, 227, 179, 177, 142, 140, 88, 106, 206, 144, 241, 217, 213, 191, 163, 22, 227, 243, 168, 69, 255, 85, 201, 168, 102, 76, 136, 61, 62, 119, 147, 126, 191, 13, 153, 235, 49, 223, 138, 252, 54, 227, 179, 169, 47, 235, 238, 149, 98, 95, 78, 83, 229, 147, 211, 180, 233, 150, 243, 47, 89, 104, 95, 86, 141, 223, 226, 222, 60, 75, 234, 219, 140, 134, 101, 255, 86, 249, 95, 39, 121, 188, 151, 80, 137, 60, 159, 238, 213, 29, 50, 86, 231, 208, 159, 93, 253, 201, 250, 115, 179, 57, 12, 237, 83, 52, 93, 62, 110, 100, 244, 103, 122, 157, 41, 166, 168, 93, 232, 53, 46, 254, 205, 18, 27, 159, 207, 36, 255, 234, 242, 10, 17, 227, 181, 141, 127, 233, 177, 216, 183, 241, 175, 60, 246, 170, 100, 74, 215, 8, 254, 237, 118, 83, 124, 196, 213, 23, 190, 253, 139, 250, 64, 220, 47, 117, 48, 201, 26, 47, 109, 218, 155, 53, 94, 210, 152, 12, 157, 15, 153, 198, 74, 113, 79, 53, 218, 196, 113, 190, 107, 59, 39, 142, 230, 103, 151, 62, 73, 98, 67, 228, 179, 209, 131, 138, 170, 143, 233, 214, 47, 196, 57, 177, 21, 107, 25, 170, 245, 16, 109, 44, 56, 142, 167, 116, 125, 195, 85, 98, 251, 194, 151, 174, 193, 166, 58, 59, 83, 97, 215, 211, 126, 58, 171, 57, 184, 142, 196, 182, 141, 218, 32, 44, 77, 172, 41, 249, 172, 11, 153, 236, 41, 246, 109, 210, 109, 125, 147, 229, 47, 249, 60, 45, 223, 164, 139, 171, 253, 19, 158, 151, 61, 75, 211, 231, 105, 149, 253, 133, 111, 152, 200, 246, 103, 63, 19, 18, 227, 76, 79, 23, 199, 184, 87, 197, 80, 158, 180, 56, 186, 243, 214, 235, 78, 14, 113, 70, 227, 183, 203, 109, 40, 215, 203, 76, 82, 203, 136, 13, 235, 113, 50, 194, 88, 76, 197, 103, 13, 152, 174, 245, 178, 251, 51, 139, 147, 134, 78, 247, 73, 123, 122, 237, 119, 200, 159, 7, 162, 63, 152, 160, 107, 213, 170, 123, 185, 79, 236, 170, 164, 236, 49, 191, 135, 229, 252, 65, 23, 43, 170, 251, 42, 139, 157, 222, 220, 154, 61, 247, 79, 12, 142, 85, 83, 176, 186, 61, 231, 85, 116, 109, 66, 213, 6, 89, 31, 99, 204, 142, 164, 121, 198, 107, 41, 34, 143, 184, 86, 164, 83, 104, 89, 153, 117, 217, 48, 57, 108, 75, 85, 189, 140, 22, 175, 191, 167, 135, 165, 253, 196, 181, 242, 123, 152, 172, 24, 87, 73, 87, 218, 15, 69, 85, 142, 77, 249, 73, 224, 245, 161, 245, 231, 221, 62, 159, 114, 139, 128, 74, 222, 117, 248, 158, 207, 171, 189, 178, 248, 172, 99, 244, 174, 147, 210, 108, 158, 73, 98, 213, 175, 130, 214, 111, 211, 238, 188, 234, 119, 149, 24, 246, 103, 226, 93, 127, 81, 247, 104, 155, 117, 149, 8, 107, 4, 194, 247, 166, 245, 24, 25, 250, 172, 49, 181, 38, 195, 239, 253, 189, 253, 217, 41, 34, 93, 85, 6, 155, 35, 116, 44, 238, 75, 98, 46, 58, 101, 255, 192, 117, 207, 208, 49, 160, 168, 241, 59, 70, 253, 177, 245, 103, 244, 236, 91, 84, 31, 80, 244, 99, 155, 103, 25, 121, 238, 79, 69, 164, 247, 222, 81, 27, 158, 25, 76, 107, 30, 42, 123, 90, 63, 99, 198, 180, 137, 199, 90, 160, 235, 253, 110, 200, 126, 30, 62, 163, 162, 123, 158, 160, 107, 71, 186, 103, 12, 149, 127, 101, 196, 188, 87, 171, 191, 195, 243, 135, 210, 207, 57, 198, 183, 170, 237, 81, 234, 215, 197, 133, 56, 239, 242, 28, 61, 225, 183, 190, 160, 91, 39, 84, 173, 17, 54, 106, 131, 215, 210, 216, 9, 29, 255, 67, 175, 167, 239, 194, 196, 61, 207, 251, 254, 155, 67, 12, 201, 182, 203, 242, 135, 156, 62, 94, 55, 151, 31, 210, 159, 92, 97, 247, 253, 86, 210, 95, 139, 82, 225, 122, 31, 180, 246, 91, 158, 247, 50, 197, 125, 70, 229, 11, 214, 215, 6, 214, 78, 70, 236, 237, 205, 230, 77, 202, 58, 53, 99, 131, 109, 220, 100, 221, 31, 101, 25, 154, 63, 104, 108, 97, 138, 73, 211, 152, 68, 215, 45, 91, 53, 115, 221, 46, 247, 233, 129, 24, 39, 250, 134, 206, 159, 178, 100, 234, 219, 219, 49, 62, 255, 29, 243, 96, 174, 132, 42, 77, 140, 99, 99, 131, 125, 91, 148, 97, 235, 207, 88, 184, 214, 23, 122, 158, 230, 51, 109, 77, 215, 132, 180, 51, 143, 178, 109, 235, 179, 173, 195, 75, 151, 81, 208, 232, 31, 199, 184, 23, 248, 232, 49, 213, 110, 139, 103, 76, 37, 205, 196, 249, 55, 173, 190, 190, 163, 18, 211, 231, 62, 18, 90, 87, 12, 253, 99, 180, 195, 86, 92, 117, 170, 119, 226, 182, 81, 27, 183, 57, 83, 84, 61, 42, 95, 250, 92, 155, 87, 172, 196, 142, 185, 60, 237, 230, 83, 135, 141, 174, 190, 82, 100, 204, 248, 232, 80, 196, 249, 162, 37, 111, 155, 103, 181, 189, 104, 253, 99, 148, 17, 59, 22, 243, 142, 233, 188, 218, 90, 100, 125, 182, 229, 229, 41, 54, 122, 210, 247, 32, 242, 247, 4, 242, 179, 42, 253, 93, 83, 158, 235, 127, 170, 119, 115, 58, 123, 133, 250, 62, 215, 117, 14, 151, 53, 73, 213, 121, 221, 154, 133, 106, 13, 97, 164, 255, 155, 19, 151, 248, 138, 246, 59, 224, 28, 215, 138, 92, 214, 89, 109, 126, 75, 68, 227, 38, 120, 61, 212, 103, 125, 194, 102, 205, 130, 147, 21, 207, 165, 188, 119, 177, 137, 103, 5, 173, 90, 159, 41, 251, 231, 60, 126, 152, 214, 209, 92, 223, 127, 119, 73, 127, 49, 174, 161, 234, 236, 18, 217, 230, 166, 53, 75, 186, 150, 56, 240, 126, 168, 238, 127, 63, 11, 233, 47, 38, 127, 139, 113, 222, 170, 221, 1, 241, 222, 235, 47, 101, 172, 119, 91, 198, 169, 188, 254, 171, 122, 255, 148, 37, 33, 223, 136, 38, 30, 254, 29, 154, 79, 4, 218, 70, 46, 67, 59, 111, 25, 73, 223, 115, 54, 20, 223, 39, 198, 246, 141, 238, 221, 172, 234, 61, 30, 211, 77, 108, 243, 22, 211, 124, 206, 166, 173, 170, 54, 169, 202, 20, 223, 180, 134, 232, 101, 51, 39, 182, 61, 239, 83, 119, 55, 194, 121, 215, 241, 50, 84, 95, 27, 188, 99, 157, 198, 137, 237, 248, 151, 49, 134, 100, 221, 127, 153, 190, 226, 155, 92, 33, 161, 243, 47, 23, 31, 196, 242, 109, 168, 207, 77, 250, 184, 182, 49, 182, 254, 166, 244, 68, 147, 183, 72, 29, 125, 109, 173, 146, 50, 234, 13, 109, 111, 17, 254, 14, 185, 222, 166, 189, 177, 219, 17, 98, 203, 44, 187, 230, 113, 62, 203, 62, 182, 118, 178, 21, 223, 120, 202, 58, 31, 18, 47, 161, 101, 219, 232, 239, 122, 189, 141, 221, 242, 138, 197, 24, 109, 241, 41, 67, 213, 230, 50, 165, 8, 155, 103, 197, 102, 30, 49, 145, 151, 132, 212, 19, 67, 47, 155, 254, 101, 202, 151, 135, 255, 116, 109, 44, 35, 126, 92, 252, 83, 68, 28, 21, 97, 243, 60, 234, 114, 209, 169, 140, 250, 203, 106, 127, 86, 157, 236, 185, 109, 84, 250, 150, 152, 109, 233, 223, 225, 162, 34, 242, 201, 127, 199, 110, 96, 13, 205, 112, 28, 27, 89, 26, 100, 13, 121, 168, 237, 19, 254, 207, 145, 58, 251, 197, 236, 195, 62, 117, 217, 214, 235, 91, 102, 140, 54, 186, 74, 104, 27, 125, 203, 142, 85, 71, 104, 253, 121, 248, 64, 64, 191, 207, 23, 127, 23, 105, 218, 189, 211, 179, 88, 11, 151, 105, 100, 188, 183, 144, 197, 250, 61, 65, 224, 120, 97, 146, 222, 119, 232, 62, 127, 107, 57, 178, 125, 179, 254, 46, 50, 123, 103, 74, 223, 201, 229, 53, 254, 217, 148, 97, 180, 87, 1, 241, 152, 21, 155, 38, 91, 138, 223, 6, 9, 223, 251, 252, 46, 196, 57, 198, 10, 236, 183, 114, 140, 216, 72, 148, 191, 53, 158, 163, 127, 93, 255, 102, 56, 123, 127, 106, 122, 47, 63, 133, 244, 183, 39, 166, 252, 229, 25, 23, 212, 230, 177, 198, 54, 159, 49, 46, 150, 175, 122, 101, 229, 112, 191, 96, 113, 198, 124, 36, 222, 207, 103, 141, 63, 38, 253, 133, 142, 42, 93, 125, 245, 247, 185, 222, 212, 215, 202, 238, 67, 46, 136, 223, 41, 101, 222, 143, 164, 119, 68, 3, 237, 13, 253, 94, 199, 243, 239, 181, 210, 124, 67, 182, 143, 236, 123, 122, 94, 151, 87, 72, 151, 252, 255, 3, 29, 66, 228, 191, 143, 79, 199, 180, 169, 242, 244, 166, 211, 250, 132, 246, 43, 97, 19, 185, 110, 211, 183, 79, 84, 178, 206, 103, 9, 213, 161, 140, 251, 140, 77, 124, 235, 206, 211, 184, 20, 115, 50, 249, 94, 147, 37, 161, 253, 35, 175, 182, 11, 145, 207, 171, 218, 28, 243, 25, 74, 70, 246, 185, 172, 95, 12, 255, 187, 66, 219, 175, 250, 6, 195, 69, 138, 244, 63, 253, 237, 105, 86, 204, 143, 215, 213, 107, 54, 177, 245, 15, 149, 162, 238, 133, 3, 117, 90, 124, 67, 145, 213, 175, 92, 237, 151, 53, 207, 180, 125, 134, 115, 125, 62, 148, 197, 247, 121, 209, 247, 121, 201, 183, 126, 157, 62, 62, 207, 200, 62, 245, 135, 232, 234, 98, 87, 185, 158, 16, 201, 91, 207, 34, 36, 166, 45, 99, 180, 53, 52, 62, 105, 186, 156, 199, 116, 141, 79, 27, 92, 174, 205, 210, 53, 164, 111, 248, 232, 31, 35, 94, 109, 245, 160, 182, 178, 105, 115, 72, 123, 66, 36, 15, 219, 134, 138, 169, 204, 24, 62, 116, 209, 33, 73, 134, 235, 119, 209, 67, 149, 87, 46, 199, 164, 131, 46, 77, 181, 85, 213, 105, 210, 223, 166, 60, 213, 245, 46, 177, 98, 123, 141, 174, 45, 121, 245, 153, 172, 152, 176, 169, 39, 207, 250, 93, 36, 70, 57, 161, 250, 231, 209, 254, 24, 182, 45, 194, 23, 121, 215, 27, 234, 223, 80, 125, 66, 109, 20, 106, 243, 60, 226, 168, 104, 41, 163, 78, 157, 252, 31];\nvar trieData$1 = {\n  type: type$1,\n  data: data$1\n};\n\nvar _class$6;\n\nvar _temp$2;\n\nvar decompositions = useData.decompositions;\nvar trie$1 = new UnicodeTrie(new Uint8Array(trieData$1.data));\nvar stateMachine = new StateMachine(indicMachine);\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\n\nvar IndicShaper = (_temp$2 = _class$6 = function (_DefaultShaper) {\n  inherits(IndicShaper, _DefaultShaper);\n\n  function IndicShaper() {\n    classCallCheck(this, IndicShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  IndicShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables);\n    plan.addStage(['locl', 'ccmp']);\n    plan.addStage(initialReordering);\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n    plan.addStage(finalReordering);\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    }); // Setup the indic config for the selected script\n\n    plan.unicodeScript = fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2'; // TODO: turn off kern (Khmer) and liga features.\n  };\n\n  IndicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      var d = INDIC_DECOMPOSITIONS[codepoint] || decompositions[codepoint];\n\n      if (d) {\n        var decomposed = d.map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    }; // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n\n\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return IndicShaper;\n}(DefaultShaper), _class$6.zeroMarkWidths = 'NONE', _temp$2);\n\nfunction indicCategory(glyph) {\n  return trie$1.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie$1.get(glyph.codePoints[0]) & 0xff);\n}\n\nvar IndicInfo = function IndicInfo(category, position, syllableType, syllable) {\n  classCallCheck(this, IndicInfo);\n  this.category = category;\n  this.position = position;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables(font, glyphs) {\n  var syllable = 0;\n  var last = 0;\n\n  for (var _iterator = stateMachine.match(glyphs.map(indicCategory)), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        start = _ref2[0],\n        end = _ref2[1],\n        tags$$1 = _ref2[2];\n\n    if (start > last) {\n      ++syllable;\n\n      for (var _i2 = last; _i2 < start; _i2++) {\n        glyphs[_i2].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable; // Create shaper info\n\n    for (var _i3 = start; _i3 <= end; _i3++) {\n      glyphs[_i3].shaperInfo = new IndicInfo(1 << indicCategory(glyphs[_i3]), indicPosition(glyphs[_i3]), tags$$1[0], syllable);\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n\n    for (var i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i4 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _glyph$features;\n\n    var _ref3;\n\n    if (_isArray2) {\n      if (_i4 >= _iterator2.length) break;\n      _ref3 = _iterator2[_i4++];\n    } else {\n      _i4 = _iterator2.next();\n      if (_i4.done) break;\n      _ref3 = _i4.value;\n    }\n\n    var glyph = _ref3;\n    glyph.features = (_glyph$features = {}, _glyph$features[feature] = true, _glyph$features);\n  }\n\n  var GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  var glyphs = [virama, consonant, virama];\n\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  var virama = font.glyphForCodePoint(indicConfig.virama).id;\n\n  if (virama) {\n    var info = new GlyphInfo(font, virama, [indicConfig.virama]);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    var _glyphs$start$shaperI = glyphs[start].shaperInfo,\n        category = _glyphs$start$shaperI.category,\n        syllableType = _glyphs$start$shaperI.syllableType;\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(1 << indicCategory(g), indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable); // Insert after possible Repha.\n\n      var _i5 = start;\n\n      while (_i5 < end && glyphs[_i5].shaperInfo.category === CATEGORIES.Repha) {\n        _i5++;\n      }\n\n      glyphs.splice(_i5++, 0, g);\n      end++;\n    } // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n\n    var base = end;\n    var limit = start;\n    var hasReph = false; // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2]) || indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n      // See if it matches the 'rphf' feature.\n      var _g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n\n      if (wouldSubstitute(_g.slice(0, 2), 'rphf') || indicConfig.rephMode === 'Explicit' && wouldSubstitute(_g, 'rphf')) {\n        limit += 2;\n\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last':\n        {\n          // starting from the end of the syllable, move backwards\n          var _i6 = end;\n          var seenBelow = false;\n\n          do {\n            var _info = glyphs[--_i6].shaperInfo; // until a consonant is found\n\n            if (isConsonant(glyphs[_i6])) {\n              // that does not have a below-base or post-base form\n              // (post-base forms have to follow below-base forms),\n              if (_info.position !== POSITIONS.Below_C && (_info.position !== POSITIONS.Post_C || seenBelow)) {\n                base = _i6;\n                break;\n              } // or that is not a pre-base reordering Ra,\n              //\n              // IMPLEMENTATION NOTES:\n              //\n              // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n              // by the logic above already.\n              //\n              // or arrive at the first consonant. The consonant stopped at will\n              // be the base.\n\n\n              if (_info.position === POSITIONS.Below_C) {\n                seenBelow = true;\n              }\n\n              base = _i6;\n            } else if (start < _i6 && _info.category === CATEGORIES.ZWJ && glyphs[_i6 - 1].shaperInfo.category === CATEGORIES.H) {\n              // A ZWJ after a Halant stops the base search, and requests an explicit\n              // half form.\n              // A ZWJ before a Halant, requests a subjoined form instead, and hence\n              // search continues.  This is particularly important for Bengali\n              // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n              break;\n            }\n          } while (_i6 > limit);\n\n          break;\n        }\n\n      case 'First':\n        {\n          // The first consonant is always the base.\n          base = start; // Mark all subsequent consonants as below.\n\n          for (var _i7 = base + 1; _i7 < end; _i7++) {\n            if (isConsonant(glyphs[_i7])) {\n              glyphs[_i7].shaperInfo.position = POSITIONS.Below_C;\n            }\n          }\n        }\n    } // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n\n\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    } // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n    // Reorder characters\n\n\n    for (var _i8 = start; _i8 < base; _i8++) {\n      var _info2 = glyphs[_i8].shaperInfo;\n      _info2.position = Math.min(POSITIONS.Pre_C, _info2.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    } // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n\n\n    for (var _i9 = base + 1; _i9 < end; _i9++) {\n      if (glyphs[_i9].shaperInfo.category === CATEGORIES.M) {\n        for (var j = _i9 + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n\n        break;\n      }\n    } // Handle beginning Ra\n\n\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    } // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n\n\n    if (plan.isOldSpec) {\n      var disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n\n      for (var _i10 = base + 1; _i10 < end; _i10++) {\n        if (glyphs[_i10].shaperInfo.category === CATEGORIES.H) {\n          var _j = void 0;\n\n          for (_j = end - 1; _j > _i10; _j--) {\n            if (isConsonant(glyphs[_j]) || disallowDoubleHalants && glyphs[_j].shaperInfo.category === CATEGORIES.H) {\n              break;\n            }\n          }\n\n          if (glyphs[_j].shaperInfo.category !== CATEGORIES.H && _j > _i10) {\n            // Move Halant to after last consonant.\n            var t = glyphs[_i10];\n            glyphs.splice.apply(glyphs, [_i10, 0].concat(glyphs.splice(_i10 + 1, _j - _i10)));\n            glyphs[_j] = t;\n          }\n\n          break;\n        }\n      }\n    } // Attach misc marks to previous char to move with them.\n\n\n    var lastPos = POSITIONS.Start;\n\n    for (var _i11 = start; _i11 < end; _i11++) {\n      var _info3 = glyphs[_i11].shaperInfo;\n\n      if (_info3.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & _info3.category)) {\n        _info3.position = lastPos;\n\n        if (_info3.category === CATEGORIES.H && _info3.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (var _j2 = _i11; _j2 > start; _j2--) {\n            if (glyphs[_j2 - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              _info3.position = glyphs[_j2 - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (_info3.position !== POSITIONS.SMVD) {\n        lastPos = _info3.position;\n      }\n    } // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n\n\n    var last = base;\n\n    for (var _i12 = base + 1; _i12 < end; _i12++) {\n      if (isConsonant(glyphs[_i12])) {\n        for (var _j3 = last + 1; _j3 < _i12; _j3++) {\n          if (glyphs[_j3].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[_j3].shaperInfo.position = glyphs[_i12].shaperInfo.position;\n          }\n        }\n\n        last = _i12;\n      } else if (glyphs[_i12].shaperInfo.category === CATEGORIES.M) {\n        last = _i12;\n      }\n    }\n\n    var arr = glyphs.slice(start, end);\n    arr.sort(function (a, b) {\n      return a.shaperInfo.position - b.shaperInfo.position;\n    });\n    glyphs.splice.apply(glyphs, [start, arr.length].concat(arr)); // Find base again\n\n    for (var _i13 = start; _i13 < end; _i13++) {\n      if (glyphs[_i13].shaperInfo.position === POSITIONS.Base_C) {\n        base = _i13;\n        break;\n      }\n    } // Setup features now\n    // Reph\n\n\n    for (var _i14 = start; _i14 < end && glyphs[_i14].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; _i14++) {\n      glyphs[_i14].features.rphf = true;\n    } // Pre-base\n\n\n    var blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n\n    for (var _i15 = start; _i15 < base; _i15++) {\n      glyphs[_i15].features.half = true;\n\n      if (blwf) {\n        glyphs[_i15].features.blwf = true;\n      }\n    } // Post-base\n\n\n    for (var _i16 = base + 1; _i16 < end; _i16++) {\n      glyphs[_i16].features.abvf = true;\n      glyphs[_i16].features.pstf = true;\n      glyphs[_i16].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (var _i17 = start; _i17 + 1 < base; _i17++) {\n        if (glyphs[_i17].shaperInfo.category === CATEGORIES.Ra && glyphs[_i17 + 1].shaperInfo.category === CATEGORIES.H && (_i17 + 1 === base || glyphs[_i17 + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n          glyphs[_i17].features.blwf = true;\n          glyphs[_i17 + 1].features.blwf = true;\n        }\n      }\n    }\n\n    var prefLen = 2;\n\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (var _i18 = base + 1; _i18 + prefLen - 1 < end; _i18++) {\n        var _g2 = [glyphs[_i18].copy(), glyphs[_i18 + 1].copy()];\n\n        if (wouldSubstitute(_g2, 'pref')) {\n          for (var _j4 = 0; _j4 < prefLen; _j4++) {\n            glyphs[_i18++].features.pref = true;\n          } // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n\n\n          if (features.cfar) {\n            for (; _i18 < end; _i18++) {\n              glyphs[_i18].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    } // Apply ZWJ/ZWNJ effects\n\n\n    for (var _i19 = start + 1; _i19 < end; _i19++) {\n      if (isJoiner(glyphs[_i19])) {\n        var nonJoiner = glyphs[_i19].shaperInfo.category === CATEGORIES.ZWNJ;\n        var _j5 = _i19;\n\n        do {\n          _j5--; // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n          // A ZWNJ disables HALF.\n\n          if (nonJoiner) {\n            delete glyphs[_j5].features.half;\n          }\n        } while (_j5 > start && !isConsonant(glyphs[_j5]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n    var tryPref = !!features.pref; // Find base again\n\n    var base = start;\n\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (var i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n\n              break;\n            }\n          }\n        } // For Malayalam, skip over unformed below- (but NOT post-) forms.\n\n\n        if (plan.unicodeScript === 'Malayalam') {\n          for (var _i20 = base + 1; _i20 < end; _i20++) {\n            while (_i20 < end && isJoiner(glyphs[_i20])) {\n              _i20++;\n            }\n\n            if (_i20 === end || !isHalantOrCoeng(glyphs[_i20])) {\n              break;\n            }\n\n            _i20++; // Skip halant.\n\n            while (_i20 < end && isJoiner(glyphs[_i20])) {\n              _i20++;\n            }\n\n            if (_i20 < end && isConsonant(glyphs[_i20]) && glyphs[_i20].shaperInfo.position === POSITIONS.Below_C) {\n              base = _i20;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    } // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n\n    if (start + 1 < end && start < base) {\n      // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      var newPos = base === end ? base - 2 : base - 1; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        } // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n\n\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (var _i21 = newPos; _i21 > start; _i21--) {\n          if (glyphs[_i21 - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            var oldPos = _i21 - 1;\n\n            if (oldPos < base && base <= newPos) {\n              // Shouldn't actually happen.\n              base--;\n            }\n\n            var tmp = glyphs[oldPos];\n            glyphs.splice.apply(glyphs, [oldPos, 0].concat(glyphs.splice(oldPos + 1, newPos - oldPos)));\n            glyphs[newPos] = tmp;\n            newPos--;\n          }\n        }\n      }\n    } // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n\n\n    if (start + 1 < end && glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === CATEGORIES.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      var newRephPos = void 0;\n      var rephPos = indicConfig.rephPos;\n      var found = false; // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        } // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n\n\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        } // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n\n\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      } //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n\n\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      } // 6. Otherwise, reorder reph to the end of the syllable.\n\n\n      if (!found) {\n        newRephPos = end - 1;\n\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        } // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n\n\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (var _i22 = base + 1; _i22 < newRephPos; _i22++) {\n            if (glyphs[_i22].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      var reph = glyphs[start];\n      glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, newRephPos - start)));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    } // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n\n\n    if (tryPref && base + 1 < end) {\n      for (var _i23 = base + 1; _i23 < end; _i23++) {\n        if (glyphs[_i23].features.pref) {\n          // 1. Only reorder a glyph produced by substitution during application\n          //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n          //    the feature generally but block it in certain contexts.)\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[_i23].isLigated && !glyphs[_i23].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            var _newPos = base; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (_newPos > start && !(glyphs[_newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                _newPos--;\n              } // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n\n\n              if (_newPos > start && glyphs[_newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                var _oldPos2 = _i23;\n\n                for (var j = base + 1; j < _oldPos2; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    _newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (_newPos > start && isHalantOrCoeng(glyphs[_newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (_newPos < end && isJoiner(glyphs[_newPos])) {\n                _newPos++;\n              }\n            }\n\n            var _oldPos = _i23;\n            var _tmp = glyphs[_oldPos];\n            glyphs.splice.apply(glyphs, [_newPos + 1, 0].concat(glyphs.splice(_newPos, _oldPos - _newPos)));\n            glyphs[_newPos] = _tmp;\n\n            if (_newPos <= base && base < _oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    } // Apply 'init' to the Left Matra if it's a word start.\n\n\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(unicode.getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n\n  return start;\n}\n\nvar type$2 = \"Buffer\";\nvar data$2 = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 169, 208, 1, 81, 12, 174, 243, 237, 156, 127, 168, 29, 71, 21, 199, 231, 221, 247, 222, 253, 245, 110, 94, 242, 108, 126, 244, 217, 24, 155, 182, 20, 35, 98, 173, 138, 105, 21, 12, 109, 197, 90, 5, 83, 21, 141, 69, 169, 173, 149, 38, 42, 216, 7, 66, 26, 80, 82, 193, 104, 161, 137, 86, 37, 226, 175, 170, 49, 40, 36, 129, 162, 45, 20, 76, 171, 96, 219, 32, 54, 234, 31, 166, 138, 86, 13, 180, 193, 254, 209, 98, 181, 85, 12, 175, 180, 20, 191, 227, 206, 225, 158, 119, 50, 51, 59, 179, 187, 179, 123, 159, 185, 7, 62, 204, 238, 236, 236, 204, 153, 51, 115, 118, 103, 102, 127, 60, 223, 82, 106, 98, 82, 169, 30, 152, 3, 27, 193, 38, 112, 41, 184, 220, 196, 205, 87, 16, 190, 21, 188, 29, 188, 27, 124, 192, 147, 238, 122, 112, 179, 37, 126, 7, 88, 0, 59, 193, 110, 240, 69, 240, 101, 176, 31, 220, 101, 248, 33, 75, 127, 8, 252, 4, 252, 20, 252, 194, 146, 223, 207, 192, 49, 240, 60, 234, 255, 107, 163, 219, 156, 65, 199, 81, 248, 40, 194, 63, 128, 147, 224, 73, 240, 12, 248, 55, 120, 1, 76, 78, 41, 53, 3, 230, 192, 60, 216, 8, 54, 129, 75, 192, 102, 176, 101, 42, 75, 127, 53, 194, 173, 96, 27, 248, 8, 216, 14, 110, 1, 59, 193, 110, 176, 7, 236, 3, 251, 193, 93, 224, 32, 56, 2, 238, 53, 251, 247, 131, 135, 192, 113, 112, 2, 60, 6, 158, 0, 79, 129, 231, 192, 105, 240, 210, 84, 166, 115, 123, 90, 169, 89, 176, 118, 58, 219, 223, 128, 240, 98, 240, 90, 240, 6, 240, 22, 112, 37, 120, 167, 57, 254, 94, 132, 31, 4, 55, 128, 29, 96, 97, 58, 171, 183, 102, 23, 219, 174, 130, 207, 33, 191, 61, 21, 231, 201, 217, 43, 242, 254, 42, 246, 191, 5, 126, 0, 14, 131, 123, 166, 179, 250, 30, 5, 15, 130, 71, 192, 239, 114, 244, 121, 12, 199, 159, 0, 79, 129, 127, 152, 243, 79, 131, 23, 193, 84, 91, 169, 65, 59, 139, 91, 141, 112, 61, 184, 8, 188, 166, 61, 236, 75, 111, 196, 246, 102, 176, 5, 92, 13, 182, 130, 109, 230, 156, 235, 77, 120, 51, 194, 79, 129, 237, 172, 15, 238, 196, 254, 238, 118, 58, 91, 17, 95, 64, 25, 95, 2, 95, 7, 223, 5, 63, 2, 119, 179, 114, 239, 195, 246, 207, 193, 49, 19, 119, 28, 225, 9, 240, 71, 112, 50, 64, 191, 39, 145, 230, 153, 118, 102, 171, 103, 193, 34, 56, 4, 84, 71, 169, 110, 39, 139, 95, 129, 112, 208, 201, 210, 175, 52, 113, 154, 181, 108, 155, 179, 1, 241, 23, 131, 87, 139, 227, 175, 119, 164, 39, 46, 235, 100, 101, 79, 49, 189, 125, 233, 121, 186, 162, 232, 60, 222, 132, 114, 183, 128, 171, 192, 53, 96, 43, 216, 6, 62, 220, 241, 159, 123, 147, 56, 62, 152, 60, 51, 205, 39, 145, 230, 211, 224, 51, 157, 172, 223, 124, 158, 217, 224, 164, 167, 94, 119, 32, 221, 87, 192, 55, 193, 1, 135, 30, 54, 255, 63, 212, 25, 214, 235, 199, 157, 172, 175, 220, 135, 240, 1, 83, 174, 222, 126, 216, 108, 223, 157, 99, 219, 42, 236, 59, 102, 204, 217, 200, 216, 127, 198, 140, 25, 51, 102, 204, 152, 49, 99, 198, 196, 50, 103, 153, 79, 54, 205, 225, 246, 112, 77, 96, 123, 128, 126, 191, 98, 115, 215, 223, 136, 121, 236, 39, 60, 231, 83, 221, 127, 143, 115, 254, 218, 201, 214, 97, 254, 134, 240, 239, 224, 159, 224, 52, 120, 201, 196, 183, 187, 208, 167, 155, 165, 95, 131, 112, 30, 108, 4, 155, 186, 217, 241, 75, 17, 94, 14, 174, 48, 251, 215, 32, 124, 15, 184, 174, 235, 46, 95, 167, 187, 209, 115, 124, 204, 152, 49, 99, 198, 164, 101, 110, 178, 89, 154, 174, 255, 152, 49, 99, 210, 144, 218, 191, 119, 96, 252, 184, 208, 205, 158, 11, 221, 138, 240, 54, 203, 120, 242, 246, 110, 246, 108, 95, 111, 223, 41, 142, 127, 99, 4, 198, 159, 31, 27, 100, 236, 1, 199, 192, 219, 2, 88, 4, 151, 173, 88, 26, 183, 139, 237, 31, 192, 246, 159, 192, 185, 179, 74, 93, 11, 22, 102, 77, 60, 194, 199, 103, 135, 233, 158, 197, 246, 1, 216, 224, 113, 112, 126, 79, 169, 15, 129, 239, 128, 27, 176, 255, 189, 118, 22, 254, 210, 236, 115, 218, 253, 51, 227, 36, 87, 34, 205, 71, 89, 186, 131, 216, 62, 101, 246, 47, 152, 193, 49, 112, 112, 166, 249, 251, 79, 211, 228, 249, 203, 247, 181, 237, 76, 63, 61, 130, 240, 30, 112, 180, 155, 205, 19, 31, 236, 198, 223, 79, 247, 154, 52, 131, 156, 244, 182, 252, 30, 41, 80, 158, 43, 95, 121, 254, 111, 145, 247, 163, 221, 165, 233, 72, 223, 189, 158, 242, 254, 130, 115, 78, 129, 167, 187, 195, 186, 233, 116, 207, 97, 255, 63, 38, 191, 23, 88, 190, 147, 61, 119, 253, 108, 249, 199, 182, 101, 108, 251, 207, 64, 159, 21, 96, 13, 88, 15, 46, 2, 175, 2, 15, 152, 252, 94, 135, 237, 205, 96, 11, 184, 202, 28, 127, 23, 120, 159, 241, 215, 155, 192, 142, 222, 48, 191, 5, 108, 239, 2, 159, 5, 123, 192, 62, 240, 53, 240, 109, 112, 176, 151, 175, 143, 126, 159, 230, 8, 210, 221, 235, 72, 171, 231, 237, 247, 227, 216, 67, 189, 225, 254, 113, 108, 159, 96, 251, 127, 238, 101, 239, 150, 232, 253, 83, 216, 126, 218, 83, 110, 81, 91, 219, 242, 104, 218, 151, 99, 124, 189, 46, 92, 229, 255, 171, 23, 231, 167, 203, 217, 86, 77, 151, 191, 216, 91, 154, 239, 139, 198, 246, 45, 220, 15, 251, 253, 102, 108, 62, 138, 109, 62, 74, 253, 109, 208, 175, 215, 38, 190, 119, 132, 238, 48, 239, 19, 173, 238, 103, 225, 121, 8, 47, 4, 155, 204, 254, 37, 253, 97, 218, 205, 125, 127, 254, 189, 142, 255, 62, 220, 20, 121, 239, 73, 133, 188, 71, 245, 102, 211, 102, 87, 32, 124, 71, 205, 237, 87, 117, 255, 91, 110, 126, 233, 211, 61, 164, 14, 186, 13, 175, 101, 253, 88, 191, 187, 247, 126, 236, 95, 215, 207, 250, 255, 97, 246, 126, 163, 78, 183, 200, 222, 49, 189, 17, 251, 31, 55, 113, 183, 228, 244, 127, 27, 139, 145, 125, 141, 222, 49, 60, 29, 144, 86, 191, 11, 120, 107, 127, 105, 28, 127, 47, 241, 97, 51, 166, 166, 186, 223, 102, 194, 219, 17, 238, 235, 12, 245, 191, 83, 212, 107, 191, 217, 63, 106, 25, 147, 47, 71, 22, 91, 19, 255, 99, 20, 100, 130, 209, 18, 251, 60, 13, 133, 147, 236, 248, 84, 32, 50, 63, 229, 136, 75, 45, 163, 97, 241, 177, 144, 80, 95, 106, 89, 160, 182, 106, 89, 206, 107, 137, 112, 218, 64, 18, 210, 183, 82, 247, 133, 201, 196, 249, 87, 45, 237, 166, 21, 40, 33, 33, 109, 121, 54, 249, 190, 205, 103, 206, 38, 153, 112, 48, 10, 34, 245, 224, 215, 188, 229, 46, 182, 49, 131, 220, 94, 46, 82, 180, 207, 216, 198, 82, 69, 218, 87, 218, 111, 57, 217, 176, 46, 191, 11, 205, 59, 198, 246, 85, 251, 33, 111, 123, 215, 117, 41, 143, 255, 119, 113, 205, 59, 202, 74, 81, 123, 147, 14, 29, 6, 166, 158, 193, 243, 157, 170, 233, 1, 76, 129, 213, 140, 217, 215, 219, 3, 19, 174, 16, 244, 4, 125, 193, 44, 59, 151, 234, 184, 146, 217, 172, 199, 242, 10, 213, 143, 210, 23, 153, 23, 170, 18, 118, 33, 253, 187, 134, 144, 188, 148, 72, 39, 247, 139, 232, 16, 114, 156, 139, 75, 167, 144, 246, 37, 25, 24, 228, 190, 110, 223, 16, 31, 234, 91, 226, 92, 117, 146, 101, 199, 218, 40, 239, 254, 231, 59, 206, 253, 207, 87, 182, 175, 46, 69, 116, 142, 109, 223, 188, 109, 45, 51, 38, 180, 181, 175, 20, 242, 95, 185, 63, 107, 73, 235, 147, 144, 254, 152, 119, 142, 11, 221, 46, 171, 84, 54, 215, 165, 249, 238, 92, 164, 126, 161, 237, 235, 107, 147, 24, 157, 171, 106, 223, 162, 254, 75, 109, 202, 175, 209, 74, 45, 189, 62, 87, 37, 101, 253, 151, 198, 174, 121, 101, 228, 149, 223, 132, 253, 233, 222, 87, 228, 250, 153, 39, 210, 55, 101, 125, 165, 158, 69, 237, 223, 18, 245, 43, 42, 218, 191, 242, 238, 181, 182, 122, 184, 108, 110, 75, 171, 44, 233, 93, 233, 92, 229, 216, 226, 67, 251, 16, 23, 242, 37, 62, 254, 225, 50, 80, 75, 219, 159, 239, 135, 250, 159, 237, 254, 233, 146, 34, 245, 176, 173, 137, 230, 173, 21, 240, 177, 80, 204, 120, 40, 198, 31, 203, 250, 115, 172, 29, 244, 190, 111, 60, 171, 212, 153, 215, 82, 190, 159, 215, 158, 52, 222, 181, 217, 65, 74, 89, 127, 46, 35, 212, 230, 69, 198, 187, 77, 181, 175, 43, 45, 137, 188, 94, 167, 104, 95, 155, 255, 75, 145, 186, 150, 105, 223, 151, 25, 138, 72, 89, 191, 41, 226, 99, 100, 127, 9, 183, 65, 222, 245, 242, 156, 128, 186, 133, 180, 65, 29, 254, 37, 215, 26, 108, 235, 14, 49, 254, 85, 68, 183, 20, 109, 25, 147, 46, 68, 15, 46, 54, 31, 227, 125, 133, 124, 145, 218, 108, 5, 75, 51, 112, 224, 235, 15, 177, 54, 37, 61, 138, 172, 29, 213, 233, 115, 33, 109, 211, 99, 113, 114, 45, 199, 54, 142, 37, 105, 41, 127, 222, 250, 252, 142, 96, 149, 9, 245, 177, 178, 207, 243, 165, 61, 21, 11, 243, 226, 93, 18, 219, 207, 229, 113, 101, 9, 109, 186, 196, 218, 95, 153, 253, 57, 71, 190, 46, 63, 146, 246, 87, 44, 204, 171, 155, 45, 79, 91, 188, 124, 134, 94, 148, 22, 11, 229, 152, 211, 53, 38, 173, 218, 39, 116, 158, 211, 34, 92, 165, 220, 18, 234, 99, 169, 253, 152, 11, 95, 147, 117, 173, 209, 74, 104, 140, 199, 247, 59, 106, 184, 198, 234, 171, 239, 234, 8, 84, 100, 250, 20, 104, 201, 155, 235, 76, 123, 142, 241, 243, 93, 253, 216, 230, 19, 54, 73, 221, 55, 98, 176, 221, 91, 53, 3, 101, 239, 47, 122, 13, 95, 247, 153, 89, 19, 183, 6, 172, 85, 217, 53, 106, 46, 178, 108, 105, 67, 122, 79, 39, 79, 87, 215, 115, 131, 57, 181, 84, 143, 190, 26, 142, 177, 100, 30, 93, 11, 60, 47, 89, 247, 34, 182, 157, 83, 195, 177, 9, 229, 99, 43, 183, 107, 236, 58, 101, 209, 195, 7, 157, 75, 237, 215, 196, 243, 125, 91, 31, 111, 250, 89, 99, 158, 159, 87, 97, 167, 84, 245, 72, 97, 163, 162, 247, 23, 25, 39, 199, 38, 41, 203, 183, 193, 203, 143, 177, 81, 213, 229, 199, 74, 21, 246, 87, 53, 151, 159, 167, 155, 22, 126, 223, 176, 205, 29, 92, 115, 50, 130, 198, 31, 125, 53, 28, 123, 232, 123, 240, 58, 149, 141, 191, 166, 25, 180, 6, 163, 183, 165, 143, 200, 251, 48, 181, 85, 108, 253, 83, 137, 239, 26, 88, 199, 117, 81, 223, 87, 171, 238, 3, 49, 54, 229, 125, 67, 142, 55, 8, 57, 86, 227, 114, 174, 97, 37, 219, 150, 204, 155, 124, 166, 45, 231, 203, 107, 125, 236, 251, 3, 85, 251, 77, 217, 190, 87, 180, 220, 162, 231, 75, 248, 186, 85, 25, 253, 164, 132, 222, 183, 83, 147, 178, 15, 144, 31, 208, 218, 20, 191, 78, 165, 236, 151, 52, 70, 215, 190, 178, 142, 49, 47, 208, 50, 203, 116, 115, 249, 43, 159, 99, 146, 95, 219, 174, 241, 114, 110, 201, 225, 215, 119, 146, 233, 136, 58, 185, 164, 236, 249, 121, 227, 214, 212, 99, 90, 110, 35, 221, 70, 117, 191, 19, 166, 239, 189, 182, 57, 161, 92, 87, 112, 181, 245, 108, 78, 254, 82, 66, 245, 202, 91, 71, 10, 225, 229, 224, 60, 19, 186, 136, 157, 59, 52, 213, 78, 28, 126, 255, 180, 93, 99, 200, 151, 103, 89, 186, 212, 253, 70, 174, 221, 83, 72, 215, 158, 144, 103, 102, 90, 100, 91, 187, 234, 46, 175, 65, 124, 189, 96, 157, 135, 245, 6, 125, 237, 161, 119, 167, 92, 101, 199, 92, 159, 185, 132, 92, 119, 66, 165, 236, 220, 154, 95, 95, 116, 250, 149, 14, 40, 141, 45, 190, 235, 57, 143, 191, 231, 73, 98, 139, 163, 113, 68, 71, 196, 119, 44, 113, 49, 242, 10, 176, 129, 237, 79, 58, 8, 181, 151, 92, 159, 138, 181, 119, 204, 122, 72, 72, 124, 108, 222, 242, 222, 21, 115, 158, 150, 87, 6, 212, 49, 70, 108, 99, 244, 208, 243, 228, 120, 161, 14, 105, 114, 44, 170, 28, 219, 174, 227, 161, 245, 9, 57, 47, 79, 39, 91, 104, 43, 39, 70, 175, 178, 245, 168, 114, 253, 51, 70, 31, 223, 24, 33, 180, 77, 93, 249, 132, 30, 47, 210, 183, 108, 229, 87, 93, 142, 111, 236, 20, 34, 177, 249, 165, 210, 183, 108, 154, 148, 246, 108, 162, 92, 87, 91, 142, 130, 14, 117, 233, 209, 132, 52, 173, 219, 40, 244, 229, 24, 61, 38, 19, 235, 236, 179, 187, 28, 115, 150, 181, 95, 21, 246, 175, 67, 242, 202, 170, 195, 254, 117, 181, 115, 19, 253, 42, 69, 191, 41, 42, 41, 250, 87, 213, 58, 22, 121, 246, 226, 154, 135, 185, 242, 204, 91, 47, 116, 157, 95, 180, 14, 69, 230, 114, 182, 244, 82, 175, 186, 165, 78, 255, 169, 203, 63, 235, 180, 135, 77, 228, 218, 104, 25, 61, 138, 156, 151, 66, 242, 234, 91, 85, 59, 184, 242, 169, 187, 31, 196, 74, 83, 253, 186, 108, 157, 71, 193, 247, 82, 60, 199, 161, 124, 99, 211, 242, 117, 98, 190, 110, 108, 123, 15, 173, 99, 137, 171, 18, 190, 134, 78, 107, 248, 69, 109, 31, 122, 94, 213, 117, 136, 93, 175, 181, 189, 15, 88, 39, 250, 25, 173, 237, 91, 25, 23, 161, 223, 18, 150, 121, 126, 193, 197, 246, 44, 183, 8, 121, 122, 186, 198, 38, 46, 125, 109, 239, 56, 243, 103, 18, 177, 245, 15, 65, 62, 23, 149, 207, 74, 249, 115, 38, 106, 215, 24, 209, 250, 54, 249, 44, 88, 66, 207, 248, 92, 239, 12, 211, 115, 96, 253, 60, 110, 141, 129, 254, 21, 17, 11, 73, 209, 254, 234, 107, 111, 122, 239, 34, 181, 189, 66, 203, 176, 189, 95, 193, 159, 177, 83, 156, 124, 223, 58, 68, 120, 57, 235, 2, 116, 161, 190, 106, 59, 63, 196, 254, 178, 29, 171, 182, 33, 23, 126, 63, 209, 199, 232, 121, 98, 149, 126, 210, 99, 33, 181, 131, 108, 55, 215, 121, 116, 127, 166, 176, 78, 41, 98, 127, 221, 215, 120, 223, 235, 43, 251, 125, 147, 190, 1, 8, 17, 158, 191, 237, 155, 121, 254, 94, 224, 132, 201, 187, 238, 239, 158, 203, 136, 28, 207, 156, 95, 146, 208, 57, 188, 79, 66, 230, 252, 182, 99, 121, 105, 93, 229, 248, 210, 209, 220, 44, 197, 248, 218, 166, 71, 75, 249, 109, 102, 91, 151, 137, 41, 67, 198, 41, 101, 183, 117, 93, 34, 251, 159, 109, 205, 35, 239, 156, 50, 229, 165, 154, 59, 21, 145, 81, 153, 159, 151, 153, 195, 74, 29, 203, 206, 133, 155, 92, 147, 160, 242, 235, 166, 42, 73, 221, 167, 83, 231, 31, 98, 15, 125, 239, 148, 223, 124, 251, 190, 53, 161, 116, 244, 46, 88, 200, 120, 173, 170, 177, 88, 200, 125, 95, 207, 81, 102, 212, 153, 239, 242, 105, 201, 123, 55, 53, 100, 28, 17, 51, 119, 9, 145, 212, 254, 89, 149, 158, 203, 89, 7, 95, 153, 124, 206, 64, 255, 85, 73, 217, 95, 109, 243, 4, 215, 55, 84, 190, 127, 110, 230, 205, 171, 165, 108, 44, 73, 29, 227, 240, 11, 84, 243, 255, 66, 181, 253, 87, 79, 190, 211, 172, 109, 175, 175, 47, 182, 113, 51, 95, 227, 106, 66, 127, 87, 223, 242, 125, 219, 77, 199, 232, 187, 110, 21, 81, 70, 89, 127, 174, 178, 190, 178, 77, 234, 46, 223, 247, 79, 70, 159, 31, 235, 115, 207, 81, 195, 127, 28, 217, 252, 121, 70, 13, 219, 138, 215, 47, 198, 47, 109, 115, 188, 170, 109, 64, 101, 133, 74, 149, 101, 22, 109, 51, 249, 156, 67, 254, 247, 64, 183, 209, 42, 67, 222, 245, 54, 68, 71, 91, 186, 178, 182, 136, 57, 223, 231, 31, 85, 247, 133, 24, 180, 173, 125, 215, 95, 98, 70, 185, 199, 167, 101, 251, 40, 191, 255, 140, 250, 255, 158, 125, 105, 73, 248, 255, 239, 228, 218, 155, 252, 6, 167, 204, 255, 74, 149, 10, 123, 190, 33, 253, 142, 36, 244, 89, 81, 204, 179, 36, 95, 249, 69, 9, 185, 198, 211, 61, 150, 127, 139, 68, 223, 188, 83, 223, 162, 49, 4, 181, 85, 232, 61, 171, 108, 255, 78, 85, 119, 18, 219, 119, 254, 178, 206, 33, 115, 168, 162, 72, 157, 203, 254, 87, 220, 102, 3, 249, 47, 26, 215, 61, 158, 210, 241, 250, 247, 148, 253, 190, 17, 42, 117, 182, 63, 255, 71, 84, 222, 53, 153, 218, 182, 42, 253, 203, 194, 69, 63, 43, 211, 207, 205, 46, 84, 249, 255, 60, 146, 117, 43, 171, 191, 92, 155, 46, 43, 169, 230, 208, 41, 231, 227, 77, 205, 243, 201, 230, 190, 181, 193, 170, 218, 165, 168, 200, 181, 244, 208, 53, 226, 186, 215, 79, 235, 88, 67, 15, 201, 191, 174, 58, 143, 226, 122, 180, 77, 108, 101, 52, 213, 159, 171, 170, 119, 136, 61, 99, 108, 79, 219, 117, 172, 63, 142, 98, 191, 43, 155, 71, 138, 190, 159, 194, 135, 83, 248, 97, 234, 114, 203, 232, 86, 84, 63, 223, 249, 85, 151, 95, 149, 254, 77, 151, 95, 101, 159, 138, 45, 191, 73, 249, 47];\nvar trieData$2 = {\n  type: type$2,\n  data: data$2\n};\n\nvar _class$7;\n\nvar _temp$3;\n\nvar categories$1 = useData.categories;\nvar decompositions$2 = useData.decompositions;\nvar trie$2 = new UnicodeTrie(new Uint8Array(trieData$2.data));\nvar stateMachine$1 = new StateMachine(useData);\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\n\nvar UniversalShaper = (_temp$3 = _class$7 = function (_DefaultShaper) {\n  inherits(UniversalShaper, _DefaultShaper);\n\n  function UniversalShaper() {\n    classCallCheck(this, UniversalShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  UniversalShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables$1); // Default glyph pre-processing group\n\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']); // Reordering group\n\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref); // Orthographic unit shaping group\n\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder); // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n    // Standard topographic presentation and positional feature application\n\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  };\n\n  UniversalShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n\n      if (decompositions$2[codepoint]) {\n        var decomposed = decompositions$2[codepoint].map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    }; // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n\n\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return UniversalShaper;\n}(DefaultShaper), _class$7.zeroMarkWidths = 'BEFORE_GPOS', _temp$3);\n\nfunction useCategory(glyph) {\n  return trie$2.get(glyph.codePoints[0]);\n}\n\nvar USEInfo = function USEInfo(category, syllableType, syllable) {\n  classCallCheck(this, USEInfo);\n  this.category = category;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables$1(font, glyphs) {\n  var syllable = 0;\n\n  for (var _iterator = stateMachine$1.match(glyphs.map(useCategory)), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        start = _ref2[0],\n        end = _ref2[1],\n        tags = _ref2[2];\n    ++syllable; // Create shaper info\n\n    for (var i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories$1[useCategory(glyphs[i])], tags[0], syllable);\n    } // Assign rphf feature\n\n\n    var limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n\n    for (var _i2 = start; _i2 < start + limit; _i2++) {\n      glyphs[_i2].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _ref3;\n\n    if (_isArray2) {\n      if (_i3 >= _iterator2.length) break;\n      _ref3 = _iterator2[_i3++];\n    } else {\n      _i3 = _iterator2.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var glyph = _ref3;\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (var _iterator3 = glyphs, _isArray3 = Array.isArray(_iterator3), _i4 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n    var _ref4;\n\n    if (_isArray3) {\n      if (_i4 >= _iterator3.length) break;\n      _ref4 = _iterator3[_i4++];\n    } else {\n      _i4 = _iterator3.next();\n      if (_i4.done) break;\n      _ref4 = _i4.value;\n    }\n\n    var glyph = _ref4;\n\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (var _iterator4 = glyphs, _isArray4 = Array.isArray(_iterator4), _i5 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n    var _ref5;\n\n    if (_isArray4) {\n      if (_i5 >= _iterator4.length) break;\n      _ref5 = _iterator4[_i5++];\n    } else {\n      _i5 = _iterator4.next();\n      if (_i5.done) break;\n      _ref5 = _i5.value;\n    }\n\n    var glyph = _ref5;\n\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    var i = void 0,\n        j = void 0;\n    var info = glyphs[start].shaperInfo;\n    var type = info.syllableType; // Only a few syllable types need reordering.\n\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    } // Insert a dotted circle glyph in broken clusters.\n\n\n    if (type === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info; // Insert after possible Repha.\n\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++) {}\n\n      glyphs.splice(++i, 0, g);\n      end++;\n    } // Move things forward.\n\n\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, i - start), [glyphs[i]]));\n          break;\n        }\n      }\n    } // Move things back.\n\n\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice.apply(glyphs, [j, 1, glyphs[i]].concat(glyphs.splice(j, i - j)));\n      }\n    }\n  }\n}\n\nfunction nextSyllable$1(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n\nvar SHAPERS = {\n  arab: ArabicShaper,\n  // Arabic\n  mong: ArabicShaper,\n  // Mongolian\n  syrc: ArabicShaper,\n  // Syriac\n  'nko ': ArabicShaper,\n  // N'Ko\n  phag: ArabicShaper,\n  // Phags Pa\n  mand: ArabicShaper,\n  // Mandaic\n  mani: ArabicShaper,\n  // Manichaean\n  phlp: ArabicShaper,\n  // Psalter Pahlavi\n  hang: HangulShaper,\n  // Hangul\n  bng2: IndicShaper,\n  // Bengali\n  beng: IndicShaper,\n  // Bengali\n  dev2: IndicShaper,\n  // Devanagari\n  deva: IndicShaper,\n  // Devanagari\n  gjr2: IndicShaper,\n  // Gujarati\n  gujr: IndicShaper,\n  // Gujarati\n  guru: IndicShaper,\n  // Gurmukhi\n  gur2: IndicShaper,\n  // Gurmukhi\n  knda: IndicShaper,\n  // Kannada\n  knd2: IndicShaper,\n  // Kannada\n  mlm2: IndicShaper,\n  // Malayalam\n  mlym: IndicShaper,\n  // Malayalam\n  ory2: IndicShaper,\n  // Oriya\n  orya: IndicShaper,\n  // Oriya\n  taml: IndicShaper,\n  // Tamil\n  tml2: IndicShaper,\n  // Tamil\n  telu: IndicShaper,\n  // Telugu\n  tel2: IndicShaper,\n  // Telugu\n  khmr: IndicShaper,\n  // Khmer\n  bali: UniversalShaper,\n  // Balinese\n  batk: UniversalShaper,\n  // Batak\n  brah: UniversalShaper,\n  // Brahmi\n  bugi: UniversalShaper,\n  // Buginese\n  buhd: UniversalShaper,\n  // Buhid\n  cakm: UniversalShaper,\n  // Chakma\n  cham: UniversalShaper,\n  // Cham\n  dupl: UniversalShaper,\n  // Duployan\n  egyp: UniversalShaper,\n  // Egyptian Hieroglyphs\n  gran: UniversalShaper,\n  // Grantha\n  hano: UniversalShaper,\n  // Hanunoo\n  java: UniversalShaper,\n  // Javanese\n  kthi: UniversalShaper,\n  // Kaithi\n  kali: UniversalShaper,\n  // Kayah Li\n  khar: UniversalShaper,\n  // Kharoshthi\n  khoj: UniversalShaper,\n  // Khojki\n  sind: UniversalShaper,\n  // Khudawadi\n  lepc: UniversalShaper,\n  // Lepcha\n  limb: UniversalShaper,\n  // Limbu\n  mahj: UniversalShaper,\n  // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper,\n  // Meitei Mayek\n  modi: UniversalShaper,\n  // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper,\n  // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper,\n  // Rejang\n  saur: UniversalShaper,\n  // Saurashtra\n  shrd: UniversalShaper,\n  // Sharada\n  sidd: UniversalShaper,\n  // Siddham\n  sinh: UniversalShaper,\n  // Sinhala\n  sund: UniversalShaper,\n  // Sundanese\n  sylo: UniversalShaper,\n  // Syloti Nagri\n  tglg: UniversalShaper,\n  // Tagalog\n  tagb: UniversalShaper,\n  // Tagbanwa\n  tale: UniversalShaper,\n  // Tai Le\n  lana: UniversalShaper,\n  // Tai Tham\n  tavt: UniversalShaper,\n  // Tai Viet\n  takr: UniversalShaper,\n  // Takri\n  tibt: UniversalShaper,\n  // Tibetan\n  tfng: UniversalShaper,\n  // Tifinagh\n  tirh: UniversalShaper,\n  // Tirhuta\n  latn: DefaultShaper,\n  // Latin\n  DFLT: DefaultShaper // Default\n\n};\n\nfunction choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (var _iterator = script, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var s = _ref;\n    var shaper = SHAPERS[s];\n\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n\nvar GSUBProcessor = function (_OTProcessor) {\n  inherits(GSUBProcessor, _OTProcessor);\n\n  function GSUBProcessor() {\n    classCallCheck(this, GSUBProcessor);\n    return possibleConstructorReturn(this, _OTProcessor.apply(this, arguments));\n  }\n\n  GSUBProcessor.prototype.applyLookup = function applyLookup(lookupType, table) {\n    var _this2 = this;\n\n    switch (lookupType) {\n      case 1:\n        {\n          // Single Substitution\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          var glyph = this.glyphIterator.cur;\n\n          switch (table.version) {\n            case 1:\n              glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n              break;\n\n            case 2:\n              glyph.id = table.substitute.get(index);\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Multiple Substitution\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index !== -1) {\n            var _glyphs;\n\n            var sequence = table.sequences.get(_index);\n            this.glyphIterator.cur.id = sequence[0];\n            this.glyphIterator.cur.ligatureComponent = 0;\n            var features = this.glyphIterator.cur.features;\n            var curGlyph = this.glyphIterator.cur;\n            var replacement = sequence.slice(1).map(function (gid, i) {\n              var glyph = new GlyphInfo(_this2.font, gid, undefined, features);\n              glyph.shaperInfo = curGlyph.shaperInfo;\n              glyph.isLigated = curGlyph.isLigated;\n              glyph.ligatureComponent = i + 1;\n              glyph.substituted = true;\n              glyph.isMultiplied = true;\n              return glyph;\n            });\n\n            (_glyphs = this.glyphs).splice.apply(_glyphs, [this.glyphIterator.index + 1, 0].concat(replacement));\n\n            return true;\n          }\n\n          return false;\n        }\n\n      case 3:\n        {\n          // Alternate Substitution\n          var _index2 = this.coverageIndex(table.coverage);\n\n          if (_index2 !== -1) {\n            var USER_INDEX = 0; // TODO\n\n            this.glyphIterator.cur.id = table.alternateSet.get(_index2)[USER_INDEX];\n            return true;\n          }\n\n          return false;\n        }\n\n      case 4:\n        {\n          // Ligature Substitution\n          var _index3 = this.coverageIndex(table.coverage);\n\n          if (_index3 === -1) {\n            return false;\n          }\n\n          for (var _iterator = table.ligatureSets.get(_index3), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var ligature = _ref;\n            var matched = this.sequenceMatchIndices(1, ligature.components);\n\n            if (!matched) {\n              continue;\n            }\n\n            var _curGlyph = this.glyphIterator.cur; // Concatenate all of the characters the new ligature will represent\n\n            var characters = _curGlyph.codePoints.slice();\n\n            for (var _iterator2 = matched, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n              var _ref2;\n\n              if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref2 = _iterator2[_i2++];\n              } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref2 = _i2.value;\n              }\n\n              var _index4 = _ref2;\n              characters.push.apply(characters, this.glyphs[_index4].codePoints);\n            } // Create the replacement ligature glyph\n\n\n            var ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, _curGlyph.features, _curGlyph.stringIndex);\n            ligatureGlyph.shaperInfo = _curGlyph.shaperInfo;\n            ligatureGlyph.isLigated = true;\n            ligatureGlyph.substituted = true; // From Harfbuzz:\n            // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n            //   the ligature to keep its old ligature id.  This will allow it to attach to\n            //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n            //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n            //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n            //   later, we don't want them to lose their ligature id/component, otherwise\n            //   GPOS will fail to correctly position the mark ligature on top of the\n            //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n            //\n            // - If a ligature is formed of components that some of which are also ligatures\n            //   themselves, and those ligature components had marks attached to *their*\n            //   components, we have to attach the marks to the new ligature component\n            //   positions!  Now *that*'s tricky!  And these marks may be following the\n            //   last component of the whole sequence, so we should loop forward looking\n            //   for them and update them.\n            //\n            //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n            //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n            //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n            //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n            //   the new ligature with a component value of 2.\n            //\n            //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n\n            var isMarkLigature = _curGlyph.isMark;\n\n            for (var i = 0; i < matched.length && isMarkLigature; i++) {\n              isMarkLigature = this.glyphs[matched[i]].isMark;\n            }\n\n            ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n            var lastLigID = _curGlyph.ligatureID;\n            var lastNumComps = _curGlyph.codePoints.length;\n            var curComps = lastNumComps;\n            var idx = this.glyphIterator.index + 1; // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n            // This allows GPOS to attach marks to the correct ligature components.\n\n            for (var _iterator3 = matched, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n              var _ref3;\n\n              if (_isArray3) {\n                if (_i3 >= _iterator3.length) break;\n                _ref3 = _iterator3[_i3++];\n              } else {\n                _i3 = _iterator3.next();\n                if (_i3.done) break;\n                _ref3 = _i3.value;\n              }\n\n              var matchIndex = _ref3; // Don't assign new ligature components for mark ligatures (see above)\n\n              if (isMarkLigature) {\n                idx = matchIndex;\n              } else {\n                while (idx < matchIndex) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                  this.glyphs[idx].ligatureComponent = ligatureComponent;\n                  idx++;\n                }\n              }\n\n              lastLigID = this.glyphs[idx].ligatureID;\n              lastNumComps = this.glyphs[idx].codePoints.length;\n              curComps += lastNumComps;\n              idx++; // skip base glyph\n            } // Adjust ligature components for any marks following\n\n\n            if (lastLigID && !isMarkLigature) {\n              for (var _i4 = idx; _i4 < this.glyphs.length; _i4++) {\n                if (this.glyphs[_i4].ligatureID === lastLigID) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[_i4].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[_i4].ligatureComponent = ligatureComponent;\n                } else {\n                  break;\n                }\n              }\n            } // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n\n\n            for (var _i5 = matched.length - 1; _i5 >= 0; _i5--) {\n              this.glyphs.splice(matched[_i5], 1);\n            }\n\n            this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n            return true;\n          }\n\n          return false;\n        }\n\n      case 5:\n        // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6:\n        // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7:\n        // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error('GSUB lookupType ' + lookupType + ' is not supported');\n    }\n  };\n\n  return GSUBProcessor;\n}(OTProcessor);\n\nvar GPOSProcessor = function (_OTProcessor) {\n  inherits(GPOSProcessor, _OTProcessor);\n\n  function GPOSProcessor() {\n    classCallCheck(this, GPOSProcessor);\n    return possibleConstructorReturn(this, _OTProcessor.apply(this, arguments));\n  }\n\n  GPOSProcessor.prototype.applyPositionValue = function applyPositionValue(sequenceIndex, value) {\n    var position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    } // Adjustments for font variations\n\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    } // TODO: device tables\n\n  };\n\n  GPOSProcessor.prototype.applyLookup = function applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          // Single positioning value\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              this.applyPositionValue(0, table.value);\n              break;\n\n            case 2:\n              this.applyPositionValue(0, table.values.get(index));\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Pair Adjustment Positioning\n          var nextGlyph = this.glyphIterator.peek();\n\n          if (!nextGlyph) {\n            return false;\n          }\n\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              // Adjustments for glyph pairs\n              var set$$1 = table.pairSets.get(_index);\n\n              for (var _iterator = set$$1, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                var _ref;\n\n                if (_isArray) {\n                  if (_i >= _iterator.length) break;\n                  _ref = _iterator[_i++];\n                } else {\n                  _i = _iterator.next();\n                  if (_i.done) break;\n                  _ref = _i.value;\n                }\n\n                var _pair = _ref;\n\n                if (_pair.secondGlyph === nextGlyph.id) {\n                  this.applyPositionValue(0, _pair.value1);\n                  this.applyPositionValue(1, _pair.value2);\n                  return true;\n                }\n              }\n\n              return false;\n\n            case 2:\n              // Class pair adjustment\n              var class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n              var class2 = this.getClassID(nextGlyph.id, table.classDef2);\n\n              if (class1 === -1 || class2 === -1) {\n                return false;\n              }\n\n              var pair = table.classRecords.get(class1).get(class2);\n              this.applyPositionValue(0, pair.value1);\n              this.applyPositionValue(1, pair.value2);\n              return true;\n          }\n        }\n\n      case 3:\n        {\n          // Cursive Attachment Positioning\n          var nextIndex = this.glyphIterator.peekIndex();\n          var _nextGlyph = this.glyphs[nextIndex];\n\n          if (!_nextGlyph) {\n            return false;\n          }\n\n          var curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n\n          if (!curRecord || !curRecord.exitAnchor) {\n            return false;\n          }\n\n          var nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, _nextGlyph.id)];\n\n          if (!nextRecord || !nextRecord.entryAnchor) {\n            return false;\n          }\n\n          var entry = this.getAnchor(nextRecord.entryAnchor);\n          var exit = this.getAnchor(curRecord.exitAnchor);\n          var cur = this.positions[this.glyphIterator.index];\n          var next = this.positions[nextIndex];\n\n          switch (this.direction) {\n            case 'ltr':\n              cur.xAdvance = exit.x + cur.xOffset;\n              var d = entry.x + next.xOffset;\n              next.xAdvance -= d;\n              next.xOffset -= d;\n              break;\n\n            case 'rtl':\n              d = exit.x + cur.xOffset;\n              cur.xAdvance -= d;\n              cur.xOffset -= d;\n              next.xAdvance = entry.x + next.xOffset;\n              break;\n          }\n\n          if (this.glyphIterator.flags.rightToLeft) {\n            this.glyphIterator.cur.cursiveAttachment = nextIndex;\n            cur.yOffset = entry.y - exit.y;\n          } else {\n            _nextGlyph.cursiveAttachment = this.glyphIterator.index;\n            cur.yOffset = exit.y - entry.y;\n          }\n\n          return true;\n        }\n\n      case 4:\n        {\n          // Mark to base positioning\n          var markIndex = this.coverageIndex(table.markCoverage);\n\n          if (markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n\n          var baseGlyphIndex = this.glyphIterator.index;\n\n          while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0)) {}\n\n          if (baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n\n          if (baseIndex === -1) {\n            return false;\n          }\n\n          var markRecord = table.markArray[markIndex];\n          var baseAnchor = table.baseArray[baseIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n\n      case 5:\n        {\n          // Mark to ligature positioning\n          var _markIndex = this.coverageIndex(table.markCoverage);\n\n          if (_markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n\n          var _baseGlyphIndex = this.glyphIterator.index;\n\n          while (--_baseGlyphIndex >= 0 && this.glyphs[_baseGlyphIndex].isMark) {}\n\n          if (_baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[_baseGlyphIndex].id);\n\n          if (ligIndex === -1) {\n            return false;\n          }\n\n          var ligAttach = table.ligatureArray[ligIndex];\n          var markGlyph = this.glyphIterator.cur;\n          var ligGlyph = this.glyphs[_baseGlyphIndex];\n          var compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n          var _markRecord = table.markArray[_markIndex];\n          var _baseAnchor = ligAttach[compIndex][_markRecord.class];\n          this.applyAnchor(_markRecord, _baseAnchor, _baseGlyphIndex);\n          return true;\n        }\n\n      case 6:\n        {\n          // Mark to mark positioning\n          var mark1Index = this.coverageIndex(table.mark1Coverage);\n\n          if (mark1Index === -1) {\n            return false;\n          } // get the previous mark to attach to\n\n\n          var prevIndex = this.glyphIterator.peekIndex(-1);\n          var prev = this.glyphs[prevIndex];\n\n          if (!prev || !prev.isMark) {\n            return false;\n          }\n\n          var _cur = this.glyphIterator.cur; // The following logic was borrowed from Harfbuzz\n\n          var good = false;\n\n          if (_cur.ligatureID === prev.ligatureID) {\n            if (!_cur.ligatureID) {\n              // Marks belonging to the same base\n              good = true;\n            } else if (_cur.ligatureComponent === prev.ligatureComponent) {\n              // Marks belonging to the same ligature component\n              good = true;\n            }\n          } else {\n            // If ligature ids don't match, it may be the case that one of the marks\n            // itself is a ligature, in which case match.\n            if (_cur.ligatureID && !_cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) {\n              good = true;\n            }\n          }\n\n          if (!good) {\n            return false;\n          }\n\n          var mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n\n          if (mark2Index === -1) {\n            return false;\n          }\n\n          var _markRecord2 = table.mark1Array[mark1Index];\n          var _baseAnchor2 = table.mark2Array[mark2Index][_markRecord2.class];\n          this.applyAnchor(_markRecord2, _baseAnchor2, prevIndex);\n          return true;\n        }\n\n      case 7:\n        // Contextual positioning\n        return this.applyContext(table);\n\n      case 8:\n        // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9:\n        // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error('Unsupported GPOS table: ' + lookupType);\n    }\n  };\n\n  GPOSProcessor.prototype.applyAnchor = function applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    var baseCoords = this.getAnchor(baseAnchor);\n    var markCoords = this.getAnchor(markRecord.markAnchor);\n    var basePos = this.positions[baseGlyphIndex];\n    var markPos = this.positions[this.glyphIterator.index];\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  };\n\n  GPOSProcessor.prototype.getAnchor = function getAnchor(anchor) {\n    // TODO: contour point, device tables\n    var x = anchor.xCoordinate;\n    var y = anchor.yCoordinate; // Adjustments for font variations\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  GPOSProcessor.prototype.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    _OTProcessor.prototype.applyFeatures.call(this, userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  };\n\n  GPOSProcessor.prototype.fixCursiveAttachment = function fixCursiveAttachment(i) {\n    var glyph = this.glyphs[i];\n\n    if (glyph.cursiveAttachment != null) {\n      var j = glyph.cursiveAttachment;\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  };\n\n  GPOSProcessor.prototype.fixMarkAttachment = function fixMarkAttachment() {\n    for (var i = 0; i < this.glyphs.length; i++) {\n      var glyph = this.glyphs[i];\n\n      if (glyph.markAttachment != null) {\n        var j = glyph.markAttachment;\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (var k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (var _k = j + 1; _k < i + 1; _k++) {\n            this.positions[i].xOffset += this.positions[_k].xAdvance;\n            this.positions[i].yOffset += this.positions[_k].yAdvance;\n          }\n        }\n      }\n    }\n  };\n\n  return GPOSProcessor;\n}(OTProcessor);\n\nvar OTLayoutEngine = function () {\n  function OTLayoutEngine(font) {\n    classCallCheck(this, OTLayoutEngine);\n    this.font = font;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  OTLayoutEngine.prototype.setup = function setup(glyphRun) {\n    // Select a script based on what is available in GSUB/GPOS.\n    var script = null;\n\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    } // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n\n\n    this.shaper = choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, glyphRun.glyphs, glyphRun.features); // Assign chosen features to output glyph run\n\n    for (var key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  };\n\n  OTLayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, glyphRun.glyphs);\n    }\n  };\n\n  OTLayoutEngine.prototype.position = function position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, glyphRun.glyphs, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun);\n    } // Reverse the glyphs and positions if the script is right-to-left\n\n\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  };\n\n  OTLayoutEngine.prototype.zeroMarkAdvances = function zeroMarkAdvances(glyphRun) {\n    for (var i = 0; i < glyphRun.glyphs; i++) {\n      if (glyphRun.glyphs[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  OTLayoutEngine.prototype.cleanup = function cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  };\n\n  OTLayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  };\n\n  return OTLayoutEngine;\n}();\n\nvar LayoutEngine = function () {\n  function LayoutEngine(font) {\n    classCallCheck(this, LayoutEngine);\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null; // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  LayoutEngine.prototype.layout = function layout(string, features, script, language, direction$$1) {\n    var _this = this; // Make the features parameter optional\n\n\n    if (typeof features === 'string') {\n      direction$$1 = language;\n      language = script;\n      script = features;\n      features = [];\n    } // Attempt to detect the script from the string if not provided.\n\n\n    if (script == null) {\n      script = forString(string);\n    }\n\n    var glyphs = this.glyphsForString(string);\n    var glyphRun = new GlyphRun(glyphs, features, script, language, direction$$1); // Return early if there are no glyphs\n\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    } // Setup the advanced layout engine\n\n\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    } // Substitute and position the glyphs\n\n\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions); // Let the layout engine clean up any state it might have\n\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    } // Map glyph infos back to normal Glyph objects\n\n\n    glyphRun.stringIndices = glyphRun.glyphs.map(function (glyphInfo) {\n      return glyphInfo.stringIndex;\n    });\n    glyphRun.glyphs = glyphRun.glyphs.map(function (glyphInfo) {\n      return _this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints);\n    });\n    return glyphRun;\n  };\n\n  LayoutEngine.prototype.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n      var stringIndex = idx - 1;\n\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        } // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n\n\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(new GlyphInfo(this.font, this.font._cmapProcessor.lookup(last, code), [last, code], null, stringIndex));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(new GlyphInfo(this.font, this.font._cmapProcessor.lookup(last), [last], null, stringIndex));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  };\n\n  LayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  };\n\n  LayoutEngine.prototype.position = function position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphPosition(glyph.advanceWidth);\n    });\n    var positioned = null; // Call the advanced layout engine. Returns the features applied.\n\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    } // if there is no GPOS table, use unicode properties to position marks.\n\n\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    } // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n\n\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  };\n\n  LayoutEngine.prototype.hideDefaultIgnorables = function hideDefaultIgnorables(glyphs, positions) {\n    var space = this.font.glyphForCodePoint(0x20);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  LayoutEngine.prototype.isDefaultIgnorable = function isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    var plane = ch >> 16;\n\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n        case 0x00:\n          return ch === 0x00ad;\n\n        case 0x03:\n          return ch === 0x034f;\n\n        case 0x06:\n          return ch === 0x061c;\n\n        case 0x17:\n          return 0x17b4 <= ch && ch <= 0x17b5;\n\n        case 0x18:\n          return 0x180b <= ch && ch <= 0x180e;\n\n        case 0x20:\n          return 0x200b <= ch && ch <= 0x200f || 0x202a <= ch && ch <= 0x202e || 0x2060 <= ch && ch <= 0x206f;\n\n        case 0xfe:\n          return 0xfe00 <= ch && ch <= 0xfe0f || ch === 0xfeff;\n\n        case 0xff:\n          return 0xfff0 <= ch && ch <= 0xfff8;\n\n        default:\n          return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n        case 0x01:\n          return 0x1bca0 <= ch && ch <= 0x1bca3 || 0x1d173 <= ch && ch <= 0x1d17a;\n\n        case 0x0e:\n          return 0xe0000 <= ch && ch <= 0xe0fff;\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  LayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.engine) {\n      features.push.apply(features, this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  };\n\n  LayoutEngine.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    var result = new Set();\n\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n\n    for (var _iterator = codePoints, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var codePoint = _ref;\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (var _iterator2 = this.engine.stringsForGlyph(gid), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var string = _ref2;\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  };\n\n  return LayoutEngine;\n}();\n\nvar SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\n\nvar Path = function () {\n  function Path() {\n    classCallCheck(this, Path);\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n\n\n  Path.prototype.toFunction = function toFunction() {\n    var cmds = this.commands.map(function (c) {\n      return '  ctx.' + c.command + '(' + c.args.join(', ') + ');';\n    });\n    return new Function('ctx', cmds.join('\\n'));\n  };\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n\n\n  Path.prototype.toSVG = function toSVG() {\n    var cmds = this.commands.map(function (c) {\n      var args = c.args.map(function (arg) {\n        return Math.round(arg * 100) / 100;\n      });\n      return '' + SVG_COMMANDS[c.command] + args.join(' ');\n    });\n    return cmds.join('');\n  };\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n\n\n  Path.prototype.mapPoints = function mapPoints(fn) {\n    var path = new Path();\n\n    for (var _iterator = this.commands, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var c = _ref;\n      var args = [];\n\n      for (var _i2 = 0; _i2 < c.args.length; _i2 += 2) {\n        var _fn = fn(c.args[_i2], c.args[_i2 + 1]),\n            x = _fn[0],\n            y = _fn[1];\n\n        args.push(x, y);\n      }\n\n      path[c.command].apply(path, args);\n    }\n\n    return path;\n  };\n  /**\n   * Transforms the path by the given matrix.\n   */\n\n\n  Path.prototype.transform = function transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints(function (x, y) {\n      x = m0 * x + m2 * y + m4;\n      y = m1 * x + m3 * y + m5;\n      return [x, y];\n    });\n  };\n  /**\n   * Translates the path by the given offset.\n   */\n\n\n  Path.prototype.translate = function translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  };\n  /**\n   * Rotates the path by the given angle (in radians).\n   */\n\n\n  Path.prototype.rotate = function rotate(angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  };\n  /**\n   * Scales the path.\n   */\n\n\n  Path.prototype.scale = function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  };\n\n  createClass(Path, [{\n    key: 'cbox',\n    get: function get$$1() {\n      if (!this._cbox) {\n        var cbox = new BBox();\n\n        for (var _iterator2 = this.commands, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i3 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i3++];\n          } else {\n            _i3 = _iterator2.next();\n            if (_i3.done) break;\n            _ref2 = _i3.value;\n          }\n\n          var command = _ref2;\n\n          for (var _i4 = 0; _i4 < command.args.length; _i4 += 2) {\n            cbox.addPoint(command.args[_i4], command.args[_i4 + 1]);\n          }\n        }\n\n        this._cbox = Object.freeze(cbox);\n      }\n\n      return this._cbox;\n    }\n    /**\n     * Gets the exact bounding box of the path by evaluating curve segments.\n     * Slower to compute than the control box, but more accurate.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      if (this._bbox) {\n        return this._bbox;\n      }\n\n      var bbox = new BBox();\n      var cx = 0,\n          cy = 0;\n\n      var f = function f(t) {\n        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n      };\n\n      for (var _iterator3 = this.commands, _isArray3 = Array.isArray(_iterator3), _i5 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i5 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i5++];\n        } else {\n          _i5 = _iterator3.next();\n          if (_i5.done) break;\n          _ref3 = _i5.value;\n        }\n\n        var c = _ref3;\n\n        switch (c.command) {\n          case 'moveTo':\n          case 'lineTo':\n            var _c$args = c.args,\n                x = _c$args[0],\n                y = _c$args[1];\n            bbox.addPoint(x, y);\n            cx = x;\n            cy = y;\n            break;\n\n          case 'quadraticCurveTo':\n          case 'bezierCurveTo':\n            if (c.command === 'quadraticCurveTo') {\n              // http://fontforge.org/bezier.html\n              var _c$args2 = c.args,\n                  qp1x = _c$args2[0],\n                  qp1y = _c$args2[1],\n                  p3x = _c$args2[2],\n                  p3y = _c$args2[3];\n              var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n\n              var cp1y = cy + 2 / 3 * (qp1y - cy);\n              var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n\n              var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n            } else {\n              var _c$args3 = c.args,\n                  cp1x = _c$args3[0],\n                  cp1y = _c$args3[1],\n                  cp2x = _c$args3[2],\n                  cp2y = _c$args3[3],\n                  p3x = _c$args3[4],\n                  p3y = _c$args3[5];\n            } // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\n\n            bbox.addPoint(p3x, p3y);\n            var p0 = [cx, cy];\n            var p1 = [cp1x, cp1y];\n            var p2 = [cp2x, cp2y];\n            var p3 = [p3x, p3y];\n\n            for (var i = 0; i <= 1; i++) {\n              var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n              var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n              c = 3 * p1[i] - 3 * p0[i];\n\n              if (a === 0) {\n                if (b === 0) {\n                  continue;\n                }\n\n                var t = -c / b;\n\n                if (0 < t && t < 1) {\n                  if (i === 0) {\n                    bbox.addPoint(f(t), bbox.maxY);\n                  } else if (i === 1) {\n                    bbox.addPoint(bbox.maxX, f(t));\n                  }\n                }\n\n                continue;\n              }\n\n              var b2ac = Math.pow(b, 2) - 4 * c * a;\n\n              if (b2ac < 0) {\n                continue;\n              }\n\n              var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t1 && t1 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t1), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t1));\n                }\n              }\n\n              var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t2 && t2 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t2), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t2));\n                }\n              }\n            }\n\n            cx = p3x;\n            cy = p3y;\n            break;\n        }\n      }\n\n      return this._bbox = Object.freeze(bbox);\n    }\n  }]);\n  return Path;\n}();\n\nvar _arr = ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath'];\n\nvar _loop = function _loop() {\n  var command = _arr[_i6];\n\n  Path.prototype[command] = function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._bbox = this._cbox = null;\n    this.commands.push({\n      command: command,\n      args: args\n    });\n    return this;\n  };\n};\n\nfor (var _i6 = 0; _i6 < _arr.length; _i6++) {\n  _loop();\n}\n\nvar StandardNames = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\nvar _class$8;\n\nfunction _applyDecoratedDescriptor$4(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\n\n\nvar Glyph = (_class$8 = function () {\n  function Glyph(id, codePoints, font) {\n    classCallCheck(this, Glyph);\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n\n    this.id = id;\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n\n    this.codePoints = codePoints;\n    this._font = font; // TODO: get this info from GDEF if available\n\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  Glyph.prototype._getPath = function _getPath() {\n    return new Path();\n  };\n\n  Glyph.prototype._getCBox = function _getCBox() {\n    return this.path.cbox;\n  };\n\n  Glyph.prototype._getBBox = function _getBBox() {\n    return this.path.bbox;\n  };\n\n  Glyph.prototype._getTableMetrics = function _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    var metric = table.metrics.get(table.metrics.length - 1);\n    var res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n    return res;\n  };\n\n  Glyph.prototype._getMetrics = function _getMetrics(cbox) {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var _getTableMetrics2 = this._getTableMetrics(this._font.hmtx),\n        advanceWidth = _getTableMetrics2.advance,\n        leftBearing = _getTableMetrics2.bearing; // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n\n\n    if (this._font.vmtx) {\n      var _getTableMetrics3 = this._getTableMetrics(this._font.vmtx),\n          advanceHeight = _getTableMetrics3.advance,\n          topBearing = _getTableMetrics3.bearing;\n    } else {\n      var os2 = void 0;\n\n      if (typeof cbox === 'undefined' || cbox === null) {\n        cbox = this.cbox;\n      }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n      } else {\n        var hhea = this._font.hhea;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = {\n      advanceWidth: advanceWidth,\n      advanceHeight: advanceHeight,\n      leftBearing: leftBearing,\n      topBearing: topBearing\n    };\n  };\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n\n\n  Glyph.prototype.getScaledPath = function getScaledPath(size) {\n    var scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  };\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n\n\n  Glyph.prototype._getName = function _getName() {\n    var post = this._font.post;\n\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        var id = post.glyphNameIndex[this.id];\n\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  };\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n\n\n  Glyph.prototype.render = function render(ctx, size) {\n    ctx.save();\n    var scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n    var fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n    ctx.restore();\n  };\n\n  createClass(Glyph, [{\n    key: 'cbox',\n    get: function get$$1() {\n      return this._getCBox();\n    }\n    /**\n     * The glyph’s bounding box, i.e. the rectangle that encloses the\n     * glyph outline as tightly as possible.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      return this._getBBox();\n    }\n    /**\n     * A vector Path object representing the glyph outline.\n     * @type {Path}\n     */\n\n  }, {\n    key: 'path',\n    get: function get$$1() {\n      // Cache the path so we only decode it once\n      // Decoding is actually performed by subclasses\n      return this._getPath();\n    }\n  }, {\n    key: 'advanceWidth',\n    get: function get$$1() {\n      return this._getMetrics().advanceWidth;\n    }\n    /**\n     * The glyph's advance height.\n     * @type {number}\n     */\n\n  }, {\n    key: 'advanceHeight',\n    get: function get$$1() {\n      return this._getMetrics().advanceHeight;\n    }\n  }, {\n    key: 'ligatureCaretPositions',\n    get: function get$$1() {}\n  }, {\n    key: 'name',\n    get: function get$$1() {\n      return this._getName();\n    }\n  }]);\n  return Glyph;\n}(), _applyDecoratedDescriptor$4(_class$8.prototype, 'cbox', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'cbox'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'bbox', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'bbox'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'path', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'path'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'advanceWidth', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'advanceWidth'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'advanceHeight', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'advanceHeight'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'name', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'name'), _class$8.prototype), _class$8); // The header for both simple and composite glyphs\n\nvar GlyfHeader = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16\n}); // Flags for simple glyphs\n\nvar ON_CURVE = 1 << 0;\nvar X_SHORT_VECTOR = 1 << 1;\nvar Y_SHORT_VECTOR = 1 << 2;\nvar REPEAT = 1 << 3;\nvar SAME_X = 1 << 4;\nvar SAME_Y = 1 << 5; // Flags for composite glyphs\n\nvar ARG_1_AND_2_ARE_WORDS = 1 << 0;\nvar WE_HAVE_A_SCALE = 1 << 3;\nvar MORE_COMPONENTS = 1 << 5;\nvar WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;\nvar WE_HAVE_A_TWO_BY_TWO = 1 << 7;\nvar WE_HAVE_INSTRUCTIONS = 1 << 8; // Represents a point in a simple glyph\n\nvar Point = function () {\n  function Point(onCurve, endContour) {\n    var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    classCallCheck(this, Point);\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype.copy = function copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  };\n\n  return Point;\n}(); // Represents a component in a composite glyph\n\n\nvar Component = function Component(glyphID, dx, dy) {\n  classCallCheck(this, Component);\n  this.glyphID = glyphID;\n  this.dx = dx;\n  this.dy = dy;\n  this.pos = 0;\n  this.scaleX = this.scaleY = 1;\n  this.scale01 = this.scale10 = 0;\n};\n/**\n * Represents a TrueType glyph.\n */\n\n\nvar TTFGlyph = function (_Glyph) {\n  inherits(TTFGlyph, _Glyph);\n\n  function TTFGlyph() {\n    classCallCheck(this, TTFGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  } // Parses just the glyph header and returns the bounding box\n\n\n  TTFGlyph.prototype._getCBox = function _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += this._font.loca.offsets[this.id];\n    var glyph = GlyfHeader.decode(stream);\n    var cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  }; // Parses a single glyph coordinate\n\n\n  TTFGlyph.prototype._parseGlyphCoord = function _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  }; // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n\n\n  TTFGlyph.prototype._decode = function _decode() {\n    var glyfPos = this._font.loca.offsets[this.id];\n    var nextPos = this._font.loca.offsets[this.id + 1]; // Nothing to do if there is no data for this glyph\n\n    if (glyfPos === nextPos) {\n      return null;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += glyfPos;\n    var startPos = stream.pos;\n    var glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  };\n\n  TTFGlyph.prototype._decodeSimple = function _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n    var endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n    var flags = [];\n    var numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag); // check for repeat flag\n\n      if (flag & REPEAT) {\n        var count = stream.readUInt8();\n\n        for (var j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      var point = new Point(!!(flag & ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    var px = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR, flag & SAME_X);\n    }\n\n    var py = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR, flag & SAME_Y);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = glyph.points.slice();\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  };\n\n  TTFGlyph.prototype._decodeComposite = function _decodeComposite(glyph, stream) {\n    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0; // this is a composite glyph\n\n    glyph.components = [];\n    var haveInstructions = false;\n    var flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      var gPos = stream.pos - offset;\n      var glyphID = stream.readUInt16BE();\n\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = [];\n\n      for (var j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point(true, true, component.dx, component.dy));\n      }\n\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  };\n\n  TTFGlyph.prototype._getPhantomPoints = function _getPhantomPoints(glyph) {\n    var cbox = this._getCBox(true);\n\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    var _metrics = this._metrics,\n        advanceWidth = _metrics.advanceWidth,\n        advanceHeight = _metrics.advanceHeight,\n        leftBearing = _metrics.leftBearing,\n        topBearing = _metrics.topBearing;\n    return [new Point(false, true, glyph.xMin - leftBearing, 0), new Point(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new Point(false, true, 0, glyph.yMax + topBearing), new Point(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n  }; // Decodes font data, resolves composite glyphs, and returns an array of contours\n\n\n  TTFGlyph.prototype._getContours = function _getContours() {\n    var glyph = this._decode();\n\n    if (!glyph) {\n      return [];\n    }\n\n    var points = [];\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (var _iterator = glyph.components, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var component = _ref;\n\n        var _contours = this._font.getGlyph(component.glyphID)._getContours();\n\n        for (var i = 0; i < _contours.length; i++) {\n          var contour = _contours[i];\n\n          for (var j = 0; j < contour.length; j++) {\n            var _point = contour[j];\n            var x = _point.x * component.scaleX + _point.y * component.scale01 + component.dx;\n            var y = _point.y * component.scaleY + _point.x * component.scale10 + component.dy;\n            points.push(new Point(_point.onCurve, _point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    } // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n\n\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    var contours = [];\n    var cur = [];\n\n    for (var k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  };\n\n  TTFGlyph.prototype._getMetrics = function _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var cbox = this._getCBox(true);\n\n    _Glyph.prototype._getMetrics.call(this, cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n\n    return this._metrics;\n  }; // Converts contours to a Path object that can be rendered\n\n\n  TTFGlyph.prototype._getPath = function _getPath() {\n    var contours = this._getContours();\n\n    var path = new Path();\n\n    for (var i = 0; i < contours.length; i++) {\n      var contour = contours[i];\n      var firstPt = contour[0];\n      var lastPt = contour[contour.length - 1];\n      var start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (var j = start; j < contour.length; j++) {\n        var pt = contour[j];\n        var prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          var midX = (prevPt.x + pt.x) / 2;\n          var midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      } // Connect the first and last points\n\n\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return TTFGlyph;\n}(Glyph);\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\n\n\nvar CFFGlyph = function (_Glyph) {\n  inherits(CFFGlyph, _Glyph);\n\n  function CFFGlyph() {\n    classCallCheck(this, CFFGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  CFFGlyph.prototype._getName = function _getName() {\n    if (this._font.CFF2) {\n      return _Glyph.prototype._getName.call(this);\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  };\n\n  CFFGlyph.prototype.bias = function bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  };\n\n  CFFGlyph.prototype._getPath = function _getPath() {\n    var stream = this._font.stream;\n    var pos = stream.pos;\n    var cff = this._font.CFF2 || this._font['CFF '];\n    var str = cff.topDict.CharStrings[this.id];\n    var end = str.offset + str.length;\n    stream.pos = str.offset;\n    var path = new Path();\n    var stack = [];\n    var trans = [];\n    var width = null;\n    var nStems = 0;\n    var x = 0,\n        y = 0;\n    var usedGsubrs = void 0;\n    var usedSubrs = void 0;\n    var open = false;\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n    var gsubrs = cff.globalSubrIndex || [];\n    var gsubrsBias = this.bias(gsubrs);\n    var privateDict = cff.privateDictForGlyph(this.id);\n    var subrs = privateDict.Subrs || [];\n    var subrsBias = this.bias(subrs);\n    var vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    var vsindex = privateDict.vsindex;\n    var variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    var parse = function parse() {\n      while (stream.pos < end) {\n        var op = stream.readUInt8();\n\n        if (op < 32) {\n          switch (op) {\n            case 1: // hstem\n\n            case 3: // vstem\n\n            case 18: // hstemhm\n\n            case 23:\n              // vstemhm\n              parseStems();\n              break;\n\n            case 4:\n              // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5:\n              // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              break;\n\n            case 6: // hlineto\n\n            case 7:\n              // vlineto\n              var phase = op === 6;\n\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n\n              break;\n\n            case 8:\n              // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 10:\n              // callsubr\n              var index = stack.pop() + subrsBias;\n              var subr = subrs[index];\n\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 11:\n              // return\n              if (cff.version >= 2) {\n                break;\n              }\n\n              return;\n\n            case 14:\n              // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n\n              break;\n\n            case 15:\n              {\n                // vsindex\n                if (cff.version < 2) {\n                  throw new Error('vsindex operator not supported in CFF v1');\n                }\n\n                vsindex = stack.pop();\n                break;\n              }\n\n            case 16:\n              {\n                // blend\n                if (cff.version < 2) {\n                  throw new Error('blend operator not supported in CFF v1');\n                }\n\n                if (!variationProcessor) {\n                  throw new Error('blend operator in non-variation font');\n                }\n\n                var blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                var numBlends = stack.pop();\n                var numOperands = numBlends * blendVector.length;\n                var delta = stack.length - numOperands;\n                var base = delta - numBlends;\n\n                for (var i = 0; i < numBlends; i++) {\n                  var sum = stack[base + i];\n\n                  for (var j = 0; j < blendVector.length; j++) {\n                    sum += blendVector[j] * stack[delta++];\n                  }\n\n                  stack[base + i] = sum;\n                }\n\n                while (numOperands--) {\n                  stack.pop();\n                }\n\n                break;\n              }\n\n            case 19: // hintmask\n\n            case 20:\n              // cntrmask\n              parseStems();\n              stream.pos += nStems + 7 >> 3;\n              break;\n\n            case 21:\n              // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22:\n              // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24:\n              // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25:\n              // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26:\n              // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 27:\n              // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 28:\n              // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29:\n              // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 30: // vhcurveto\n\n            case 31:\n              // hvcurveto\n              phase = op === 31;\n\n              while (stack.length >= 4) {\n                if (phase) {\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  y = c2y + stack.shift();\n                  x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                } else {\n                  c1x = x;\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x = c2x + stack.shift();\n                  y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                }\n\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                phase = !phase;\n              }\n\n              break;\n\n            case 12:\n              op = stream.readUInt8();\n\n              switch (op) {\n                case 3:\n                  // and\n                  var a = stack.pop();\n                  var b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4:\n                  // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5:\n                  // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9:\n                  // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10:\n                  // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11:\n                  // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12:\n                  // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14:\n                  // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15:\n                  // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18:\n                  // drop\n                  stack.pop();\n                  break;\n\n                case 20:\n                  // put\n                  var val = stack.pop();\n                  var idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21:\n                  // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22:\n                  // ifelse\n                  var s1 = stack.pop();\n                  var s2 = stack.pop();\n                  var v1 = stack.pop();\n                  var v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23:\n                  // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24:\n                  // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26:\n                  // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27:\n                  // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28:\n                  // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29:\n                  // index\n                  idx = stack.pop();\n\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30:\n                  // roll\n                  var n = stack.pop();\n\n                  var _j = stack.pop();\n\n                  if (_j >= 0) {\n                    while (_j > 0) {\n                      var t = stack[n - 1];\n\n                      for (var _i = n - 2; _i >= 0; _i--) {\n                        stack[_i + 1] = stack[_i];\n                      }\n\n                      stack[0] = t;\n                      _j--;\n                    }\n                  } else {\n                    while (_j < 0) {\n                      var t = stack[0];\n\n                      for (var _i2 = 0; _i2 <= n; _i2++) {\n                        stack[_i2] = stack[_i2 + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      _j++;\n                    }\n                  }\n\n                  break;\n\n                case 34:\n                  // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  var c3x = c2x + stack.shift();\n                  var c3y = c2y;\n                  var c4x = c3x + stack.shift();\n                  var c4y = c3y;\n                  var c5x = c4x + stack.shift();\n                  var c5y = c4y;\n                  var c6x = c5x + stack.shift();\n                  var c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35:\n                  // flex\n                  var pts = [];\n\n                  for (var _i3 = 0; _i3 <= 5; _i3++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  stack.shift(); // fd\n\n                  break;\n\n                case 36:\n                  // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37:\n                  // flex1\n                  var startx = x;\n                  var starty = y;\n                  pts = [];\n\n                  for (var _i4 = 0; _i4 <= 4; _i4++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) {\n                    // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error('Unknown op: 12 ' + op);\n              }\n\n              break;\n\n            default:\n              throw new Error('Unknown op: ' + op);\n          }\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return CFFGlyph;\n}(Glyph);\n\nvar SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(function (t) {\n    return t.parent.buflen - t._currentOffset;\n  })\n});\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\n\nvar SBIXGlyph = function (_TTFGlyph) {\n  inherits(SBIXGlyph, _TTFGlyph);\n\n  function SBIXGlyph() {\n    classCallCheck(this, SBIXGlyph);\n    return possibleConstructorReturn(this, _TTFGlyph.apply(this, arguments));\n  }\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n\n\n  SBIXGlyph.prototype.getImageForSize = function getImageForSize(size) {\n    for (var i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n\n      if (table.ppem >= size) {\n        break;\n      }\n    }\n\n    var offsets = table.imageOffsets;\n    var start = offsets[this.id];\n    var end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, {\n      buflen: end - start\n    });\n  };\n\n  SBIXGlyph.prototype.render = function render(ctx, size) {\n    var img = this.getImageForSize(size);\n\n    if (img != null) {\n      var scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {\n        height: size,\n        x: img.originX,\n        y: (this.bbox.minY - img.originY) * scale\n      });\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      _TTFGlyph.prototype.render.call(this, ctx, size);\n    }\n  };\n\n  return SBIXGlyph;\n}(TTFGlyph);\n\nvar COLRLayer = function COLRLayer(glyph, color) {\n  classCallCheck(this, COLRLayer);\n  this.glyph = glyph;\n  this.color = color;\n};\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\n\n\nvar COLRGlyph = function (_Glyph) {\n  inherits(COLRGlyph, _Glyph);\n\n  function COLRGlyph() {\n    classCallCheck(this, COLRGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  COLRGlyph.prototype._getBBox = function _getBBox() {\n    var bbox = new BBox();\n\n    for (var i = 0; i < this.layers.length; i++) {\n      var layer = this.layers[i];\n      var b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  };\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n\n\n  COLRGlyph.prototype.render = function render(ctx, size) {\n    for (var _iterator = this.layers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _ref2 = _ref,\n          glyph = _ref2.glyph,\n          color = _ref2.color;\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  };\n\n  createClass(COLRGlyph, [{\n    key: 'layers',\n    get: function get$$1() {\n      var cpal = this._font.CPAL;\n      var colr = this._font.COLR;\n      var low = 0;\n      var high = colr.baseGlyphRecord.length - 1;\n\n      while (low <= high) {\n        var mid = low + high >> 1;\n        var rec = colr.baseGlyphRecord[mid];\n\n        if (this.id < rec.gid) {\n          high = mid - 1;\n        } else if (this.id > rec.gid) {\n          low = mid + 1;\n        } else {\n          var baseLayer = rec;\n          break;\n        }\n      } // if base glyph not found in COLR table,\n      // default to normal glyph from glyf or CFF\n\n\n      if (baseLayer == null) {\n        var g = this._font._getBaseGlyph(this.id);\n\n        var color = {\n          red: 0,\n          green: 0,\n          blue: 0,\n          alpha: 255\n        };\n        return [new COLRLayer(g, color)];\n      } // otherwise, return an array of all the layers\n\n\n      var layers = [];\n\n      for (var i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n        var rec = colr.layerRecords[i];\n        var color = cpal.colorRecords[rec.paletteIndex];\n\n        var g = this._font._getBaseGlyph(rec.gid);\n\n        layers.push(new COLRLayer(g, color));\n      }\n\n      return layers;\n    }\n  }]);\n  return COLRGlyph;\n}(Glyph);\n\nvar TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nvar TUPLE_COUNT_MASK = 0x0fff;\nvar EMBEDDED_TUPLE_COORD = 0x8000;\nvar INTERMEDIATE_TUPLE = 0x4000;\nvar PRIVATE_POINT_NUMBERS = 0x2000;\nvar TUPLE_INDEX_MASK = 0x0fff;\nvar POINTS_ARE_WORDS = 0x80;\nvar POINT_RUN_COUNT_MASK = 0x7f;\nvar DELTAS_ARE_ZERO = 0x80;\nvar DELTAS_ARE_WORDS = 0x40;\nvar DELTA_RUN_COUNT_MASK = 0x3f;\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\n\nvar GlyphVariationProcessor = function () {\n  function GlyphVariationProcessor(font, coords) {\n    classCallCheck(this, GlyphVariationProcessor);\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map();\n  }\n\n  GlyphVariationProcessor.prototype.normalizeCoords = function normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    var normalized = [];\n\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      var axis = this.font.fvar.axis[i];\n\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    } // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n\n\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        var segment = this.font.avar.segment[i];\n\n        for (var j = 0; j < segment.correspondence.length; j++) {\n          var pair = segment.correspondence[j];\n\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            var prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  };\n\n  GlyphVariationProcessor.prototype.transformPoints = function transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) {\n      return;\n    }\n\n    var gvar = this.font.gvar;\n\n    if (gid >= gvar.glyphCount) {\n      return;\n    }\n\n    var offset = gvar.offsets[gid];\n\n    if (offset === gvar.offsets[gid + 1]) {\n      return;\n    } // Read the gvar data for this glyph\n\n\n    var stream = this.font.stream;\n    stream.pos = offset;\n\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    var tupleCount = stream.readUInt16BE();\n    var offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    var origPoints = glyphPoints.map(function (pt) {\n      return pt.copy();\n    });\n    tupleCount &= TUPLE_COUNT_MASK;\n\n    for (var i = 0; i < tupleCount; i++) {\n      var tupleDataSize = stream.readUInt16BE();\n      var tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n\n        for (var a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n\n        for (var _a = 0; _a < gvar.axisCount; _a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n\n        for (var _a2 = 0; _a2 < gvar.axisCount; _a2++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      } // Get the factor at which to apply this tuple\n\n\n      var factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      } // points.length = 0 means there are deltas for all points\n\n\n      var nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      var xDeltas = this.decodeDeltas(nPoints);\n      var yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) {\n        // all points\n        for (var _i = 0; _i < glyphPoints.length; _i++) {\n          var point = glyphPoints[_i];\n          point.x += Math.round(xDeltas[_i] * factor);\n          point.y += Math.round(yDeltas[_i] * factor);\n        }\n      } else {\n        var outPoints = origPoints.map(function (pt) {\n          return pt.copy();\n        });\n        var hasDelta = glyphPoints.map(function () {\n          return false;\n        });\n\n        for (var _i2 = 0; _i2 < points.length; _i2++) {\n          var idx = points[_i2];\n\n          if (idx < glyphPoints.length) {\n            var _point = outPoints[idx];\n            hasDelta[idx] = true;\n            _point.x += Math.round(xDeltas[_i2] * factor);\n            _point.y += Math.round(yDeltas[_i2] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (var _i3 = 0; _i3 < glyphPoints.length; _i3++) {\n          var deltaX = outPoints[_i3].x - origPoints[_i3].x;\n          var deltaY = outPoints[_i3].y - origPoints[_i3].y;\n          glyphPoints[_i3].x += deltaX;\n          glyphPoints[_i3].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  };\n\n  GlyphVariationProcessor.prototype.decodePoints = function decodePoints() {\n    var stream = this.font.stream;\n    var count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    var points = new Uint16Array(count);\n    var i = 0;\n    var point = 0;\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      var fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (var j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  };\n\n  GlyphVariationProcessor.prototype.decodeDeltas = function decodeDeltas(count) {\n    var stream = this.font.stream;\n    var i = 0;\n    var deltas = new Int16Array(count);\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n      } else {\n        var fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n\n        for (var j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  };\n\n  GlyphVariationProcessor.prototype.tupleFactor = function tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    var normalized = this.normalizedCoords;\n    var gvar = this.font.gvar;\n    var factor = 1;\n\n    for (var i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) {\n          return 0;\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  }; // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n\n\n  GlyphVariationProcessor.prototype.interpolateMissingDeltas = function interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    var point = 0;\n\n    while (point < points.length) {\n      var firstPoint = point; // find the end point of the contour\n\n      var endPoint = point;\n      var pt = points[endPoint];\n\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      } // find the first point that has a delta\n\n\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      var firstDelta = point;\n      var curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      } // shift contour if we only have a single delta\n\n\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  };\n\n  GlyphVariationProcessor.prototype.deltaInterpolate = function deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    var iterable = ['x', 'y'];\n\n    for (var i = 0; i < iterable.length; i++) {\n      var k = iterable[i];\n\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      var in1 = inPoints[ref1][k];\n      var in2 = inPoints[ref2][k];\n      var out1 = outPoints[ref1][k];\n      var out2 = outPoints[ref2][k]; // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n\n      if (in1 !== in2 || out1 === out2) {\n        var scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (var _p = p1; _p <= p2; _p++) {\n          var out = inPoints[_p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[_p][k] = out;\n        }\n      }\n    }\n  };\n\n  GlyphVariationProcessor.prototype.deltaShift = function deltaShift(p1, p2, ref, inPoints, outPoints) {\n    var deltaX = outPoints[ref].x - inPoints[ref].x;\n    var deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (var p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  };\n\n  GlyphVariationProcessor.prototype.getAdvanceAdjustment = function getAdvanceAdjustment(gid, table) {\n    var outerIndex = void 0,\n        innerIndex = void 0;\n\n    if (table.advanceWidthMapping) {\n      var idx = gid;\n\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      var entryFormat = table.advanceWidthMapping.entryFormat;\n      var _table$advanceWidthMa = table.advanceWidthMapping.mapData[idx];\n      outerIndex = _table$advanceWidthMa.outerIndex;\n      innerIndex = _table$advanceWidthMa.innerIndex;\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  }; // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n\n\n  GlyphVariationProcessor.prototype.getDelta = function getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    var deltaSet = varData.deltaSets[innerIndex];\n    var blendVector = this.getBlendVector(itemStore, outerIndex);\n    var netAdjustment = 0;\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  };\n\n  GlyphVariationProcessor.prototype.getBlendVector = function getBlendVector(itemStore, outerIndex) {\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    var normalizedCoords = this.normalizedCoords;\n    var blendVector = []; // outer loop steps through master designs to be blended\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      var scalar = 1;\n      var regionIndex = varData.regionIndexes[master];\n      var axes = itemStore.variationRegionList.variationRegions[regionIndex]; // inner loop steps through axes in this region\n\n      for (var j = 0; j < axes.length; j++) {\n        var axis = axes[j];\n        var axisScalar = void 0; // compute the scalar contribution of this axis\n        // ignore invalid ranges\n\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1; // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1; // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0; // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        } // take product of all the axis scalars\n\n\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  };\n\n  return GlyphVariationProcessor;\n}();\n\nvar Subset = function () {\n  function Subset(font) {\n    classCallCheck(this, Subset);\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {}; // always include the missing glyph\n\n    this.includeGlyph(0);\n  }\n\n  Subset.prototype.includeGlyph = function includeGlyph(glyph) {\n    if ((typeof glyph === 'undefined' ? 'undefined' : _typeof(glyph)) === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  };\n\n  Subset.prototype.encodeStream = function encodeStream() {\n    var _this = this;\n\n    var s = new r.EncodeStream();\n    process.nextTick(function () {\n      _this.encode(s);\n\n      return s.end();\n    });\n    return s;\n  };\n\n  return Subset;\n}(); // Flags for simple glyphs\n\n\nvar ON_CURVE$1 = 1 << 0;\nvar X_SHORT_VECTOR$1 = 1 << 1;\nvar Y_SHORT_VECTOR$1 = 1 << 2;\nvar REPEAT$1 = 1 << 3;\nvar SAME_X$1 = 1 << 4;\nvar SAME_Y$1 = 1 << 5;\n\nvar Point$1 = function () {\n  function Point() {\n    classCallCheck(this, Point);\n  }\n\n  Point.size = function size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  };\n\n  Point.encode = function encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  };\n\n  return Point;\n}();\n\nvar Glyf = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point$1, 0),\n  yPoints: new r.Array(Point$1, 0)\n});\n/**\n * Encodes TrueType glyph outlines\n */\n\nvar TTFGlyphEncoder = function () {\n  function TTFGlyphEncoder() {\n    classCallCheck(this, TTFGlyphEncoder);\n  }\n\n  TTFGlyphEncoder.prototype.encodeSimple = function encodeSimple(path) {\n    var instructions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var endPtsOfContours = [];\n    var xPoints = [];\n    var yPoints = [];\n    var flags = [];\n    var same = 0;\n    var lastX = 0,\n        lastY = 0,\n        lastFlag = 0;\n    var pointCount = 0;\n\n    for (var i = 0; i < path.commands.length; i++) {\n      var c = path.commands[i];\n\n      for (var j = 0; j < c.args.length; j += 2) {\n        var x = c.args[j];\n        var y = c.args[j + 1];\n        var flag = 0; // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          var next = path.commands[i + 1];\n\n          if (next && next.command === 'quadraticCurveTo') {\n            var midX = (lastX + next.args[0]) / 2;\n            var midY = (lastY + next.args[1]) / 2;\n\n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        } // All points except control points are on curve.\n\n\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE$1;\n        }\n\n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR$1, SAME_X$1);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR$1, SAME_Y$1);\n\n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT$1;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n\n          flags.push(flag);\n          lastFlag = flag;\n        }\n\n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n\n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    } // Close the path if the last command didn't already\n\n\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n\n    var bbox = path.bbox;\n    var glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    var size = Glyf.size(glyf);\n    var tail = 4 - size % 4;\n    var stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf); // Align to 4-byte length\n\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n\n    return stream.buffer;\n  };\n\n  TTFGlyphEncoder.prototype._encodePoint = function _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    var diff = value - last;\n\n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n\n      points.push(diff);\n    }\n\n    return flag;\n  };\n\n  return TTFGlyphEncoder;\n}();\n\nvar TTFSubset = function (_Subset) {\n  inherits(TTFSubset, _Subset);\n\n  function TTFSubset(font) {\n    classCallCheck(this, TTFSubset);\n\n    var _this = possibleConstructorReturn(this, _Subset.call(this, font));\n\n    _this.glyphEncoder = new TTFGlyphEncoder();\n    return _this;\n  }\n\n  TTFSubset.prototype._addGlyph = function _addGlyph(gid) {\n    var glyph = this.font.getGlyph(gid);\n\n    var glyf = glyph._decode(); // get the offset to the glyph from the loca table\n\n\n    var curOffset = this.font.loca.offsets[gid];\n    var nextOffset = this.font.loca.offsets[gid + 1];\n\n    var stream = this.font._getTableStream('glyf');\n\n    stream.pos += curOffset;\n    var buffer = stream.readBuffer(nextOffset - curOffset); // if it is a compound glyph, include its components\n\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = Buffer.from(buffer);\n\n      for (var _iterator = glyf.components, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var component = _ref;\n        gid = this.includeGlyph(component.glyphID);\n        buffer.writeUInt16BE(gid, component.pos);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  };\n\n  TTFSubset.prototype.encode = function encode(stream) {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: []\n    };\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    }; // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n\n    var i = 0;\n\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    var maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n    this.loca.offsets.push(this.offset);\n    tables.loca.preEncode.call(this.loca);\n    var head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n    var hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length; // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n    // TODO: subset prep, cvt, fpgm?\n\n    Directory.encode(stream, {\n      tables: {\n        head: head,\n        hhea: hhea,\n        loca: this.loca,\n        maxp: maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n\n      }\n    });\n  };\n\n  return TTFSubset;\n}(Subset);\n\nvar CFFSubset = function (_Subset) {\n  inherits(CFFSubset, _Subset);\n\n  function CFFSubset(font) {\n    classCallCheck(this, CFFSubset);\n\n    var _this = possibleConstructorReturn(this, _Subset.call(this, font));\n\n    _this.cff = _this.font['CFF '];\n\n    if (!_this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n\n    return _this;\n  }\n\n  CFFSubset.prototype.subsetCharstrings = function subsetCharstrings() {\n    this.charstrings = [];\n    var gsubrs = {};\n\n    for (var _iterator = this.glyphs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var gid = _ref;\n      this.charstrings.push(this.cff.getCharString(gid));\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  };\n\n  CFFSubset.prototype.subsetSubrs = function subsetSubrs(subrs, used) {\n    var res = [];\n\n    for (var i = 0; i < subrs.length; i++) {\n      var subr = subrs[i];\n\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(Buffer.from([11])); // return\n      }\n    }\n\n    return res;\n  };\n\n  CFFSubset.prototype.subsetFontdict = function subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n    var used_fds = {};\n    var used_subrs = [];\n\n    for (var _iterator2 = this.glyphs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var gid = _ref2;\n      var fd = this.cff.fdForGlyph(gid);\n\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(topDict.FDArray.length - 1);\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[used_subrs.length - 1][subr] = true;\n      }\n    }\n\n    for (var i = 0; i < topDict.FDArray.length; i++) {\n      var dict = topDict.FDArray[i];\n      delete dict.FontName;\n\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  };\n\n  CFFSubset.prototype.createCIDFontdict = function createCIDFontdict(topDict) {\n    var used_subrs = {};\n\n    for (var _iterator3 = this.glyphs, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var gid = _ref3;\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    var privateDict = Object.assign({}, this.cff.topDict.Private);\n\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{\n      Private: privateDict\n    }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{\n        first: 0,\n        fd: 0\n      }],\n      sentinel: this.charstrings.length\n    };\n  };\n\n  CFFSubset.prototype.addString = function addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  };\n\n  CFFSubset.prototype.encode = function encode(stream) {\n    this.subsetCharstrings();\n    var charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{\n        first: 1,\n        nLeft: this.charstrings.length - 2\n      }]\n    };\n    var topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n    var _arr = ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName'];\n\n    for (var _i4 = 0; _i4 < _arr.length; _i4++) {\n      var key = _arr[_i4];\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    var top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: this.cff.length,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n    CFFTop.encode(stream, top);\n  };\n\n  return CFFSubset;\n}(Subset);\n\nvar _class;\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\n\n\nvar TTFFont = (_class = function () {\n  TTFFont.probe = function probe(buffer) {\n    var format = buffer.toString('ascii', 0, 4);\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  };\n\n  function TTFFont(stream) {\n    var variationCoords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TTFFont);\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n\n    this._decodeDirectory(); // define properties for each table to lazily parse\n\n\n    for (var tag in this.directory.tables) {\n      var table = this.directory.tables[tag];\n\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  TTFFont.prototype._getTable = function _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit$1.logErrors) {\n          console.error('Error decoding table ' + table.tag);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  };\n\n  TTFFont.prototype._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  };\n\n  TTFFont.prototype._decodeDirectory = function _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  TTFFont.prototype._decodeTable = function _decodeTable(table) {\n    var pos = this.stream.pos;\n\n    var stream = this._getTableStream(table.tag);\n\n    var result = tables[table.tag].decode(stream, this, table.length);\n    this.stream.pos = pos;\n    return result;\n  };\n  /**\n   * The unique PostScript name for this font\n   * @type {string}\n   */\n\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n\n\n  TTFFont.prototype.getName = function getName(key) {\n    var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n    var record = this.name.records[key];\n\n    if (record) {\n      return record[lang];\n    }\n\n    return null;\n  };\n  /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */\n\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n\n\n  TTFFont.prototype.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  };\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n\n\n  TTFFont.prototype.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  };\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n\n\n  TTFFont.prototype.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        } // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n\n\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  };\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n\n\n  TTFFont.prototype.layout = function layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  };\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n\n\n  TTFFont.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  };\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n\n\n  TTFFont.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  };\n\n  TTFFont.prototype._getBaseGlyph = function _getBaseGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  };\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n\n\n  TTFFont.prototype.getGlyph = function getGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n      } else if (this.directory.tables.COLR && this.directory.tables.CPAL) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  };\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n\n\n  TTFFont.prototype.createSubset = function createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  };\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n\n\n  TTFFont.prototype.getVariation = function getVariation(settings) {\n    if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if ((typeof settings === 'undefined' ? 'undefined' : _typeof(settings)) !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    } // normalize the coordinates\n\n\n    var coords = this.fvar.axis.map(function (axis, i) {\n      var axisTag = axis.axisTag.trim();\n\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n    var stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n    var font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n    return font;\n  }; // Standardized format plugin API\n\n\n  TTFFont.prototype.getFont = function getFont(name) {\n    return this.getVariation(name);\n  };\n\n  createClass(TTFFont, [{\n    key: 'postscriptName',\n    get: function get$$1() {\n      var name = this.name.records.postscriptName;\n\n      if (name) {\n        var lang = Object.keys(name)[0];\n        return name[lang];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'fullName',\n    get: function get$$1() {\n      return this.getName('fullName');\n    }\n    /**\n     * The font's family name, e.g. \"Helvetica\"\n     * @type {string}\n     */\n\n  }, {\n    key: 'familyName',\n    get: function get$$1() {\n      return this.getName('fontFamily');\n    }\n    /**\n     * The font's sub-family, e.g. \"Bold\".\n     * @type {string}\n     */\n\n  }, {\n    key: 'subfamilyName',\n    get: function get$$1() {\n      return this.getName('fontSubfamily');\n    }\n    /**\n     * The font's copyright information\n     * @type {string}\n     */\n\n  }, {\n    key: 'copyright',\n    get: function get$$1() {\n      return this.getName('copyright');\n    }\n    /**\n     * The font's version number\n     * @type {string}\n     */\n\n  }, {\n    key: 'version',\n    get: function get$$1() {\n      return this.getName('version');\n    }\n    /**\n     * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n     * @type {number}\n     */\n\n  }, {\n    key: 'ascent',\n    get: function get$$1() {\n      return this.hhea.ascent;\n    }\n    /**\n     * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n     * @type {number}\n     */\n\n  }, {\n    key: 'descent',\n    get: function get$$1() {\n      return this.hhea.descent;\n    }\n    /**\n     * The amount of space that should be included between lines\n     * @type {number}\n     */\n\n  }, {\n    key: 'lineGap',\n    get: function get$$1() {\n      return this.hhea.lineGap;\n    }\n    /**\n     * The offset from the normal underline position that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: 'underlinePosition',\n    get: function get$$1() {\n      return this.post.underlinePosition;\n    }\n    /**\n     * The weight of the underline that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: 'underlineThickness',\n    get: function get$$1() {\n      return this.post.underlineThickness;\n    }\n    /**\n     * If this is an italic font, the angle the cursor should be drawn at to match the font design\n     * @type {number}\n     */\n\n  }, {\n    key: 'italicAngle',\n    get: function get$$1() {\n      return this.post.italicAngle;\n    }\n    /**\n     * The height of capital letters above the baseline.\n     * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: 'capHeight',\n    get: function get$$1() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n     * The height of lower case letters in the font.\n     * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: 'xHeight',\n    get: function get$$1() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.xHeight : 0;\n    }\n    /**\n     * The number of glyphs in the font.\n     * @type {number}\n     */\n\n  }, {\n    key: 'numGlyphs',\n    get: function get$$1() {\n      return this.maxp.numGlyphs;\n    }\n    /**\n     * The size of the font’s internal coordinate grid\n     * @type {number}\n     */\n\n  }, {\n    key: 'unitsPerEm',\n    get: function get$$1() {\n      return this.head.unitsPerEm;\n    }\n    /**\n     * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n  }, {\n    key: '_cmapProcessor',\n    get: function get$$1() {\n      return new CmapProcessor(this.cmap);\n    }\n    /**\n     * An array of all of the unicode code points supported by the font.\n     * @type {number[]}\n     */\n\n  }, {\n    key: 'characterSet',\n    get: function get$$1() {\n      return this._cmapProcessor.getCharacterSet();\n    }\n  }, {\n    key: '_layoutEngine',\n    get: function get$$1() {\n      return new LayoutEngine(this);\n    }\n  }, {\n    key: 'availableFeatures',\n    get: function get$$1() {\n      return this._layoutEngine.getAvailableFeatures();\n    }\n  }, {\n    key: 'variationAxes',\n    get: function get$$1() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator = this.fvar.axis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var axis = _ref;\n        res[axis.axisTag.trim()] = {\n          name: axis.name.en,\n          min: axis.minValue,\n          default: axis.defaultValue,\n          max: axis.maxValue\n        };\n      }\n\n      return res;\n    }\n    /**\n     * Returns an object describing the named variation instances\n     * that the font designer has specified. Keys are variation names\n     * and values are the variation settings for this instance.\n     *\n     * @type {object}\n     */\n\n  }, {\n    key: 'namedVariations',\n    get: function get$$1() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator2 = this.fvar.instance, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var instance = _ref2;\n        var settings = {};\n\n        for (var i = 0; i < this.fvar.axis.length; i++) {\n          var axis = this.fvar.axis[i];\n          settings[axis.axisTag.trim()] = instance.coord[i];\n        }\n\n        res[instance.name.en] = settings;\n      }\n\n      return res;\n    }\n  }, {\n    key: '_variationProcessor',\n    get: function get$$1() {\n      if (!this.fvar) {\n        return null;\n      }\n\n      var variationCoords = this.variationCoords; // Ignore if no variation coords and not CFF2\n\n      if (!variationCoords && !this.CFF2) {\n        return null;\n      }\n\n      if (!variationCoords) {\n        variationCoords = this.fvar.axis.map(function (axis) {\n          return axis.defaultValue;\n        });\n      }\n\n      return new GlyphVariationProcessor(this, variationCoords);\n    }\n  }]);\n  return TTFFont;\n}(), _applyDecoratedDescriptor(_class.prototype, 'bbox', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'bbox'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_cmapProcessor', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_cmapProcessor'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'characterSet', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'characterSet'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_layoutEngine', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_layoutEngine'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'variationAxes', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'variationAxes'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'namedVariations', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'namedVariations'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_variationProcessor', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_variationProcessor'), _class.prototype), _class);\nvar WOFFDirectoryEntry = new r.Struct({\n  tag: new r.String(4),\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  compLength: r.uint32,\n  length: r.uint32,\n  origChecksum: r.uint32\n});\nvar WOFFDirectory = new r.Struct({\n  tag: new r.String(4),\n  // should be 'wOFF'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function () {\n  var tables$$1 = {};\n\n  for (var _iterator = this.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var table = _ref;\n    tables$$1[table.tag] = table;\n  }\n\n  this.tables = tables$$1;\n};\n\nvar WOFFFont = function (_TTFFont) {\n  inherits(WOFFFont, _TTFFont);\n\n  function WOFFFont() {\n    classCallCheck(this, WOFFFont);\n    return possibleConstructorReturn(this, _TTFFont.apply(this, arguments));\n  }\n\n  WOFFFont.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOFF';\n  };\n\n  WOFFFont.prototype._decodeDirectory = function _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  WOFFFont.prototype._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n\n        var outBuffer = Buffer.alloc(table.length);\n        var buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  };\n\n  return WOFFFont;\n}(TTFFont);\n\nvar TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts'),\n    dsigTag: r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nvar TrueTypeCollection = function () {\n  TrueTypeCollection.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'ttcf';\n  };\n\n  function TrueTypeCollection(stream) {\n    classCallCheck(this, TrueTypeCollection);\n    this.stream = stream;\n\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  TrueTypeCollection.prototype.getFont = function getFont(name) {\n    for (var _iterator = this.header.offsets, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var offset = _ref;\n      var stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  createClass(TrueTypeCollection, [{\n    key: 'fonts',\n    get: function get$$1() {\n      var fonts = [];\n\n      for (var _iterator2 = this.header.offsets, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var offset = _ref2;\n        var stream = new r.DecodeStream(this.stream.buffer);\n        stream.pos = offset;\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n  return TrueTypeCollection;\n}();\n\nvar DFontName = new r.String(r.uint8);\nvar DFontData = new r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\nvar Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\nvar Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, function (t) {\n    return t.maxTypeIndex + 1;\n  }), {\n    type: 'parent'\n  })\n});\nvar TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, function (t) {\n    return t.length + 1;\n  })\n});\nvar DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\nvar DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nvar DFont = function () {\n  DFont.probe = function probe(buffer) {\n    var stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (var _iterator = header.map.typeList.types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var type = _ref;\n\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function DFont(stream) {\n    classCallCheck(this, DFont);\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (var _iterator2 = this.header.map.typeList.types, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var type = _ref2;\n\n      for (var _iterator3 = type.refList, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var ref = _ref3;\n\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  DFont.prototype.getFont = function getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (var _iterator4 = this.sfnt.refList, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var ref = _ref4;\n      var pos = this.header.dataOffset + ref.dataOffset + 4;\n      var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  createClass(DFont, [{\n    key: 'fonts',\n    get: function get$$1() {\n      var fonts = [];\n\n      for (var _iterator5 = this.sfnt.refList, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var ref = _ref5;\n        var pos = this.header.dataOffset + ref.dataOffset + 4;\n        var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n  return DFont;\n}(); // Register font formats\n\n\nfontkit$1.registerFormat(TTFFont);\nfontkit$1.registerFormat(WOFFFont);\nfontkit$1.registerFormat(TrueTypeCollection);\nfontkit$1.registerFormat(DFont);\nexport default fontkit$1;"],"sourceRoot":""}