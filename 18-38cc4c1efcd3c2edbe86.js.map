{"version":3,"sources":["webpack:///./node_modules/@firebase/remote-config/dist/index.cjs.js","webpack:///./node_modules/firebase/remote-config/dist/index.esm.js"],"names":["Object","defineProperty","exports","value","firebase","tslib","util","logger","component","_interopDefaultLegacy","e","_a","firebase__default","CachingClient","client","storage","storageCache","this","prototype","isCachedDataFresh","cacheMaxAgeMillis","lastSuccessfulFetchTimestampMillis","debug","cacheAgeMillis","Date","now","fetch","request","__awaiter","lastSuccessfulFetchResponse","response","storageOperations","__generator","_b","label","Promise","all","getLastSuccessfulFetchTimestampMillis","getLastSuccessfulFetchResponse","sent","eTag","setLastSuccessfulFetchTimestampMillis","status","push","setLastSuccessfulFetchResponse","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","ErrorFactory","RestClient","firebaseInstallations","sdkVersion","namespace","projectId","apiKey","appId","installationId","installationToken","urlBase","url","headers","requestBody","options","fetchPromise","timeoutPromise","originalError_1","errorCode","responseEtag","config","state","responseBody","originalError_2","getId","getToken","window","FIREBASE_REMOTE_CONFIG_URL_BASE","sdk_version","app_instance_id","app_instance_id_token","app_id","language_code","navigatorLanguage","navigator","languages","language","method","body","JSON","stringify","_resolve","reject","signal","addEventListener","error","Error","name","trys","race","create","originalErrorMessage","message","get","undefined","json","httpStatus","RemoteConfigAbortSignal","listeners","listener","abort","forEach","BOOLEAN_TRUTHY_VALUES","Value","_source","_value","asString","asBoolean","indexOf","toLowerCase","asNumber","num","Number","isNaN","getSource","RemoteConfig","app","_client","_storageCache","_storage","_logger","_isInitializationComplete","settings","fetchTimeoutMillis","minimumFetchIntervalMillis","defaultConfig","setLogLevel","logLevel","LogLevel","DEBUG","SILENT","ERROR","enumerable","configurable","getLastFetchStatus","activate","activeConfigEtag","getActiveConfigEtag","setActiveConfig","setActiveConfigEtag","ensureInitialized","_this","_initializePromise","loadFromStorage","then","abortSignal","e_1","lastFetchStatus","setTimeout","setLastFetchStatus","FirebaseError","code","fetchAndActivate","getAll","obj1","obj2","keys","__assign","getAllKeys","getActiveConfig","reduce","allConfigs","key","getValue","getBoolean","getNumber","getString","activeConfig","String","toFirebaseError","event","originalError","target","Storage","appName","openDbPromise","resolve","indexedDB","open","onerror","onsuccess","result","onupgradeneeded","db","oldVersion","createObjectStore","keyPath","set","timestamp","etag","getThrottleMetadata","setThrottleMetadata","metadata","deleteThrottleMetadata","delete","objectStore","transaction","compositeKey","createCompositeKey","put","join","StorageCache","lastFetchStatusPromise","lastSuccessfulFetchTimestampMillisPromise","activeConfigPromise","timestampMillis","setAbortableTimeout","throttleEndTimeMillis","backoffMillis","Math","max","timeout","clearTimeout","RetryingClient","throttleMetadata","backoffCount","attemptFetch","isRetriableError","calculateBackoffMillis","registerRemoteConfig","firebaseInstance","INTERNAL","registerComponent","Component","container","getProvider","getImmediate","installations","logger$1","Logger","restClient","SDK_VERSION","retryingClient","cachingClient","remoteConfigInstance","setMultipleInstances","registerVersion"],"mappings":"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","file":"18-38cc4c1efcd3c2edbe86.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar firebase = require('@firebase/app');\n\nrequire('@firebase/installations');\n\nvar tslib = require('tslib');\n\nvar util = require('@firebase/util');\n\nvar logger = require('@firebase/logger');\n\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\n\n\nvar CachingClient =\n/** @class */\nfunction () {\n  function CachingClient(client, storage, storageCache, logger) {\n    this.client = client;\n    this.storage = storage;\n    this.storageCache = storageCache;\n    this.logger = logger;\n  }\n  /**\r\n   * Returns true if the age of the cached fetched configs is less than or equal to\r\n   * {@link Settings#minimumFetchIntervalInSeconds}.\r\n   *\r\n   * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n   * native Fetch API.\r\n   *\r\n   * <p>Visible for testing.\r\n   */\n\n\n  CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\n    // Cache can only be fresh if it's populated.\n    if (!lastSuccessfulFetchTimestampMillis) {\n      this.logger.debug('Config fetch cache check. Cache unpopulated.');\n      return false;\n    } // Calculates age of cache entry.\n\n\n    var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\n    var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\n    this.logger.debug('Config fetch cache check.' + (\" Cache age millis: \" + cacheAgeMillis + \".\") + (\" Cache max age millis (minimumFetchIntervalMillis setting): \" + cacheMaxAgeMillis + \".\") + (\" Is cache hit: \" + isCachedDataFresh + \".\"));\n    return isCachedDataFresh;\n  };\n\n  CachingClient.prototype.fetch = function (request) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\n\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(), this.storage.getLastSuccessfulFetchResponse()])];\n\n          case 1:\n            _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1]; // Exits early on cache hit.\n\n            if (lastSuccessfulFetchResponse && this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\n              return [2\n              /*return*/\n              , lastSuccessfulFetchResponse];\n            } // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\n            // that allows the caller to pass an ETag.\n\n\n            request.eTag = lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\n            return [4\n            /*yield*/\n            , this.client.fetch(request)];\n\n          case 2:\n            response = _b.sent();\n            storageOperations = [// Uses write-through cache for consistency with synchronous public API.\n            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())];\n\n            if (response.status === 200) {\n              // Caches response only if it has changed, ie non-304 responses.\n              storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\n            }\n\n            return [4\n            /*yield*/\n            , Promise.all(storageOperations)];\n\n          case 3:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n\n  return CachingClient;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _a;\n\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"registration-window\"\n/* REGISTRATION_WINDOW */\n] = 'Undefined window object. This SDK only supports usage in a browser environment.', _a[\"registration-project-id\"\n/* REGISTRATION_PROJECT_ID */\n] = 'Undefined project identifier. Check Firebase app initialization.', _a[\"registration-api-key\"\n/* REGISTRATION_API_KEY */\n] = 'Undefined API key. Check Firebase app initialization.', _a[\"registration-app-id\"\n/* REGISTRATION_APP_ID */\n] = 'Undefined app identifier. Check Firebase app initialization.', _a[\"storage-open\"\n/* STORAGE_OPEN */\n] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.', _a[\"storage-get\"\n/* STORAGE_GET */\n] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.', _a[\"storage-set\"\n/* STORAGE_SET */\n] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.', _a[\"storage-delete\"\n/* STORAGE_DELETE */\n] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.', _a[\"fetch-client-network\"\n/* FETCH_NETWORK */\n] = 'Fetch client failed to connect to a network. Check Internet connection.' + ' Original error: {$originalErrorMessage}.', _a[\"fetch-timeout\"\n/* FETCH_TIMEOUT */\n] = 'The config fetch request timed out. ' + ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.', _a[\"fetch-throttle\"\n/* FETCH_THROTTLE */\n] = 'The config fetch request timed out while in an exponential backoff state.' + ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' + ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.', _a[\"fetch-client-parse\"\n/* FETCH_PARSE */\n] = 'Fetch client could not parse response.' + ' Original error: {$originalErrorMessage}.', _a[\"fetch-status\"\n/* FETCH_STATUS */\n] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.', _a);\nvar ERROR_FACTORY = new util.ErrorFactory('remoteconfig'\n/* service */\n, 'Remote Config'\n/* service name */\n, ERROR_DESCRIPTION_MAP); // Note how this is like typeof/instanceof, but for ErrorCode.\n\nfunction hasErrorCode(e, errorCode) {\n  return e instanceof util.FirebaseError && e.code.indexOf(errorCode) !== -1;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\n\n\nfunction getUserLanguage(navigatorLanguage) {\n  if (navigatorLanguage === void 0) {\n    navigatorLanguage = navigator;\n  }\n\n  return (// Most reliable, but only supported in Chrome/Firefox.\n    navigatorLanguage.languages && navigatorLanguage.languages[0] || // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language // Polyfill otherwise.\n\n  );\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\n\n\nvar RestClient =\n/** @class */\nfunction () {\n  function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\n    this.firebaseInstallations = firebaseInstallations;\n    this.sdkVersion = sdkVersion;\n    this.namespace = namespace;\n    this.projectId = projectId;\n    this.apiKey = apiKey;\n    this.appId = appId;\n  }\n  /**\r\n   * Fetches from the Remote Config REST API.\r\n   *\r\n   * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n   * connect to the network.\r\n   * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n   * fetch response.\r\n   * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n   */\n\n\n  RestClient.prototype.fetch = function (request) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\n\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.firebaseInstallations.getId(), this.firebaseInstallations.getToken()])];\n\n          case 1:\n            _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\n            urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE || 'https://firebaseremoteconfig.googleapis.com';\n            url = urlBase + \"/v1/projects/\" + this.projectId + \"/namespaces/\" + this.namespace + \":fetch?key=\" + this.apiKey;\n            headers = {\n              'Content-Type': 'application/json',\n              'Content-Encoding': 'gzip',\n              // Deviates from pure decorator by not passing max-age header since we don't currently have\n              // service behavior using that header.\n              'If-None-Match': request.eTag || '*'\n            };\n            requestBody = {\n              /* eslint-disable camelcase */\n              sdk_version: this.sdkVersion,\n              app_instance_id: installationId,\n              app_instance_id_token: installationToken,\n              app_id: this.appId,\n              language_code: getUserLanguage()\n              /* eslint-enable camelcase */\n\n            };\n            options = {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(requestBody)\n            };\n            fetchPromise = fetch(url, options);\n            timeoutPromise = new Promise(function (_resolve, reject) {\n              // Maps async event listener to Promise API.\n              request.signal.addEventListener(function () {\n                // Emulates https://heycam.github.io/webidl/#aborterror\n                var error = new Error('The operation was aborted.');\n                error.name = 'AbortError';\n                reject(error);\n              });\n            });\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , Promise.race([fetchPromise, timeoutPromise])];\n\n          case 3:\n            _b.sent();\n\n            return [4\n            /*yield*/\n            , fetchPromise];\n\n          case 4:\n            response = _b.sent();\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            originalError_1 = _b.sent();\n            errorCode = \"fetch-client-network\"\n            /* FETCH_NETWORK */\n            ;\n\n            if (originalError_1.name === 'AbortError') {\n              errorCode = \"fetch-timeout\"\n              /* FETCH_TIMEOUT */\n              ;\n            }\n\n            throw ERROR_FACTORY.create(errorCode, {\n              originalErrorMessage: originalError_1.message\n            });\n\n          case 6:\n            status = response.status;\n            responseEtag = response.headers.get('ETag') || undefined;\n            if (!(response.status === 200)) return [3\n            /*break*/\n            , 11];\n            responseBody = void 0;\n            _b.label = 7;\n\n          case 7:\n            _b.trys.push([7, 9,, 10]);\n\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 8:\n            responseBody = _b.sent();\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            originalError_2 = _b.sent();\n            throw ERROR_FACTORY.create(\"fetch-client-parse\"\n            /* FETCH_PARSE */\n            , {\n              originalErrorMessage: originalError_2.message\n            });\n\n          case 10:\n            config = responseBody['entries'];\n            state = responseBody['state'];\n            _b.label = 11;\n\n          case 11:\n            // Normalizes based on legacy state.\n            if (state === 'INSTANCE_STATE_UNSPECIFIED') {\n              status = 500;\n            } else if (state === 'NO_CHANGE') {\n              status = 304;\n            } else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\n              // These cases can be fixed remotely, so normalize to safe value.\n              config = {};\n            } // Normalize to exception-based control flow for non-success cases.\n            // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\n            // differentiating success states (200 from 304; the state body param is undefined in a\n            // standard 304).\n\n\n            if (status !== 304 && status !== 200) {\n              throw ERROR_FACTORY.create(\"fetch-status\"\n              /* FETCH_STATUS */\n              , {\n                httpStatus: status\n              });\n            }\n\n            return [2\n            /*return*/\n            , {\n              status: status,\n              eTag: responseEtag,\n              config: config\n            }];\n        }\n      });\n    });\n  };\n\n  return RestClient;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\n\n\nvar RemoteConfigAbortSignal =\n/** @class */\nfunction () {\n  function RemoteConfigAbortSignal() {\n    this.listeners = [];\n  }\n\n  RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\n    this.listeners.push(listener);\n  };\n\n  RemoteConfigAbortSignal.prototype.abort = function () {\n    this.listeners.forEach(function (listener) {\n      return listener();\n    });\n  };\n\n  return RemoteConfigAbortSignal;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\nvar DEFAULT_VALUE_FOR_STRING = '';\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\n\nvar Value =\n/** @class */\nfunction () {\n  function Value(_source, _value) {\n    if (_value === void 0) {\n      _value = DEFAULT_VALUE_FOR_STRING;\n    }\n\n    this._source = _source;\n    this._value = _value;\n  }\n\n  Value.prototype.asString = function () {\n    return this._value;\n  };\n\n  Value.prototype.asBoolean = function () {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_BOOLEAN;\n    }\n\n    return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\n  };\n\n  Value.prototype.asNumber = function () {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_NUMBER;\n    }\n\n    var num = Number(this._value);\n\n    if (isNaN(num)) {\n      num = DEFAULT_VALUE_FOR_NUMBER;\n    }\n\n    return num;\n  };\n\n  Value.prototype.getSource = function () {\n    return this._source;\n  };\n\n  return Value;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\n\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\n\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\n\nvar RemoteConfig =\n/** @class */\nfunction () {\n  function RemoteConfig( // Required by FirebaseServiceFactory interface.\n  app, // JS doesn't support private yet\n  // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\n  // underscore prefix.\n  _client, _storageCache, _storage, _logger) {\n    this.app = app;\n    this._client = _client;\n    this._storageCache = _storageCache;\n    this._storage = _storage;\n    this._logger = _logger; // Tracks completion of initialization promise.\n\n    this._isInitializationComplete = false;\n    this.settings = {\n      fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\n      minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\n    };\n    this.defaultConfig = {};\n  } // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\n  // to differentiate 2p and 3p use-cases.\n\n\n  RemoteConfig.prototype.setLogLevel = function (logLevel) {\n    switch (logLevel) {\n      case 'debug':\n        this._logger.logLevel = logger.LogLevel.DEBUG;\n        break;\n\n      case 'silent':\n        this._logger.logLevel = logger.LogLevel.SILENT;\n        break;\n\n      default:\n        this._logger.logLevel = logger.LogLevel.ERROR;\n    }\n  };\n\n  Object.defineProperty(RemoteConfig.prototype, \"fetchTimeMillis\", {\n    get: function get() {\n      return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemoteConfig.prototype, \"lastFetchStatus\", {\n    get: function get() {\n      return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RemoteConfig.prototype.activate = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var _a, lastSuccessfulFetchResponse, activeConfigEtag;\n\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this._storage.getLastSuccessfulFetchResponse(), this._storage.getActiveConfigEtag()])];\n\n          case 1:\n            _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\n\n            if (!lastSuccessfulFetchResponse || !lastSuccessfulFetchResponse.config || !lastSuccessfulFetchResponse.eTag || lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\n              // Either there is no successful fetched config, or is the same as current active\n              // config.\n              return [2\n              /*return*/\n              , false];\n            }\n\n            return [4\n            /*yield*/\n            , Promise.all([this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config), this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)])];\n\n          case 2:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n\n  RemoteConfig.prototype.ensureInitialized = function () {\n    var _this = this;\n\n    if (!this._initializePromise) {\n      this._initializePromise = this._storageCache.loadFromStorage().then(function () {\n        _this._isInitializationComplete = true;\n      });\n    }\n\n    return this._initializePromise;\n  };\n  /**\r\n   * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n   * {@link Settings.fetchTimeoutInSeconds} or\r\n   * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n   */\n\n\n  RemoteConfig.prototype.fetch = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var abortSignal, e_1, lastFetchStatus;\n\n      var _this = this;\n\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            abortSignal = new RemoteConfigAbortSignal();\n            setTimeout(function () {\n              return tslib.__awaiter(_this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                  // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n                  abortSignal.abort();\n                  return [2\n                  /*return*/\n                  ];\n                });\n              });\n            }, this.settings.fetchTimeoutMillis);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 6]);\n\n            return [4\n            /*yield*/\n            , this._client.fetch({\n              cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\n              signal: abortSignal\n            })];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this._storageCache.setLastFetchStatus('success')];\n\n          case 3:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            e_1 = _a.sent();\n            lastFetchStatus = hasErrorCode(e_1, \"fetch-throttle\"\n            /* FETCH_THROTTLE */\n            ) ? 'throttle' : 'failure';\n            return [4\n            /*yield*/\n            , this._storageCache.setLastFetchStatus(lastFetchStatus)];\n\n          case 5:\n            _a.sent();\n\n            throw e_1;\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  RemoteConfig.prototype.fetchAndActivate = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.fetch()];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , this.activate()];\n        }\n      });\n    });\n  };\n\n  RemoteConfig.prototype.getAll = function () {\n    var _this = this;\n\n    return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\n      allConfigs[key] = _this.getValue(key);\n      return allConfigs;\n    }, {});\n  };\n\n  RemoteConfig.prototype.getBoolean = function (key) {\n    return this.getValue(key).asBoolean();\n  };\n\n  RemoteConfig.prototype.getNumber = function (key) {\n    return this.getValue(key).asNumber();\n  };\n\n  RemoteConfig.prototype.getString = function (key) {\n    return this.getValue(key).asString();\n  };\n\n  RemoteConfig.prototype.getValue = function (key) {\n    if (!this._isInitializationComplete) {\n      this._logger.debug(\"A value was requested for key \\\"\" + key + \"\\\" before SDK initialization completed.\" + ' Await on ensureInitialized if the intent was to get a previously activated value.');\n    }\n\n    var activeConfig = this._storageCache.getActiveConfig();\n\n    if (activeConfig && activeConfig[key] !== undefined) {\n      return new Value('remote', activeConfig[key]);\n    } else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\n      return new Value('default', String(this.defaultConfig[key]));\n    }\n\n    this._logger.debug(\"Returning static value for key \\\"\" + key + \"\\\".\" + ' Define a default or remote value if this is unintentional.');\n\n    return new Value('static');\n  };\n\n  return RemoteConfig;\n}();\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\n\n\nfunction getAllKeys(obj1, obj2) {\n  if (obj1 === void 0) {\n    obj1 = {};\n  }\n\n  if (obj2 === void 0) {\n    obj2 = {};\n  }\n\n  return Object.keys(tslib.__assign(tslib.__assign({}, obj1), obj2));\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\n\n\nfunction toFirebaseError(event, errorCode) {\n  var originalError = event.target.error || undefined;\n  return ERROR_FACTORY.create(errorCode, {\n    originalErrorMessage: originalError && originalError.message\n  });\n}\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\n\n\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\nvar DB_NAME = 'firebase_remote_config';\nvar DB_VERSION = 1; // Visible for testing.\n\nfunction openDatabase() {\n  return new Promise(function (resolve, reject) {\n    var request = indexedDB.open(DB_NAME, DB_VERSION);\n\n    request.onerror = function (event) {\n      reject(toFirebaseError(event, \"storage-open\"\n      /* STORAGE_OPEN */\n      ));\n    };\n\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n\n    request.onupgradeneeded = function (event) {\n      var db = event.target.result; // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n\n      switch (event.oldVersion) {\n        case 0:\n          db.createObjectStore(APP_NAMESPACE_STORE, {\n            keyPath: 'compositeKey'\n          });\n      }\n    };\n  });\n}\n/**\r\n * Abstracts data persistence.\r\n */\n\n\nvar Storage =\n/** @class */\nfunction () {\n  /**\r\n   * @param appId enables storage segmentation by app (ID + name).\r\n   * @param appName enables storage segmentation by app (ID + name).\r\n   * @param namespace enables storage segmentation by namespace.\r\n   */\n  function Storage(appId, appName, namespace, openDbPromise) {\n    if (openDbPromise === void 0) {\n      openDbPromise = openDatabase();\n    }\n\n    this.appId = appId;\n    this.appName = appName;\n    this.namespace = namespace;\n    this.openDbPromise = openDbPromise;\n  }\n\n  Storage.prototype.getLastFetchStatus = function () {\n    return this.get('last_fetch_status');\n  };\n\n  Storage.prototype.setLastFetchStatus = function (status) {\n    return this.set('last_fetch_status', status);\n  }; // This is comparable to a cache entry timestamp. If we need to expire other data, we could\n  // consider adding timestamp to all storage records and an optional max age arg to getters.\n\n\n  Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\n    return this.get('last_successful_fetch_timestamp_millis');\n  };\n\n  Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\n    return this.set('last_successful_fetch_timestamp_millis', timestamp);\n  };\n\n  Storage.prototype.getLastSuccessfulFetchResponse = function () {\n    return this.get('last_successful_fetch_response');\n  };\n\n  Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\n    return this.set('last_successful_fetch_response', response);\n  };\n\n  Storage.prototype.getActiveConfig = function () {\n    return this.get('active_config');\n  };\n\n  Storage.prototype.setActiveConfig = function (config) {\n    return this.set('active_config', config);\n  };\n\n  Storage.prototype.getActiveConfigEtag = function () {\n    return this.get('active_config_etag');\n  };\n\n  Storage.prototype.setActiveConfigEtag = function (etag) {\n    return this.set('active_config_etag', etag);\n  };\n\n  Storage.prototype.getThrottleMetadata = function () {\n    return this.get('throttle_metadata');\n  };\n\n  Storage.prototype.setThrottleMetadata = function (metadata) {\n    return this.set('throttle_metadata', metadata);\n  };\n\n  Storage.prototype.deleteThrottleMetadata = function () {\n    return this.delete('throttle_metadata');\n  };\n\n  Storage.prototype.get = function (key) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var db;\n\n      var _this = this;\n\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.openDbPromise];\n\n          case 1:\n            db = _a.sent();\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n\n              var compositeKey = _this.createCompositeKey(key);\n\n              try {\n                var request = objectStore.get(compositeKey);\n\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-get\"\n                  /* STORAGE_GET */\n                  ));\n                };\n\n                request.onsuccess = function (event) {\n                  var result = event.target.result;\n\n                  if (result) {\n                    resolve(result.value);\n                  } else {\n                    resolve(undefined);\n                  }\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-get\"\n                /* STORAGE_GET */\n                , {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  };\n\n  Storage.prototype.set = function (key, value) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var db;\n\n      var _this = this;\n\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.openDbPromise];\n\n          case 1:\n            db = _a.sent();\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n\n              var compositeKey = _this.createCompositeKey(key);\n\n              try {\n                var request = objectStore.put({\n                  compositeKey: compositeKey,\n                  value: value\n                });\n\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-set\"\n                  /* STORAGE_SET */\n                  ));\n                };\n\n                request.onsuccess = function () {\n                  resolve();\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-set\"\n                /* STORAGE_SET */\n                , {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  };\n\n  Storage.prototype.delete = function (key) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var db;\n\n      var _this = this;\n\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.openDbPromise];\n\n          case 1:\n            db = _a.sent();\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n\n              var compositeKey = _this.createCompositeKey(key);\n\n              try {\n                var request = objectStore.delete(compositeKey);\n\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-delete\"\n                  /* STORAGE_DELETE */\n                  ));\n                };\n\n                request.onsuccess = function () {\n                  resolve();\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-delete\"\n                /* STORAGE_DELETE */\n                , {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  }; // Facilitates composite key functionality (which is unsupported in IE).\n\n\n  Storage.prototype.createCompositeKey = function (key) {\n    return [this.appId, this.appName, this.namespace, key].join();\n  };\n\n  return Storage;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\n\n\nvar StorageCache =\n/** @class */\nfunction () {\n  function StorageCache(storage) {\n    this.storage = storage;\n  }\n  /**\r\n   * Memory-only getters\r\n   */\n\n\n  StorageCache.prototype.getLastFetchStatus = function () {\n    return this.lastFetchStatus;\n  };\n\n  StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\n    return this.lastSuccessfulFetchTimestampMillis;\n  };\n\n  StorageCache.prototype.getActiveConfig = function () {\n    return this.activeConfig;\n  };\n  /**\r\n   * Read-ahead getter\r\n   */\n\n\n  StorageCache.prototype.loadFromStorage = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            lastFetchStatusPromise = this.storage.getLastFetchStatus();\n            lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\n            activeConfigPromise = this.storage.getActiveConfig();\n            return [4\n            /*yield*/\n            , lastFetchStatusPromise];\n\n          case 1:\n            lastFetchStatus = _a.sent();\n\n            if (lastFetchStatus) {\n              this.lastFetchStatus = lastFetchStatus;\n            }\n\n            return [4\n            /*yield*/\n            , lastSuccessfulFetchTimestampMillisPromise];\n\n          case 2:\n            lastSuccessfulFetchTimestampMillis = _a.sent();\n\n            if (lastSuccessfulFetchTimestampMillis) {\n              this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\n            }\n\n            return [4\n            /*yield*/\n            , activeConfigPromise];\n\n          case 3:\n            activeConfig = _a.sent();\n\n            if (activeConfig) {\n              this.activeConfig = activeConfig;\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Write-through setters\r\n   */\n\n\n  StorageCache.prototype.setLastFetchStatus = function (status) {\n    this.lastFetchStatus = status;\n    return this.storage.setLastFetchStatus(status);\n  };\n\n  StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\n    this.lastSuccessfulFetchTimestampMillis = timestampMillis;\n    return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\n  };\n\n  StorageCache.prototype.setActiveConfig = function (activeConfig) {\n    this.activeConfig = activeConfig;\n    return this.storage.setActiveConfig(activeConfig);\n  };\n\n  return StorageCache;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\n\n\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\n  return new Promise(function (resolve, reject) {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n    var timeout = setTimeout(resolve, backoffMillis); // Adds listener, rather than sets onabort, because signal is a shared object.\n\n    signal.addEventListener(function () {\n      clearTimeout(timeout); // If the request completes before this timeout, the rejection has no effect.\n\n      reject(ERROR_FACTORY.create(\"fetch-throttle\"\n      /* FETCH_THROTTLE */\n      , {\n        throttleEndTimeMillis: throttleEndTimeMillis\n      }));\n    });\n  });\n}\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\n\n\nfunction isRetriableError(e) {\n  if (!(e instanceof util.FirebaseError)) {\n    return false;\n  } // Uses string index defined by ErrorData, which FirebaseError implements.\n\n\n  var httpStatus = Number(e['httpStatus']);\n  return httpStatus === 429 || httpStatus === 500 || httpStatus === 503 || httpStatus === 504;\n}\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\n\n\nvar RetryingClient =\n/** @class */\nfunction () {\n  function RetryingClient(client, storage) {\n    this.client = client;\n    this.storage = storage;\n  }\n\n  RetryingClient.prototype.fetch = function (request) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var throttleMetadata;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.storage.getThrottleMetadata()];\n\n          case 1:\n            throttleMetadata = _a.sent() || {\n              backoffCount: 0,\n              throttleEndTimeMillis: Date.now()\n            };\n            return [2\n            /*return*/\n            , this.attemptFetch(request, throttleMetadata)];\n        }\n      });\n    });\n  };\n  /**\r\n   * A recursive helper for attempting a fetch request repeatedly.\r\n   *\r\n   * @throws any non-retriable errors.\r\n   */\n\n\n  RetryingClient.prototype.attemptFetch = function (request, _a) {\n    var throttleEndTimeMillis = _a.throttleEndTimeMillis,\n        backoffCount = _a.backoffCount;\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var response, e_1, throttleMetadata;\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            // Starts with a (potentially zero) timeout to support resumption from stored state.\n            // Ensures the throttle end time is honored if the last attempt timed out.\n            // Note the SDK will never make a request if the fetch timeout expires at this point.\n            return [4\n            /*yield*/\n            , setAbortableTimeout(request.signal, throttleEndTimeMillis)];\n\n          case 1:\n            // Starts with a (potentially zero) timeout to support resumption from stored state.\n            // Ensures the throttle end time is honored if the last attempt timed out.\n            // Note the SDK will never make a request if the fetch timeout expires at this point.\n            _b.sent();\n\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 5,, 7]);\n\n            return [4\n            /*yield*/\n            , this.client.fetch(request)];\n\n          case 3:\n            response = _b.sent(); // Note the SDK only clears throttle state if response is success or non-retriable.\n\n            return [4\n            /*yield*/\n            , this.storage.deleteThrottleMetadata()];\n\n          case 4:\n            // Note the SDK only clears throttle state if response is success or non-retriable.\n            _b.sent();\n\n            return [2\n            /*return*/\n            , response];\n\n          case 5:\n            e_1 = _b.sent();\n\n            if (!isRetriableError(e_1)) {\n              throw e_1;\n            }\n\n            throttleMetadata = {\n              throttleEndTimeMillis: Date.now() + util.calculateBackoffMillis(backoffCount),\n              backoffCount: backoffCount + 1\n            }; // Persists state.\n\n            return [4\n            /*yield*/\n            , this.storage.setThrottleMetadata(throttleMetadata)];\n\n          case 6:\n            // Persists state.\n            _b.sent();\n\n            return [2\n            /*return*/\n            , this.attemptFetch(request, throttleMetadata)];\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return RetryingClient;\n}();\n\nvar name = \"@firebase/remote-config\";\nvar version = \"0.1.28\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction registerRemoteConfig(firebaseInstance) {\n  firebaseInstance.INTERNAL.registerComponent(new component.Component('remoteConfig', remoteConfigFactory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setMultipleInstances(true));\n  firebaseInstance.registerVersion(name, version);\n\n  function remoteConfigFactory(container, namespace) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate(); // The following call will always succeed because rc has `import '@firebase/installations'`\n\n    var installations = container.getProvider('installations').getImmediate(); // Guards against the SDK being used in non-browser environments.\n\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(\"registration-window\"\n      /* REGISTRATION_WINDOW */\n      );\n    } // Normalizes optional inputs.\n\n\n    var _a = app.options,\n        projectId = _a.projectId,\n        apiKey = _a.apiKey,\n        appId = _a.appId;\n\n    if (!projectId) {\n      throw ERROR_FACTORY.create(\"registration-project-id\"\n      /* REGISTRATION_PROJECT_ID */\n      );\n    }\n\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(\"registration-api-key\"\n      /* REGISTRATION_API_KEY */\n      );\n    }\n\n    if (!appId) {\n      throw ERROR_FACTORY.create(\"registration-app-id\"\n      /* REGISTRATION_APP_ID */\n      );\n    }\n\n    namespace = namespace || 'firebase';\n    var storage = new Storage(appId, app.name, namespace);\n    var storageCache = new StorageCache(storage);\n    var logger$1 = new logger.Logger(name); // Sets ERROR as the default log level.\n    // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\n\n    logger$1.logLevel = logger.LogLevel.ERROR;\n    var restClient = new RestClient(installations, // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\n    firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\n    var retryingClient = new RetryingClient(restClient, storage);\n    var cachingClient = new CachingClient(retryingClient, storage, storageCache, logger$1);\n    var remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger$1); // Starts warming cache.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n    remoteConfigInstance.ensureInitialized();\n    return remoteConfigInstance;\n  }\n}\n\nregisterRemoteConfig(firebase__default['default']);\nexports.registerRemoteConfig = registerRemoteConfig;","import '@firebase/remote-config';"],"sourceRoot":""}