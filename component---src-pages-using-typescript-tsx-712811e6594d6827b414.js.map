{"version":3,"sources":["webpack:///./src/pages/using-typescript.tsx","webpack:///./src/components/layout.js"],"names":["UsingTypescript","data","path","title","site","buildTime","href","to","query","logo","isSafari","isMobileSafari","require","theme","createMuiTheme","palette","primary","main","secondary","status","danger","responsiveFontSizes","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","backgroundColor","footer","position","bottom","textAlign","paddingBottom","appBar","top","Layout","children","React","useState","openDrawer","setOpenDrawer","toggleDrawer","useStaticQuery","open","event","type","key","classes","style","minHeight","anchor","onClose","onOpen","home","elevation","edge","className","color","aria-label","onClick","src","alt","height","navigate"],"mappings":"8FAAA,0GAyBeA,UAZyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACtD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,qBACX,sEACA,uEAA4C,wCAA5C,+DAAyH,2CAAzH,wEACA,uEAA4C,0CAA5C,oBAAgF,0CAAhF,gBAAgH,yCAAhH,UACA,6DAAkCD,EAAlC,wBAA6DD,EAAKG,KAAKC,UAAvE,KACA,8DAAmC,uBAAGC,KAAK,6CAAR,kCAAnC,KACA,kBAAC,OAAD,CAAMC,GAAG,KAAT,6BAMG,IAAMC,EAAQ,c,2DC3BrB,8LA+BMC,GA/BN,UA+BeC,YAAYC,iBAAyDC,EAAQ,QAA/CA,EAAQ,SAEjDC,EAAQC,YAAe,CACzBC,QAAS,CACPC,QAAS,CAAEC,KAAM,WACjBC,UAAW,CAAED,KAAM,YAErBE,OAAQ,CACNC,OAAQ,YAGZP,EAAQQ,YAAoBR,GAG5B,IAAMS,EAAYC,aAAW,SAACV,GAAD,MAAY,CACvCW,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAad,EAAMe,QAAQ,GAC3BC,gBAAiB,QACjB,UAAW,CACTA,gBAAiB,UAGrB1B,MAAO,CACLsB,SAAU,GAEZK,OAAQ,CACNC,SAAU,QACVC,OAAQ,EACRC,UAAW,SACXC,cAAe,GACfL,gBAAiB,WAEnBM,OAAQ,CACNC,IAAK,OACLJ,OAAQ,OA8DGK,IA1DA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACKC,IAAMC,UAAS,GAA5CC,EADwB,KACZC,EADY,KAYzBC,GAVOC,yBAAe,cAUP,SAACC,GAAD,OAAU,SAACC,KAC1BA,GAAwB,YAAfA,EAAMC,MAAqC,QAAdD,EAAME,KAA+B,UAAdF,EAAME,MAIvEN,EAAcG,MAGVI,EAAU3B,IAEhB,OACE,oCACE,kBAAC,IAAD,CAAeT,MAAOA,GACpB,yBAAKqC,MAAO,CAACC,UAAW,uBACtB,6BACE,kBAAC,IAAD,CACIC,OAAO,OACPP,KAAMJ,EACNY,QAASV,GAAa,GACtBW,OAAQX,GAAa,IAErB,kBAAC,IAAD,CAAgBY,MAAM,KAE1B,kBAAC,IAAD,CAAQxB,SAAS,SAASmB,MAAO,CAACrB,gBAAiB,eAAgB2B,UAAW,GAC5E,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,KAAK,QAAQC,UAAWT,EAAQvB,WAAYiC,MAAM,UAAUC,aAAW,OAAOC,QAAS,kBAAMnB,GAAeD,KACtH,kBAAC,IAAD,OAEF,yBAAKqB,IAAKrD,EAAMsD,IAAI,OAAOC,OAAO,OAAOH,QAAS,kBAAMI,mBAAS,WAIvE,8BAAO3B,IAET,6BACE,kBAAC,IAAD","file":"component---src-pages-using-typescript-tsx-712811e6594d6827b414.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <SEO title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>This means that you can create and write <em>.ts/.tsx</em> files for your pages, components etc. Please note that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't support TypeScript yet.</p>\n    <p>For type checking you'll want to install <em>typescript</em> via npm and run <em>tsc --init</em> to create a <em>.tsconfig</em> file.</p>\n    <p>You're currently on the page \"{path}\" which was built on {data.site.buildTime}.</p>\n    <p>To learn more, head over to our <a href=\"https://www.gatsbyjs.com/docs/typescript/\">documentation about TypeScript</a>.</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport {isSafari, isMobileSafari} from 'react-device-detect';\n\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport ElementiDrawer from \"../components/ElementiDrawer\"\nimport Footer from \"../components/Footer\"\n\nimport \"./layout.css\"\n\nimport { navigate } from \"gatsby\"\n\nconst logo = !(isSafari || isMobileSafari) ? require(\"../images/logobianco.webp\") : require(\"../images/aeatondo.png\")\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: { main: '#ef6c00' },\n    secondary: { main: '#212121' },\n  },\n  status: {\n    danger: 'orange',\n  },\n});\ntheme = responsiveFontSizes(theme);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    backgroundColor: \"black\",\n    \"&:hover\": {\n      backgroundColor: \"black\"\n    }\n  },\n  title: {\n    flexGrow: 1,\n  },\n  footer: {\n    position: \"fixed\",\n    bottom: 0,\n    textAlign: \"center\",\n    paddingBottom: 10,\n    backgroundColor: \"#ef6c00\",\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n}));\n\nconst Layout = ({ children }) => {\n  const [openDrawer, setOpenDrawer] = React.useState(false);\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  const toggleDrawer = (open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setOpenDrawer(open);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <div style={{minHeight: \"calc(100vh - 64px)\"}} >\n          <div>\n            <SwipeableDrawer\n                anchor=\"left\"\n                open={openDrawer}\n                onClose={toggleDrawer(false)}\n                onOpen={toggleDrawer(true)}\n              >\n                <ElementiDrawer home={false}/>\n            </SwipeableDrawer>\n            <AppBar position=\"static\" style={{backgroundColor: \"transparent\"}} elevation={0}>\n              <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => setOpenDrawer(!openDrawer)}>\n                  <MenuIcon/>\n                </IconButton>\n                <img src={logo} alt=\"logo\" height=\"64px\" onClick={() => navigate(\"/\")}/>\n              </Toolbar>\n            </AppBar>\n          </div>\n          <main>{children}</main>\n        </div>\n        <div>\n          <Footer/>\n        </div>\n      </ThemeProvider>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}