{"version":3,"sources":["webpack:///./node_modules/@firebase/database/dist/index.cjs.js"],"names":["Object","defineProperty","exports","value","firebase","tslib","util","logger$1","component","_interopDefaultLegacy","e","id","firebase__default","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spread","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","path","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","domain","indexOf","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","location","protocol","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","decodePath","queryParams","queryString","e_1","_a","results","charAt","_b","__values","_c","next","done","segment","kv","e_1_1","return","call","decodeQuery","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","root","base12","buildPennant","chunkSize","low","high","childTree","buildBalancedTree","namedNode","middle","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","query","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","validateContextObject","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","existing","unused","delta","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","delete","forEachTree","prefixPath","func","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","subtree","Empty","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","values","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","__read","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","code","reason","toUpperCase","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","readyState","called_1","wrappedFn_1","body","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","href","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","version","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","p","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","_e","_f","clientName","isReactNative","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","Repo","forceRestClient","app","authTokenProvider","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","search","authOverride","appId","addTokenChangeListener","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","Promise","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","authProvider","databaseURL","projectId","isEmulator","dbEmulatorHost","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","__awaiter","__generator","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","_forceRestClient","registerDatabase","instance","setSDKVersion","registerComponent","Component","getProvider","setServiceProps","setMultipleInstances","registerVersion","module"],"mappings":"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","file":"8673774c-413ed6f24960d0805faa.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar firebase = require('@firebase/app');\n\nvar tslib = require('tslib');\n\nvar util = require('@firebase/util');\n\nvar logger$1 = require('@firebase/logger');\n\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\n\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param {string} key The key to save the value under\r\n   * @param {?Object} value The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   * @return {*} The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return util.jsonEval(storedVal);\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   */\n\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n  /**\r\n   * @param {string} name\r\n   * @return {string}\r\n   */\n\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (util.contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function createStoragefor(domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new logger$1.Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\n\n\nvar sha1 = function sha1(str) {\n  var utf8Bytes = util.stringToByteArray(str);\n  var sha1 = new util.Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return util.base64.encodeByteArray(sha1Bytes);\n};\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\n\n\nvar buildLogMessage_ = function buildLogMessage_() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += util.stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function enableLogging(logger_, persistent) {\n  util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = logger$1.LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\n\n\nvar log = function log() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\n\n\nvar logWrapper = function logWrapper(prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, tslib.__spread([prefix], varArgs));\n  };\n};\n/**\r\n * @param {...string} varArgs\r\n */\n\n\nvar error = function error() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\n  logClient.error(message);\n};\n/**\r\n * @param {...string} varArgs\r\n */\n\n\nvar fatal = function fatal() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\n  logClient.error(message);\n  throw new Error(message);\n};\n/**\r\n * @param {...*} varArgs\r\n */\n\n\nvar warn = function warn() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\n\n\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n/**\r\n * @param {function()} fn\r\n */\n\n\nvar executeWhenDOMReady = function executeWhenDOMReady(fn) {\n  if (util.isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\n\nvar nameCompare = function nameCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\n\n\nvar stringCompare = function stringCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\n\n\nvar requireKey = function requireKey(key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\n  }\n};\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\n\n\nvar ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return util.stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += util.stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\n\n\nvar doubleToIEEE754String = function doubleToIEEE754String(v) {\n  util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\n\n\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\n\n\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\n\n\nvar errorForServerCode = function errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n};\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\n\nvar tryParseInt = function tryParseInt(str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= -2147483648 && intVal <= 2147483647) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\n\n\nvar exceptionGuard = function exceptionGuard(fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function beingCrawled() {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string|Array.<string>} pathOrString Path string to parse,\r\n   *      or another path, or the raw tokens array\r\n   * @param {number=} pieceNum\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Object.defineProperty(Path, \"Empty\", {\n    /**\r\n     * Singleton to represent an empty path\r\n     *\r\n     * @const\r\n     */\n    get: function get() {\n      return new Path('');\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Path.prototype.getFront = function () {\n    if (this.pieceNum_ >= this.pieces_.length) {\n      return null;\n    }\n\n    return this.pieces_[this.pieceNum_];\n  };\n  /**\r\n   * @return {number} The number of segments in this path\r\n   */\n\n\n  Path.prototype.getLength = function () {\n    return this.pieces_.length - this.pieceNum_;\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.popFront = function () {\n    var pieceNum = this.pieceNum_;\n\n    if (pieceNum < this.pieces_.length) {\n      pieceNum++;\n    }\n\n    return new Path(this.pieces_, pieceNum);\n  };\n  /**\r\n   * @return {?string}\r\n   */\n\n\n  Path.prototype.getBack = function () {\n    if (this.pieceNum_ < this.pieces_.length) {\n      return this.pieces_[this.pieces_.length - 1];\n    }\n\n    return null;\n  };\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  Path.prototype.toUrlEncodedString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n      }\n    }\n\n    return pathString || '/';\n  };\n  /**\r\n   * Shallow copy of the parts of the path.\r\n   *\r\n   * @param {number=} begin\r\n   * @return {!Array<string>}\r\n   */\n\n\n  Path.prototype.slice = function (begin) {\n    if (begin === void 0) {\n      begin = 0;\n    }\n\n    return this.pieces_.slice(this.pieceNum_ + begin);\n  };\n  /**\r\n   * @return {?Path}\r\n   */\n\n\n  Path.prototype.parent = function () {\n    if (this.pieceNum_ >= this.pieces_.length) {\n      return null;\n    }\n\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @param {string|!Path} childPathObj\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.child = function (childPathObj) {\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    if (childPathObj instanceof Path) {\n      for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n        pieces.push(childPathObj.pieces_[i]);\n      }\n    } else {\n      var childPieces = childPathObj.split('/');\n\n      for (var i = 0; i < childPieces.length; i++) {\n        if (childPieces[i].length > 0) {\n          pieces.push(childPieces[i]);\n        }\n      }\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @return {boolean} True if there are no segments in this path\r\n   */\n\n\n  Path.prototype.isEmpty = function () {\n    return this.pieceNum_ >= this.pieces_.length;\n  };\n  /**\r\n   * @param {!Path} outerPath\r\n   * @param {!Path} innerPath\r\n   * @return {!Path} The path from outerPath to innerPath\r\n   */\n\n\n  Path.relativePath = function (outerPath, innerPath) {\n    var outer = outerPath.getFront(),\n        inner = innerPath.getFront();\n\n    if (outer === null) {\n      return innerPath;\n    } else if (outer === inner) {\n      return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n    } else {\n      throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n    }\n  };\n  /**\r\n   * @param {!Path} left\r\n   * @param {!Path} right\r\n   * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n   */\n\n\n  Path.comparePaths = function (left, right) {\n    var leftKeys = left.slice();\n    var rightKeys = right.slice();\n\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n      var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n      if (cmp !== 0) {\n        return cmp;\n      }\n    }\n\n    if (leftKeys.length === rightKeys.length) {\n      return 0;\n    }\n\n    return leftKeys.length < rightKeys.length ? -1 : 1;\n  };\n  /**\r\n   *\r\n   * @param {Path} other\r\n   * @return {boolean} true if paths are the same.\r\n   */\n\n\n  Path.prototype.equals = function (other) {\n    if (this.getLength() !== other.getLength()) {\n      return false;\n    }\n\n    for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   *\r\n   * @param {!Path} other\r\n   * @return {boolean} True if this path is a parent (or the same as) other\r\n   */\n\n\n  Path.prototype.contains = function (other) {\n    var i = this.pieceNum_;\n    var j = other.pieceNum_;\n\n    if (this.getLength() > other.getLength()) {\n      return false;\n    }\n\n    while (i < this.pieces_.length) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n\n      ++i;\n      ++j;\n    }\n\n    return true;\n  };\n\n  return Path;\n}(); // end Path\n\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path Initial Path.\r\n   * @param {string} errorPrefix_ Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    /** @type {!Array<string>} */\n\n    this.parts_ = path.slice();\n    /** @type {number} Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += util.stringLength(this.parts_[i]);\n    }\n\n    this.checkValid_();\n  }\n\n  Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n    /** @const {number} Maximum key depth. */\n    get: function get() {\n      return 32;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n    /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n    get: function get() {\n      return 768;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @param {string} child */\n\n  ValidationPath.prototype.push = function (child) {\n    // Count the needed '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ += 1;\n    }\n\n    this.parts_.push(child);\n    this.byteLength_ += util.stringLength(child);\n    this.checkValid_();\n  };\n\n  ValidationPath.prototype.pop = function () {\n    var last = this.parts_.pop();\n    this.byteLength_ -= util.stringLength(last); // Un-count the previous '/'\n\n    if (this.parts_.length > 0) {\n      this.byteLength_ -= 1;\n    }\n  };\n\n  ValidationPath.prototype.checkValid_ = function () {\n    if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n      throw new Error(this.errorPrefix_ + 'has a key path longer than ' + ValidationPath.MAX_PATH_LENGTH_BYTES + ' bytes (' + this.byteLength_ + ').');\n    }\n\n    if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n      throw new Error(this.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + ValidationPath.MAX_PATH_DEPTH + ') or object contains a cycle ' + this.toErrorString());\n    }\n  };\n  /**\r\n   * String for use in error messages - uses '.' notation for path.\r\n   *\r\n   * @return {string}\r\n   */\n\n\n  ValidationPath.prototype.toErrorString = function () {\n    if (this.parts_.length === 0) {\n      return '';\n    }\n\n    return \"in property '\" + this.parts_.join('.') + \"'\";\n  };\n\n  return ValidationPath;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f';\nvar FORGE_DOMAIN = 'firebaseio.com';\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param host Hostname portion of the url for the repo\r\n   * @param secure Whether or not this repo is accessed over ssl\r\n   * @param namespace The namespace represented by the repo\r\n   * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this.host = host.toLowerCase();\n    this.domain = this.host.substr(this.host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this.host;\n  }\n\n  RepoInfo.prototype.needsQueryParam = function () {\n    return this.host !== this.internalHost || this.isCustomHost() || this.includeNamespaceInQueryParams;\n  };\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isDemoHost = function () {\n    return this.domain === 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.updateHost = function (newHost) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this.host, this.internalHost);\n      }\n    }\n  };\n  /**\r\n   * Returns the websocket URL for this repo\r\n   * @param {string} type of connection\r\n   * @param {Object} params list\r\n   * @return {string} The URL for this repo\r\n   */\n\n\n  RepoInfo.prototype.connectionURL = function (type, params) {\n    util.assert(typeof type === 'string', 'typeof type must == string');\n    util.assert(typeof params === 'object', 'typeof params must == object');\n    var connURL;\n\n    if (type === WEBSOCKET) {\n      connURL = (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n    } else if (type === LONG_POLLING) {\n      connURL = (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n    } else {\n      throw new Error('Unknown connection type: ' + type);\n    }\n\n    if (this.needsQueryParam()) {\n      params['ns'] = this.namespace;\n    }\n\n    var pairs = [];\n    each(params, function (key, value) {\n      pairs.push(key + '=' + value);\n    });\n    return connURL + pairs.join('&');\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toURLString = function () {\n    return (this.secure ? 'https://' : 'http://') + this.host;\n  };\n\n  return RepoInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = tslib.__values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n\nvar parseRepoInfo = function parseRepoInfo(dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\n\n\nvar parseDatabaseURL = function parseDatabaseURL(dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\n\nvar isValidKey = function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidPathString = function isValidPathString(pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\n\n\nvar isValidPriority = function isValidPriority(priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  util.contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\n\n\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && util.stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + path.toErrorString() + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + path.toErrorString() + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + path.toErrorString() + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\n\n\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = curPath.slice();\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(Path.comparePaths);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && prevPath.contains(curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, path.child(curPath));\n\n    if (curPath.getBack() === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nvar validatePriority = function validatePriority(fnName, argumentNumber, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function validateEventType(fnName, argumentNumber, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function validateKey(fnName, argumentNumber, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function validatePathString(fnName, argumentNumber, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function validateRootPathString(fnName, argumentNumber, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n  if (path.getFront() === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function validateUrl(fnName, argumentNumber, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function validateBoolean(fnName, argumentNumber, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Repo} repo_\r\n   * @param {!Path} path_\r\n   */\n  function OnDisconnect(repo_, path_) {\n    this.repo_ = repo_;\n    this.path_ = path_;\n  }\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    util.validateCallback('OnDisconnect.set', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {number|string|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n    util.validateCallback('OnDisconnect.update', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   * @constructor\r\n   * @dict\r\n   * @param {boolean} committed\r\n   * @param {DataSnapshot} snapshot\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\n\nvar nextPushId = function () {\n  // Modeled after base64 web-safe chars, but ordered by ASCII.\n  var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz'; // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    util.assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    util.assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n  /**\r\n   *\r\n   * @param {!string} name\r\n   * @param {!Node} node\r\n   * @return {NamedNode}\r\n   */\n\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @constructor\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   * @param {!Node} oldNode\r\n   * @param {!Node} newNode\r\n   * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function get() {\n      return __EMPTY_NODE;\n    },\n    set: function set(val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @inheritDoc\r\n   */\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\n\n\nvar priorityHashText = function priorityHashText(priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\n\n\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    util.assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && util.contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @implements {Node}\r\n   * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n   *                                         The object type is possible in the event of a deferred value\r\n   * @param {!Node=} priorityNode_ The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function get() {\n      return __childrenNodeConstructor;\n    },\n    set: function set(val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else if (path.getFront() === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @return {Object|string|number|boolean} The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      util.assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   * @param {!LeafNode} otherLeaf\r\n   * @return {!number}\r\n   * @private\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.equals = function (other) {\n    /**\r\n     * @inheritDoc\r\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   * @type {Array.<!string>}\r\n   * @const\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V, T\r\n   * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n   * @param {?K} startKey\r\n   * @param {function(K, K): number} comparator\r\n   * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n   * @param {(function(K, V):T)=} resultGenerator_\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    /** @private\r\n     * @type {Array.<!LLRBNode>}\r\n     */\n\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {!K} key Key associated with this node.\r\n   * @param {!V} value Value associated with this node.\r\n   * @param {?boolean} color Whether this node is red.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param {?K} key New key for the node, or null.\r\n   * @param {?V} value New value for the node, or null.\r\n   * @param {?boolean} color New color for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n   * @return {!LLRBNode} The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {*} True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @return {!Object} The minimum node in the tree.\r\n   * @private\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Object} key Key to insert.\r\n   * @param {!Object} value Value to insert.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param {!Object} key The key of the item to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @private\r\n   * @return {boolean} True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @return {!LLRBEmptyNode} The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBEmptyNode} New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {function(K, K):number} comparator_ Key comparator.\r\n   * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @return {!SortedMap.<K, V>} New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @return {!SortedMap.<K, V>} New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param {!K} key The key to look up.\r\n   * @return {?V} The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param {K} key The key to find the predecessor of\r\n   * @return {?K} The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @return {boolean} True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @return {number} The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @return {?K} The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @return {?K} The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @template T\r\n   * @param {(function(K, V):T)=} resultGenerator\r\n   * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   * @const\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_2 = Math.log(2);\n/**\r\n * @constructor\r\n */\n\nvar Base12Num =\n/** @class */\nfunction () {\n  /**\r\n   * @param {number} length\r\n   */\n  function Base12Num(length) {\n    var logBase2 = function logBase2(num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function bitMask(bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\n\n\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function buildBalancedTree(low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function buildFrom12Array(base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function buildPennant(chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function attachPennant(pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function get() {\n      util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = util.safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return util.contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = tslib.__assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = tslib.__assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\n      var index = util.safeGet(_this.indexSet_, indexName);\n      util.assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = util.map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!SortedMap.<string, !Node>} children_ List of children\r\n   * of this node..\r\n   * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n   * @param {!IndexMap} indexMap_\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function get() {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(path.popFront());\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    util.assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n  /**\r\n   *\r\n   * @param {!NamedNode} startPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n  /**\r\n   * @param {!NamedNode} endPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   * @private\r\n   * @param {!Index} indexDefinition\r\n   * @return {?SortedMap.<NamedNode, Node>}\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n  /**\r\n   * @private\r\n   * @type {RegExp}\r\n   */\n\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\n\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  tslib.__extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  util.assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (util.contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n  /**\r\n   * @param {!Node} snap\r\n   * @return {!Node}\r\n   * @protected\r\n   */\n\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.toString = function () {\n    return this.indexPath_.slice().join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_ A SnapshotNode to wrap.\r\n   * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n   * @param {!Index} index_ The iteration order for this snapshot\r\n   */\n  function DataSnapshot(node_, ref_, index_) {\n    this.node_ = node_;\n    this.ref_ = ref_;\n    this.index_ = index_;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {!DataSnapshot} DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (childPathString) {\n    util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    var childRef = this.ref_.child(childPath);\n    return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {boolean} Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (childPathString) {\n    util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @return {string|number|null} The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length); // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n\n    return this.node_.getPriority().val();\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param {function(!DataSnapshot)} action Callback function to be called\r\n   * for each child.\r\n   * @return {boolean} True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    util.validateCallback('DataSnapshot.forEach', 1, action, false);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this.node_; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this.index_, function (key, node) {\n      return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    } else {\n      return !this.node_.isEmpty();\n    }\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function get() {\n      return this.ref_.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @return {number} The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this.node_.numChildren();\n  };\n  /**\r\n   * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return this.ref_;\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n   * @param {!DataSnapshot} snapshot The data backing the event\r\n   * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.getRef();\n\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + util.stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {EventRegistration} eventRegistration\r\n   * @param {Error} error\r\n   * @param {!Path} path\r\n   */\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?function(!DataSnapshot)} callback_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {?Object} context_\r\n   */\n  function ValueEventRegistration(callback_, cancelCallback_, context_) {\n    this.callback_ = callback_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_1 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_1.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_1 = this.callback_;\n      return function () {\n        cb_1.call(ctx, eventData.snapshot);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callback_ === this.callback_ && other.context_ === this.context_;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callback_ !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {Object=} context_\r\n   */\n  function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n    this.callbacks_ = callbacks_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return util.contains(this.callbacks_, eventToCheck);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    util.assert(change.childName != null, 'Child events should have a childName.');\n    var ref = query.getRef().child(\n    /** @type {!string} */\n    change.childName);\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_2 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_2.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_2 = this.callbacks_[eventData.eventType];\n      return function () {\n        cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    var _this = this;\n\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        var otherKeys = Object.keys(other.callbacks_);\n        var thisKeys = Object.keys(this.callbacks_);\n        var otherCount = otherKeys.length;\n        var thisCount = thisKeys.length;\n\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey = otherKeys[0];\n            var thisKey = thisKeys[0];\n            return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(function (eventType) {\n              return other.callbacks_[eventType] === _this.callbacks_[eventType];\n            });\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks_ !== null;\n  };\n\n  return ChildEventRegistration;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor;\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(repo, path, queryParams_, orderByCalled_) {\n    this.repo = repo;\n    this.path = path;\n    this.queryParams_ = queryParams_;\n    this.orderByCalled_ = orderByCalled_;\n  }\n\n  Object.defineProperty(Query, \"__referenceConstructor\", {\n    get: function get() {\n      util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\n      return __referenceConstructor;\n    },\n    set: function set(val) {\n      __referenceConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Validates start/end values for queries.\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n  Query.validateQueryEndpoints_ = function (params) {\n    var startNode = null;\n    var endNode = null;\n\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n      var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' + 'or equalTo() must be a string.';\n\n      if (params.hasStart()) {\n        var startName = params.getIndexStartName();\n\n        if (startName !== MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n\n      if (params.hasEnd()) {\n        var endName = params.getIndexEndName();\n\n        if (endName !== MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n        throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\n      }\n    } else {\n      util.assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n      if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n        throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' + 'an object.');\n      }\n    }\n  };\n  /**\r\n   * Validates that limit* has been called with the correct combination of parameters\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n\n  Query.validateLimit_ = function (params) {\n    if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n      throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\n    }\n  };\n  /**\r\n   * Validates that no other order by call has been made\r\n   * @param {!string} fnName\r\n   * @private\r\n   */\n\n\n  Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   */\n\n\n  Query.prototype.getQueryParams = function () {\n    return this.queryParams_;\n  };\n  /**\r\n   * @return {!Reference}\r\n   */\n\n\n  Query.prototype.getRef = function () {\n    util.validateArgCount('Query.ref', 0, 0, arguments.length); // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n\n    return new Query.__referenceConstructor(this.repo, this.path);\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @param {!function(DataSnapshot, string=)} callback\r\n   * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n   * @param {Object=} context\r\n   * @return {!function(DataSnapshot, string=)}\r\n   */\n\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    util.validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    util.validateCallback('Query.on', 2, callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      var callbacks = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n\n    return callback;\n  };\n  /**\r\n   * @param {!function(!DataSnapshot)} callback\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n    var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n    var container = new ChildEventRegistration(callbacks, cancelCallback, context);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {string=} eventType\r\n   * @param {(function(!DataSnapshot, ?string=))=} callback\r\n   * @param {Object=} context\r\n   */\n\n\n  Query.prototype.off = function (eventType, callback, context) {\n    util.validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    util.validateCallback('Query.off', 2, callback, true);\n    util.validateContextObject('Query.off', 3, context, true);\n    var container = null;\n    var callbacks = null;\n\n    if (eventType === 'value') {\n      var valueCallback = callback || null;\n      container = new ValueEventRegistration(valueCallback, null, context || null);\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n\n    this.repo.removeEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   * @param {!string} eventType\r\n   * @param {!function(!DataSnapshot, string=)} userCallback\r\n   * @param failureCallbackOrContext\r\n   * @param context\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    util.validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    util.validateCallback('Query.once', 2, userCallback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context); // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n\n    var firstCall = true;\n    var deferred = new util.Deferred(); // A dummy error handler in case a user wasn't expecting promises\n\n    deferred.promise.catch(function () {});\n\n    var onceCallback = function onceCallback(snapshot) {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n\n        _this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(eventType, onceCallback,\n    /*cancel=*/\n    function (err) {\n      _this.off(eventType, onceCallback);\n\n      if (ret.cancel) {\n        ret.cancel.bind(ret.context)(err);\n      }\n\n      deferred.reject(err);\n    });\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToLast: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   * @param {!string} path\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n\n    if (path === '$key') {\n      throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n    } else if (path === '$priority') {\n      throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n    } else if (path === '$value') {\n      throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n    }\n\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    var parsedPath = new Path(path);\n\n    if (parsedPath.isEmpty()) {\n      throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = this.queryParams_.orderBy(index);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    var newParams = this.queryParams_.orderBy(KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    var newParams = this.queryParams_.orderBy(VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    util.validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n    var newParams = this.queryParams_.startAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');\n    } // Calling with no params tells us to start at the beginning.\n\n\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    util.validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n    var newParams = this.queryParams_.endAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   * @param {number|string|boolean|null} value\r\n   * @param {string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' + 'equalTo).');\n    }\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n    }\n\n    return this.startAt(value, name).endAt(value, name);\n  };\n  /**\r\n   * @return {!string} URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    util.validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this.repo.toString() + this.path.toUrlEncodedString();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  };\n  /**\r\n   * An object representation of the query parameters used by this Query.\r\n   * @return {!Object}\r\n   */\n\n\n  Query.prototype.queryObject = function () {\n    return this.queryParams_.getQueryObject();\n  };\n  /**\r\n   * @return {!string}\r\n   */\n\n\n  Query.prototype.queryIdentifier = function () {\n    var obj = this.queryObject();\n    var id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   * @param {Query} other\r\n   * @return {boolean}\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    var sameRepo = this.repo === other.repo;\n    var samePath = this.path.equals(other.path);\n    var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param {!string} fnName The function name (on or once)\r\n   * @param {(function(Error)|Object)=} cancelOrContext\r\n   * @param {Object=} context\r\n   * @return {{cancel: ?function(Error), context: ?Object}}\r\n   * @private\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: null,\n      context: null\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      util.validateCallback(fnName, 3, ret.cancel, true);\n      ret.context = context;\n      util.validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(util.errorPrefix(fnName, 3, true) + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = this.path_.child(childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return this.syncTree_.calcCompleteEventCache(this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\n\n\nvar generateWithValues = function generateWithValues(values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\n\n\nvar resolveDeferredLeafValue = function resolveDeferredLeafValue(value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    util.assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function resolveScalarDeferredValue(op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      util.assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function resolveComplexDeferredValue(op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    util.assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    util.assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  util.assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\n\n\nvar resolveDeferredValueTree = function resolveDeferredValueTree(path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\n\n\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\n\n\nvar SparseSnapshotTree =\n/** @class */\nfunction () {\n  function SparseSnapshotTree() {\n    this.value = null;\n    this.children = new Map();\n  }\n  /**\r\n   * Gets the node stored at the given path if one exists.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return The retrieved node, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.find = function (path) {\n    if (this.value != null) {\n      return this.value.getChild(path);\n    } else if (!path.isEmpty() && this.children.size > 0) {\n      var childKey = path.getFront();\n      path = path.popFront();\n\n      if (this.children.has(childKey)) {\n        var childTree = this.children.get(childKey);\n        return childTree.find(path);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Stores the given node at the specified path. If there is already a node\r\n   * at a shallower path, it merges the new data into that snapshot node.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @param data The new data, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.remember = function (path, data) {\n    if (path.isEmpty()) {\n      this.value = data;\n      this.children.clear();\n    } else if (this.value !== null) {\n      this.value = this.value.updateChild(path, data);\n    } else {\n      var childKey = path.getFront();\n\n      if (!this.children.has(childKey)) {\n        this.children.set(childKey, new SparseSnapshotTree());\n      }\n\n      var child = this.children.get(childKey);\n      path = path.popFront();\n      child.remember(path, data);\n    }\n  };\n  /**\r\n   * Purge the data at path from the cache.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return True if this node should now be removed.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forget = function (path) {\n    if (path.isEmpty()) {\n      this.value = null;\n      this.children.clear();\n      return true;\n    } else {\n      if (this.value !== null) {\n        if (this.value.isLeafNode()) {\n          // We're trying to forget a node that doesn't exist\n          return false;\n        } else {\n          var value = this.value;\n          this.value = null;\n          var self_1 = this;\n          value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n            self_1.remember(new Path(key), tree);\n          });\n          return this.forget(path);\n        }\n      } else if (this.children.size > 0) {\n        var childKey = path.getFront();\n        path = path.popFront();\n\n        if (this.children.has(childKey)) {\n          var safeToRemove = this.children.get(childKey).forget(path);\n\n          if (safeToRemove) {\n            this.children.delete(childKey);\n          }\n        }\n\n        return this.children.size === 0;\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\r\n   * Recursively iterates through all of the stored tree and calls the\r\n   * callback on each one.\r\n   *\r\n   * @param prefixPath Path to look up node for.\r\n   * @param func The function to invoke for each tree.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n    if (this.value !== null) {\n      func(prefixPath, this.value);\n    } else {\n      this.forEachChild(function (key, tree) {\n        var path = new Path(prefixPath.toString() + '/' + key);\n        tree.forEachTree(path, func);\n      });\n    }\n  };\n  /**\r\n   * Iterates through each immediate child and triggers the callback.\r\n   *\r\n   * @param func The function to invoke for each child.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachChild = function (func) {\n    this.children.forEach(function (tree, key) {\n      func(key, tree);\n    });\n  };\n\n  return SparseSnapshotTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\n\n\nvar OperationSource =\n/** @class */\nfunction () {\n  function OperationSource(fromUser, fromServer, queryId, tagged) {\n    this.fromUser = fromUser;\n    this.fromServer = fromServer;\n    this.queryId = queryId;\n    this.tagged = tagged;\n    util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\n  }\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n\n  OperationSource.User = new OperationSource(\n  /*fromUser=*/\n  true, false, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n  OperationSource.Server = new OperationSource(false,\n  /*fromServer=*/\n  true, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @param {string} queryId\r\n   * @return {!OperationSource}\r\n   */\n\n  OperationSource.forServerTaggedQuery = function (queryId) {\n    return new OperationSource(false,\n    /*fromServer=*/\n    true, queryId,\n    /*tagged=*/\n    true);\n  };\n\n  return OperationSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n   * @param {!boolean} revert\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = OperationSource.User;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!this.path.isEmpty()) {\n      util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(Path.Empty, childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\n\nvar EmptyChildren = function EmptyChildren() {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {?T} value\r\n   * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n   */\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n  /**\r\n   * @template T\r\n   * @param {!Object.<string, !T>} obj\r\n   * @return {!ImmutableTree.<!T>}\r\n   */\n\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = ImmutableTree.Empty;\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   * @return {boolean}\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n   * on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param {!Path} relativePath The remainder of the path\r\n   * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n   *   node\r\n   * @return {?{path:!Path, value:!T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: Path.Empty,\n        value: this.value\n      };\n    } else {\n      if (relativePath.isEmpty()) {\n        return null;\n      } else {\n        var front = relativePath.getFront();\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = new Path(front).child(childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   * @param {!Path} relativePath\r\n   * @return {?{path: !Path, value: !T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @param {!Path} relativePath\r\n   * @return {!ImmutableTree.<T>} The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this;\n    } else {\n      var front = relativePath.getFront();\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(relativePath.popFront());\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to set value at.\r\n   * @param {?T} toSet Value to set.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (relativePath.isEmpty()) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.set(relativePath.popFront(), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to value to remove.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      if (this.children.isEmpty()) {\n        return ImmutableTree.Empty;\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(relativePath.popFront());\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return ImmutableTree.Empty;\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param {!Path} relativePath Path to get value for.\r\n   * @return {?T} Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this.value;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(relativePath.popFront());\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param {!Path} relativePath Path to replace subtree for.\r\n   * @param {!ImmutableTree} newTree New tree.\r\n   * @return {!ImmutableTree} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (relativePath.isEmpty()) {\n      return newTree;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.setTree(relativePath.popFront(), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   * @template V\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(Path.Empty, fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   * @template V\r\n   * @param {!Path} pathSoFar\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   * @private\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   * @template V\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T):?V} f\r\n   * @return {?V}\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathToFollow.isEmpty()) {\n        return null;\n      } else {\n        var front = pathToFollow.getFront();\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T)} f\r\n   * @returns {!ImmutableTree.<T>}\r\n   */\n\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathToFollow.isEmpty()) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathToFollow.getFront();\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param {function(!Path, !T)} f A function to be called with\r\n   *   the path from the root of the tree to a node, and the value at that node.\r\n   *   Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(currentRelativePath.child(childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n  /**\r\n   *\r\n   * @param {function(string, !T)} f\r\n   */\n\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  ImmutableTree.Empty = new ImmutableTree(null);\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new ListenComplete(this.source, Path.Empty);\n    } else {\n      return new ListenComplete(this.source, this.path.popFront());\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, Path.Empty, childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, Path.Empty, childTree);\n      }\n    } else {\n      util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, this.path.popFront(), this.children);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_\r\n   * @param {boolean} fullyInitialized_\r\n   * @param {boolean} filtered_\r\n   */\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (path.isEmpty()) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = path.getFront();\n    return this.isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!string} key\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n  /**\r\n   * @return {!Node}\r\n   */\n\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\n\n\nvar ViewCache =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!CacheNode} eventCache_\r\n   * @param {!CacheNode} serverCache_\r\n   */\n  function ViewCache(eventCache_, serverCache_) {\n    this.eventCache_ = eventCache_;\n    this.serverCache_ = serverCache_;\n  }\n  /**\r\n   * @param {!Node} eventSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n    return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\n  };\n  /**\r\n   * @param {!Node} serverSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n    return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getEventCache = function () {\n    return this.eventCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteEventSnap = function () {\n    return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getServerCache = function () {\n    return this.serverCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteServerSnap = function () {\n    return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;\n  };\n  /**\r\n   * @const\r\n   * @type {ViewCache}\r\n   */\n\n\n  ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false), new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false));\n  return ViewCache;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\n\n\nvar Change =\n/** @class */\nfunction () {\n  function Change(type, snapshotNode, childName, oldSnap, prevName) {\n    this.type = type;\n    this.snapshotNode = snapshotNode;\n    this.childName = childName;\n    this.oldSnap = oldSnap;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.valueChange = function (snapshot) {\n    return new Change(Change.VALUE, snapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childAddedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_ADDED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childRemovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} newSnapshot\r\n   * @param {!Node} oldSnapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n    return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childMovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_MOVED, snapshot, childKey);\n  }; //event types\n\n  /** Event type for a child added */\n\n\n  Change.CHILD_ADDED = 'child_added';\n  /** Event type for a child removed */\n\n  Change.CHILD_REMOVED = 'child_removed';\n  /** Event type for a child changed */\n\n  Change.CHILD_CHANGED = 'child_changed';\n  /** Event type for a child moved */\n\n  Change.CHILD_MOVED = 'child_moved';\n  /** Event type for a value change */\n\n  Change.VALUE = 'value';\n  return Change;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\n        } else {\n          util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    util.assert(type === Change.CHILD_ADDED || type === Change.CHILD_CHANGED || type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\n    util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\n        this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\n      } else if (type === Change.CHILD_REMOVED && oldType === Change.CHILD_ADDED) {\n        this.changeMap.delete(childKey);\n      } else if (type === Change.CHILD_REMOVED && oldType === Change.CHILD_CHANGED) {\n        this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\n      } else if (type === Change.CHILD_CHANGED && oldType === Change.CHILD_ADDED) {\n        this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\n      } else if (type === Change.CHILD_CHANGED && oldType === Change.CHILD_CHANGED) {\n        this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\n      } else {\n        throw util.assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!WriteTreeRef} writes_\r\n   * @param {!ViewCache} viewCache_\r\n   * @param {?Node} optCompleteServerCache_\r\n   */\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.getEventCache();\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();\n    var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar ProcessorResult =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Array.<!Change>} changes\r\n   */\n  function ProcessorResult(viewCache, changes) {\n    this.viewCache = viewCache;\n    this.changes = changes;\n  }\n\n  return ProcessorResult;\n}();\n/**\r\n * @constructor\r\n */\n\n\nvar ViewProcessor =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!NodeFilter} filter_\r\n   */\n  function ViewProcessor(filter_) {\n    this.filter_ = filter_;\n  }\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   */\n\n\n  ViewProcessor.prototype.assertIndexed = function (viewCache) {\n    util.assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n    util.assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @return {!ProcessorResult}\r\n   */\n\n\n  ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n    var accumulator = new ChildChangeAccumulator();\n    var newViewCache, filterServerNode;\n\n    if (operation.type === OperationType.OVERWRITE) {\n      var overwrite = operation;\n\n      if (overwrite.source.fromUser) {\n        newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n      } else {\n        util.assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n        // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n        // again\n\n        filterServerNode = overwrite.source.tagged || oldViewCache.getServerCache().isFiltered() && !overwrite.path.isEmpty();\n        newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.MERGE) {\n      var merge = operation;\n\n      if (merge.source.fromUser) {\n        newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n      } else {\n        util.assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n        filterServerNode = merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n        newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.ACK_USER_WRITE) {\n      var ackUserWrite = operation;\n\n      if (!ackUserWrite.revert) {\n        newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n      } else {\n        newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n      }\n    } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n      newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n    } else {\n      throw util.assertionError('Unknown operation type: ' + operation.type);\n    }\n\n    var changes = accumulator.getChanges();\n    ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n    return new ProcessorResult(newViewCache, changes);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!ViewCache} newViewCache\r\n   * @param {!Array.<!Change>} accumulator\r\n   * @private\r\n   */\n\n\n  ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n    var eventSnap = newViewCache.getEventCache();\n\n    if (eventSnap.isFullyInitialized()) {\n      var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n      var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n\n      if (accumulator.length > 0 || !oldViewCache.getEventCache().isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(\n      /** @type {!Node} */\n      oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n        accumulator.push(Change.valueChange(\n        /** @type {!Node} */\n        newViewCache.getCompleteEventSnap()));\n      }\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} changePath\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!CompleteChildSource} source\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n    var oldEventSnap = viewCache.getEventCache();\n\n    if (writesCache.shadowingWrite(changePath) != null) {\n      // we have a shadowing write, ignore changes\n      return viewCache;\n    } else {\n      var newEventCache = void 0,\n          serverNode = void 0;\n\n      if (changePath.isEmpty()) {\n        // TODO: figure out how this plays with \"sliding ack windows\"\n        util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n        if (viewCache.getServerCache().isFiltered()) {\n          // We need to special case this, because we need to only apply writes to complete children, or\n          // we might end up raising events for incomplete children. If the server data is filtered deep\n          // writes cannot be guaranteed to be complete\n          var serverCache = viewCache.getCompleteServerSnap();\n          var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n          var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n        } else {\n          var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n        }\n      } else {\n        var childKey = changePath.getFront();\n\n        if (childKey === '.priority') {\n          util.assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\n          var oldEventNode = oldEventSnap.getNode();\n          serverNode = viewCache.getServerCache().getNode(); // we might have overwrites for this priority\n\n          var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n\n          if (updatedPriority != null) {\n            newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n          } else {\n            // priority didn't change, keep old node\n            newEventCache = oldEventSnap.getNode();\n          }\n        } else {\n          var childChangePath = changePath.popFront(); // update child\n\n          var newEventChild = void 0;\n\n          if (oldEventSnap.isCompleteForChild(childKey)) {\n            serverNode = viewCache.getServerCache().getNode();\n            var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n\n            if (eventChildUpdate != null) {\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n            } else {\n              // Nothing changed, just keep the old child\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n            }\n          } else {\n            newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n          }\n\n          if (newEventChild != null) {\n            newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n          } else {\n            // no complete child available or no change\n            newEventCache = oldEventSnap.getNode();\n          }\n        }\n      }\n\n      return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\n    }\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n    var oldServerSnap = oldViewCache.getServerCache();\n    var newServerCache;\n    var serverFilter = filterServerNode ? this.filter_ : this.filter_.getIndexedFilter();\n\n    if (changePath.isEmpty()) {\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n    } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n      // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n      var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n    } else {\n      var childKey = changePath.getFront();\n\n      if (!oldServerSnap.isCompleteForPath(changePath) && changePath.getLength() > 1) {\n        // We don't update incomplete nodes with updates intended for other listeners\n        return oldViewCache;\n      }\n\n      var childChangePath = changePath.popFront();\n      var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n      var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n      if (childKey === '.priority') {\n        newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n      } else {\n        newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n      }\n    }\n\n    var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n    return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n    var oldEventSnap = oldViewCache.getEventCache();\n    var newViewCache, newEventCache;\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n    if (changePath.isEmpty()) {\n      newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n      newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n    } else {\n      var childKey = changePath.getFront();\n\n      if (childKey === '.priority') {\n        newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n        newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n      } else {\n        var childChangePath = changePath.popFront();\n        var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n        var newChild = void 0;\n\n        if (childChangePath.isEmpty()) {\n          // Child overwrite, we can replace the child\n          newChild = changedSnap;\n        } else {\n          var childNode = source.getCompleteChild(childKey);\n\n          if (childNode != null) {\n            if (childChangePath.getBack() === '.priority' && childNode.getChild(childChangePath.parent()).isEmpty()) {\n              // This is a priority update on an empty node. If this node exists on the server, the\n              // server will send down the priority in the update, so ignore for now\n              newChild = childNode;\n            } else {\n              newChild = childNode.updateChild(childChangePath, changedSnap);\n            }\n          } else {\n            // There is no complete child node available\n            newChild = ChildrenNode.EMPTY_NODE;\n          }\n        }\n\n        if (!oldChild.equals(newChild)) {\n          var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n          newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n        } else {\n          newViewCache = oldViewCache;\n        }\n      }\n    }\n\n    return newViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {string} childKey\r\n   * @return {boolean}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n    return viewCache.getEventCache().isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n    var _this = this; // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!Node} node\r\n   * @param {ImmutableTree.<!Node>} merge\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n    merge.foreach(function (relativePath, childNode) {\n      node = node.updateChild(relativePath, childNode);\n    });\n    return node;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n    var _this = this; // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n    // wait for the complete data update coming soon.\n\n\n    if (viewCache.getServerCache().getNode().isEmpty() && !viewCache.getServerCache().isFullyInitialized()) {\n      return viewCache;\n    } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    var viewMergeTree;\n\n    if (path.isEmpty()) {\n      viewMergeTree = changedChildren;\n    } else {\n      viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\n    }\n\n    var serverNode = viewCache.getServerCache().getNode();\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (serverNode.hasChild(childKey)) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n      var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) && childMergeTree.value == null;\n\n      if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childMergeTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} ackPath\r\n   * @param {!ImmutableTree<!boolean>} affectedTree\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n    if (writesCache.shadowingWrite(ackPath) != null) {\n      return viewCache;\n    } // Only filter server node if it is currently filtered\n\n\n    var filterServerNode = viewCache.getServerCache().isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n    // now that it won't be shadowed.\n\n    var serverCache = viewCache.getServerCache();\n\n    if (affectedTree.value != null) {\n      // This is an overwrite.\n      if (ackPath.isEmpty() && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n        return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n      } else if (ackPath.isEmpty()) {\n        // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n        // should just re-apply whatever we have in our cache as a merge.\n        var changedChildren_1 = ImmutableTree.Empty;\n        serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n          changedChildren_1 = changedChildren_1.set(new Path(name), node);\n        });\n        return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n      } else {\n        return viewCache;\n      }\n    } else {\n      // This is a merge.\n      var changedChildren_2 = ImmutableTree.Empty;\n      affectedTree.foreach(function (mergePath, value) {\n        var serverCachePath = ackPath.child(mergePath);\n\n        if (serverCache.isCompleteForPath(serverCachePath)) {\n          changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n        }\n      });\n      return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n    var oldServerNode = viewCache.getServerCache();\n    var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\n    return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n    var complete;\n\n    if (writesCache.shadowingWrite(path) != null) {\n      return viewCache;\n    } else {\n      var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n      var oldEventCache = viewCache.getEventCache().getNode();\n      var newEventCache = void 0;\n\n      if (path.isEmpty() || path.getFront() === '.priority') {\n        var newNode = void 0;\n\n        if (viewCache.getServerCache().isFullyInitialized()) {\n          newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n        } else {\n          var serverChildren = viewCache.getServerCache().getNode();\n          util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n          newNode = writesCache.calcCompleteEventChildren(serverChildren);\n        }\n\n        newNode = newNode;\n        newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n      } else {\n        var childKey = path.getFront();\n        var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n\n        if (newChild == null && viewCache.getServerCache().isCompleteForChild(childKey)) {\n          newChild = oldEventCache.getImmediateChild(childKey);\n        }\n\n        if (newChild != null) {\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\n        } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n          // No complete child available, delete the existing one, if any\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\n        } else {\n          newEventCache = oldEventCache;\n        }\n\n        if (newEventCache.isEmpty() && viewCache.getServerCache().isFullyInitialized()) {\n          // We might have reverted all child writes. Maybe the old event was a leaf node\n          complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n\n          if (complete.isLeafNode()) {\n            newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n          }\n        }\n      }\n\n      complete = viewCache.getServerCache().isFullyInitialized() || writesCache.shadowingWrite(Path.Empty) != null;\n      return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n    }\n  };\n\n  return ViewProcessor;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   */\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    /**\r\n     * @private\r\n     * @type {!Index}\r\n     */\n\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n  /**\r\n   * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n   * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n   *\r\n   * Notes:\r\n   *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n   *    our index.\r\n   *  - prevName will be calculated based on the index ordering.\r\n   *\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {!Array.<!EventRegistration>} eventRegistrations\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\n    var _this = this;\n\n    var events = [];\n    var moves = [];\n    changes.forEach(function (change) {\n      if (change.type === Change.CHILD_CHANGED && _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n        moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\n      }\n    });\n    this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\n    return events;\n  };\n  /**\r\n   * Given changes of a single change type, generate the corresponding events.\r\n   *\r\n   * @param {!Array.<!Event>} events\r\n   * @param {!string} eventType\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Array.<!EventRegistration>} registrations\r\n   * @param {!Node} eventCache\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\n    var _this = this;\n\n    var filteredChanges = changes.filter(function (change) {\n      return change.type === eventType;\n    });\n    filteredChanges.sort(this.compareChanges_.bind(this));\n    filteredChanges.forEach(function (change) {\n      var materializedChange = _this.materializeSingleChange_(change, eventCache);\n\n      registrations.forEach(function (registration) {\n        if (registration.respondsTo(change.type)) {\n          events.push(registration.createEvent(materializedChange, _this.query_));\n        }\n      });\n    });\n  };\n  /**\r\n   * @param {!Change} change\r\n   * @param {!Node} eventCache\r\n   * @return {!Change}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\n    if (change.type === 'value' || change.type === 'child_removed') {\n      return change;\n    } else {\n      change.prevName = eventCache.getPredecessorChildName(\n      /** @type {!string} */\n      change.childName, change.snapshotNode, this.index_);\n      return change;\n    }\n  };\n  /**\r\n   * @param {!Change} a\r\n   * @param {!Change} b\r\n   * @return {number}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.compareChanges_ = function (a, b) {\n    if (a.childName == null || b.childName == null) {\n      throw util.assertionError('Should only compare child_ events.');\n    }\n\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n    return this.index_.compare(aWrapped, bWrapped);\n  };\n\n  return EventGenerator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   * @param {!ViewCache} initialViewCache\r\n   */\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_.getQueryParams();\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = params.getNodeFilter();\n    /**\r\n     * @type {ViewProcessor}\r\n     * @private\r\n     */\n\n    this.processor_ = new ViewProcessor(filter);\n    var initialServerCache = initialViewCache.getServerCache();\n    var initialEventCache = initialViewCache.getEventCache(); // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    /**\r\n     * @type {!ViewCache}\r\n     * @private\r\n     */\n\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n    /**\r\n     * @type {!EventGenerator}\r\n     * @private\r\n     */\n\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n  /**\r\n   * @return {!Query}\r\n   */\n\n\n  View.prototype.getQuery = function () {\n    return this.query_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getServerCache = function () {\n    return this.viewCache_.getServerCache().getNode();\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getCompleteServerCache = function (path) {\n    var cache = this.viewCache_.getCompleteServerSnap();\n\n    if (cache) {\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (this.query_.getQueryParams().loadsAllData() || !path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty()) {\n        return cache.getChild(path);\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  View.prototype.isEmpty = function () {\n    return this.eventRegistrations_.length === 0;\n  };\n  /**\r\n   * @param {!EventRegistration} eventRegistration\r\n   */\n\n\n  View.prototype.addEventRegistration = function (eventRegistration) {\n    this.eventRegistrations_.push(eventRegistration);\n  };\n  /**\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n   */\n\n\n  View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n    var cancelEvents = [];\n\n    if (cancelError) {\n      util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n      var path_1 = this.query_.path;\n      this.eventRegistrations_.forEach(function (registration) {\n        cancelError\n        /** @type {!Error} */\n        = cancelError;\n        var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n        if (maybeEvent) {\n          cancelEvents.push(maybeEvent);\n        }\n      });\n    }\n\n    if (eventRegistration) {\n      var remaining = [];\n\n      for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n        var existing = this.eventRegistrations_[i];\n\n        if (!existing.matches(eventRegistration)) {\n          remaining.push(existing);\n        } else if (eventRegistration.hasAnyCallback()) {\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        }\n      }\n\n      this.eventRegistrations_ = remaining;\n    } else {\n      this.eventRegistrations_ = [];\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n   *\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n    if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n      util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n      util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n    }\n\n    var oldViewCache = this.viewCache_;\n    var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n    this.processor_.assertIndexed(result.viewCache);\n    util.assert(result.viewCache.getServerCache().isFullyInitialized() || !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n    this.viewCache_ = result.viewCache;\n    return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n  };\n  /**\r\n   * @param {!EventRegistration} registration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.getInitialEvents = function (registration) {\n    var eventSnap = this.viewCache_.getEventCache();\n    var initialChanges = [];\n\n    if (!eventSnap.getNode().isLeafNode()) {\n      var eventNode = eventSnap.getNode();\n      eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        initialChanges.push(Change.childAddedChange(key, childNode));\n      });\n    }\n\n    if (eventSnap.isFullyInitialized()) {\n      initialChanges.push(Change.valueChange(eventSnap.getNode()));\n    }\n\n    return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n  };\n  /**\r\n   * @private\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {EventRegistration=} eventRegistration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n    var registrations = eventRegistration ? [eventRegistration] : this.eventRegistrations_;\n    return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n  };\n\n  return View;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor$1;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n    get: function get() {\n      util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\n      return __referenceConstructor$1;\n    },\n    set: function set(val) {\n      util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\n      __referenceConstructor$1 = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SyncPoint.prototype.isEmpty = function () {\n    return this.views.size === 0;\n  };\n\n  SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n    var e_1, _a;\n\n    var queryId = operation.source.queryId;\n\n    if (queryId !== null) {\n      var view = this.views.get(queryId);\n      util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\n      return view.applyOperation(operation, writesCache, optCompleteServerCache);\n    } else {\n      var events = [];\n\n      try {\n        for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var view = _c.value;\n          events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @param {!Query} query\r\n   * @param {!EventRegistration} eventRegistration\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache Complete server cache, if we have it.\r\n   * @param {boolean} serverCacheComplete\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n    var queryId = query.queryIdentifier();\n    var view = this.views.get(queryId);\n\n    if (!view) {\n      // TODO: make writesCache take flag for complete server node\n      var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n      var eventCacheComplete = false;\n\n      if (eventCache) {\n        eventCacheComplete = true;\n      } else if (serverCache instanceof ChildrenNode) {\n        eventCache = writesCache.calcCompleteEventChildren(serverCache);\n        eventCacheComplete = false;\n      } else {\n        eventCache = ChildrenNode.EMPTY_NODE;\n        eventCacheComplete = false;\n      }\n\n      var viewCache = new ViewCache(new CacheNode(\n      /** @type {!Node} */\n      eventCache, eventCacheComplete, false), new CacheNode(\n      /** @type {!Node} */\n      serverCache, serverCacheComplete, false));\n      view = new View(query, viewCache);\n      this.views.set(queryId, view);\n    } // This is guaranteed to exist now, we just created anything that was missing\n\n\n    view.addEventRegistration(eventRegistration);\n    return view.getInitialEvents(eventRegistration);\n  };\n  /**\r\n   * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n   *\r\n   * If query is the default query, we'll check all views for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n   *\r\n   * @param {!Query} query\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n   */\n\n\n  SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var e_2, _a;\n\n    var queryId = query.queryIdentifier();\n    var removed = [];\n    var cancelEvents = [];\n    var hadCompleteView = this.hasCompleteView();\n\n    if (queryId === 'default') {\n      try {\n        // When you do ref.off(...), we search all views for the registration to remove.\n        for (var _b = tslib.__values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var _d = tslib.__read(_c.value, 2),\n              viewQueryId = _d[0],\n              view = _d[1];\n\n          cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n          if (view.isEmpty()) {\n            this.views.delete(viewQueryId); // We'll deal with complete views later.\n\n            if (!view.getQuery().getQueryParams().loadsAllData()) {\n              removed.push(view.getQuery());\n            }\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    } else {\n      // remove the callback from the specific view.\n      var view = this.views.get(queryId);\n\n      if (view) {\n        cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n        if (view.isEmpty()) {\n          this.views.delete(queryId); // We'll deal with complete views later.\n\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    }\n\n    if (hadCompleteView && !this.hasCompleteView()) {\n      // We removed our last complete view.\n      removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n    }\n\n    return {\n      removed: removed,\n      events: cancelEvents\n    };\n  };\n\n  SyncPoint.prototype.getQueryViews = function () {\n    var e_3, _a;\n\n    var result = [];\n\n    try {\n      for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (!view.getQuery().getQueryParams().loadsAllData()) {\n          result.push(view);\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return result;\n  };\n  /**\r\n   * @param path The path to the desired complete snapshot\r\n   * @return A complete cache, if it exists\r\n   */\n\n\n  SyncPoint.prototype.getCompleteServerCache = function (path) {\n    var e_4, _a;\n\n    var serverCache = null;\n\n    try {\n      for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        serverCache = serverCache || view.getCompleteServerCache(path);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return serverCache;\n  };\n\n  SyncPoint.prototype.viewForQuery = function (query) {\n    var params = query.getQueryParams();\n\n    if (params.loadsAllData()) {\n      return this.getCompleteView();\n    } else {\n      var queryId = query.queryIdentifier();\n      return this.views.get(queryId);\n    }\n  };\n\n  SyncPoint.prototype.viewExistsForQuery = function (query) {\n    return this.viewForQuery(query) != null;\n  };\n\n  SyncPoint.prototype.hasCompleteView = function () {\n    return this.getCompleteView() != null;\n  };\n\n  SyncPoint.prototype.getCompleteView = function () {\n    var e_5, _a;\n\n    try {\n      for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (view.getQuery().getQueryParams().loadsAllData()) {\n          return view;\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return null;\n  };\n\n  return SyncPoint;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.prototype.addWrite = function (path, node) {\n    if (path.isEmpty()) {\n      return new CompoundWrite(new ImmutableTree(node));\n    } else {\n      var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n      if (rootmost != null) {\n        var rootMostPath = rootmost.path;\n        var value = rootmost.value;\n        var relativePath = Path.relativePath(rootMostPath, path);\n        value = value.updateChild(relativePath, node);\n        return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n      } else {\n        var subtree = new ImmutableTree(node);\n        var newWriteTree = this.writeTree_.setTree(path, subtree);\n        return new CompoundWrite(newWriteTree);\n      }\n    }\n  };\n\n  CompoundWrite.prototype.addWrites = function (path, updates) {\n    var newWrite = this;\n    each(updates, function (childKey, node) {\n      newWrite = newWrite.addWrite(path.child(childKey), node);\n    });\n    return newWrite;\n  };\n  /**\r\n   * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n   * location, which must be removed by calling this method with that path.\r\n   *\r\n   * @param path The path at which a write and all deeper writes should be removed\r\n   * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n   */\n\n\n  CompoundWrite.prototype.removeWrite = function (path) {\n    if (path.isEmpty()) {\n      return CompoundWrite.Empty;\n    } else {\n      var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\n      return new CompoundWrite(newWriteTree);\n    }\n  };\n  /**\r\n   * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n   * considered \"complete\".\r\n   *\r\n   * @param path The path to check for\r\n   * @return Whether there is a complete write at that path\r\n   */\n\n\n  CompoundWrite.prototype.hasCompleteWrite = function (path) {\n    return this.getCompleteNode(path) != null;\n  };\n  /**\r\n   * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n   * writes from deeper paths, but will return child nodes from a more shallow path.\r\n   *\r\n   * @param path The path to get a complete write\r\n   * @return The node if complete at that path, or null otherwise.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteNode = function (path) {\n    var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      return this.writeTree_.get(rootmost.path).getChild(Path.relativePath(rootmost.path, path));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Returns all children that are guaranteed to be a complete overwrite.\r\n   *\r\n   * @return A list of all complete children.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteChildren = function () {\n    var children = [];\n    var node = this.writeTree_.value;\n\n    if (node != null) {\n      // If it's a leaf node, it has no children; so nothing to do.\n      if (!node.isLeafNode()) {\n        node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n          children.push(new NamedNode(childName, childNode));\n        });\n      }\n    } else {\n      this.writeTree_.children.inorderTraversal(function (childName, childTree) {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      });\n    }\n\n    return children;\n  };\n\n  CompoundWrite.prototype.childCompoundWrite = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else {\n      var shadowingNode = this.getCompleteNode(path);\n\n      if (shadowingNode != null) {\n        return new CompoundWrite(new ImmutableTree(shadowingNode));\n      } else {\n        return new CompoundWrite(this.writeTree_.subtree(path));\n      }\n    }\n  };\n  /**\r\n   * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n   * @return Whether this CompoundWrite is empty\r\n   */\n\n\n  CompoundWrite.prototype.isEmpty = function () {\n    return this.writeTree_.isEmpty();\n  };\n  /**\r\n   * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n   * node\r\n   * @param node The node to apply this CompoundWrite to\r\n   * @return The node with all writes applied\r\n   */\n\n\n  CompoundWrite.prototype.apply = function (node) {\n    return applySubtreeWrite(Path.Empty, this.writeTree_, node);\n  };\n\n  CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\n  return CompoundWrite;\n}();\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTree =\n/** @class */\nfunction () {\n  function WriteTree() {\n    /**\r\n     * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n     * applyLocally=false or writes that are completely shadowed by other writes.\r\n     *\r\n     * @type {!CompoundWrite}\r\n     * @private\r\n     */\n    this.visibleWrites_ = CompoundWrite.Empty;\n    /**\r\n     * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n     * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n     * used by transactions).\r\n     *\r\n     * @type {!Array.<!WriteRecord>}\r\n     * @private\r\n     */\n\n    this.allWrites_ = [];\n    this.lastWriteId_ = -1;\n  }\n  /**\r\n   * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTree.prototype.childWrites = function (path) {\n    return new WriteTreeRef(path, this);\n  };\n  /**\r\n   * Record a new overwrite from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Node} snap\r\n   * @param {!number} writeId\r\n   * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n   */\n\n\n  WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n    util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n\n    if (visible === undefined) {\n      visible = true;\n    }\n\n    this.allWrites_.push({\n      path: path,\n      snap: snap,\n      writeId: writeId,\n      visible: visible\n    });\n\n    if (visible) {\n      this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n    }\n\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * Record a new merge from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Object.<string, !Node>} changedChildren\r\n   * @param {!number} writeId\r\n   */\n\n\n  WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n    util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n    this.allWrites_.push({\n      path: path,\n      children: changedChildren,\n      writeId: writeId,\n      visible: true\n    });\n    this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * @param {!number} writeId\r\n   * @return {?WriteRecord}\r\n   */\n\n\n  WriteTree.prototype.getWrite = function (writeId) {\n    for (var i = 0; i < this.allWrites_.length; i++) {\n      var record = this.allWrites_[i];\n\n      if (record.writeId === writeId) {\n        return record;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n   * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n   *\r\n   * @param {!number} writeId\r\n   * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n   * events as a result).\r\n   */\n\n\n  WriteTree.prototype.removeWrite = function (writeId) {\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n    // out of order.\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n    var _this = this;\n\n    var idx = this.allWrites_.findIndex(function (s) {\n      return s.writeId === writeId;\n    });\n    util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n    var writeToRemove = this.allWrites_[idx];\n    this.allWrites_.splice(idx, 1);\n    var removedWriteWasVisible = writeToRemove.visible;\n    var removedWriteOverlapsWithOtherWrites = false;\n    var i = this.allWrites_.length - 1;\n\n    while (removedWriteWasVisible && i >= 0) {\n      var currentWrite = this.allWrites_[i];\n\n      if (currentWrite.visible) {\n        if (i >= idx && this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n          // The removed write was completely shadowed by a subsequent write.\n          removedWriteWasVisible = false;\n        } else if (writeToRemove.path.contains(currentWrite.path)) {\n          // Either we're covering some writes or they're covering part of us (depending on which came first).\n          removedWriteOverlapsWithOtherWrites = true;\n        }\n      }\n\n      i--;\n    }\n\n    if (!removedWriteWasVisible) {\n      return false;\n    } else if (removedWriteOverlapsWithOtherWrites) {\n      // There's some shadowing going on. Just rebuild the visible writes from scratch.\n      this.resetTree_();\n      return true;\n    } else {\n      // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n      if (writeToRemove.snap) {\n        this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\n      } else {\n        var children = writeToRemove.children;\n        each(children, function (childName) {\n          _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\n        });\n      }\n\n      return true;\n    }\n  };\n  /**\r\n   * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n   * No server data is considered.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.getCompleteWriteData = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n   * writes), attempt to calculate a complete snapshot for the given path\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    if (!writeIdsToExclude && !includeHiddenWrites) {\n      var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n\n      if (shadowingNode != null) {\n        return shadowingNode;\n      } else {\n        var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n\n        if (subMerge.isEmpty()) {\n          return completeServerCache;\n        } else if (completeServerCache == null && !subMerge.hasCompleteWrite(Path.Empty)) {\n          // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n          return null;\n        } else {\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return subMerge.apply(layeredCache);\n        }\n      }\n    } else {\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n\n      if (!includeHiddenWrites && merge.isEmpty()) {\n        return completeServerCache;\n      } else {\n        // If the server cache is null, and we don't have a complete cache, we need to return null\n        if (!includeHiddenWrites && completeServerCache == null && !merge.hasCompleteWrite(Path.Empty)) {\n          return null;\n        } else {\n          var filter = function filter(write) {\n            return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (write.path.contains(treePath) || treePath.contains(write.path));\n          };\n\n          var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return mergeAtPath.apply(layeredCache);\n        }\n      }\n    }\n  };\n  /**\r\n   * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n   * Used when creating new views, to pre-fill their complete event children snapshot.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n    var completeChildren = ChildrenNode.EMPTY_NODE;\n    var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n\n    if (topLevelSet) {\n      if (!topLevelSet.isLeafNode()) {\n        // we're shadowing everything. Return the children.\n        topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n          completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n        });\n      }\n\n      return completeChildren;\n    } else if (completeServerChildren) {\n      // Layer any children we have on top of this\n      // We know we don't have a top-level set, so just enumerate existing children\n      var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\n      completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        var node = merge_1.childCompoundWrite(new Path(childName)).apply(childNode);\n        completeChildren = completeChildren.updateImmediateChild(childName, node);\n      }); // Add any complete children we have from the set\n\n      merge_1.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    } else {\n      // We don't have anything to layer on top of. Layer on any children we have\n      // Note that we can return an empty snap if we have a defined delete\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n      merge.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    }\n  };\n  /**\r\n   * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n   * applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!Path} childPath\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n    util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n    var path = treePath.child(childPath);\n\n    if (this.visibleWrites_.hasCompleteWrite(path)) {\n      // At this point we can probably guarantee that we're in case 2, meaning no events\n      // May need to check visibility while doing the findRootMostValueAndPath call\n      return null;\n    } else {\n      // No complete shadowing. We're either partially shadowing or not shadowing at all.\n      var childMerge = this.visibleWrites_.childCompoundWrite(path);\n\n      if (childMerge.isEmpty()) {\n        // We're not shadowing at all. Case 1\n        return existingServerSnap.getChild(childPath);\n      } else {\n        // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n        // However this is tricky to find out, since user updates don't necessary change the server\n        // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n        // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n        // only check if the updates change the serverNode.\n        // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n        return childMerge.apply(existingServerSnap.getChild(childPath));\n      }\n    }\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n    var path = treePath.child(childKey);\n    var shadowingNode = this.visibleWrites_.getCompleteNode(path);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      if (existingServerSnap.isCompleteForChild(childKey)) {\n        var childMerge = this.visibleWrites_.childCompoundWrite(path);\n        return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   */\n\n\n  WriteTree.prototype.shadowingWrite = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window.\r\n   */\n\n\n  WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n    var toIterate;\n    var merge = this.visibleWrites_.childCompoundWrite(treePath);\n    var shadowingNode = merge.getCompleteNode(Path.Empty);\n\n    if (shadowingNode != null) {\n      toIterate = shadowingNode;\n    } else if (completeServerData != null) {\n      toIterate = merge.apply(completeServerData);\n    } else {\n      // no children to iterate on\n      return [];\n    }\n\n    toIterate = toIterate.withIndex(index);\n\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n      var nodes = [];\n      var cmp = index.getCompare();\n      var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n      var next = iter.getNext();\n\n      while (next && nodes.length < count) {\n        if (cmp(next, startPost) !== 0) {\n          nodes.push(next);\n        }\n\n        next = iter.getNext();\n      }\n\n      return nodes;\n    } else {\n      return [];\n    }\n  };\n\n  WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n    if (writeRecord.snap) {\n      return writeRecord.path.contains(path);\n    } else {\n      for (var childName in writeRecord.children) {\n        if (writeRecord.children.hasOwnProperty(childName) && writeRecord.path.child(childName).contains(path)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n  /**\r\n   * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n   */\n\n\n  WriteTree.prototype.resetTree_ = function () {\n    this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\n\n    if (this.allWrites_.length > 0) {\n      this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n    } else {\n      this.lastWriteId_ = -1;\n    }\n  };\n  /**\r\n   * The default filter used when constructing the tree. Keep everything that's visible.\r\n   */\n\n\n  WriteTree.DefaultFilter_ = function (write) {\n    return write.visible;\n  };\n  /**\r\n   * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n   * event data at that path.\r\n   */\n\n\n  WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n    var compoundWrite = CompoundWrite.Empty;\n\n    for (var i = 0; i < writes.length; ++i) {\n      var write = writes[i]; // Theory, a later set will either:\n      // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n      // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n      if (filter(write)) {\n        var writePath = write.path;\n        var relativePath = void 0;\n\n        if (write.snap) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n            compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\n          } else ;\n        } else if (write.children) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrites(relativePath, write.children);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n\n            if (relativePath.isEmpty()) {\n              compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\n            } else {\n              var child = util.safeGet(write.children, relativePath.getFront());\n\n              if (child) {\n                // There exists a child in this node that matches the root path\n                var deepNode = child.getChild(relativePath.popFront());\n                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\n              }\n            }\n          } else ;\n        } else {\n          throw util.assertionError('WriteRecord should have .snap or .children');\n        }\n      }\n    }\n\n    return compoundWrite;\n  };\n\n  return WriteTree;\n}();\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTreeRef =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path\r\n   * @param {!WriteTree} writeTree\r\n   */\n  function WriteTreeRef(path, writeTree) {\n    this.treePath_ = path;\n    this.writeTree_ = writeTree;\n  }\n  /**\r\n   * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n   * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n   * can lead to a more expensive calculation.\r\n   *\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n  };\n  /**\r\n   * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n   * mix of the given server data and write data.\r\n   *\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n    return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n  };\n  /**\r\n   * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n   * if anything, needs to be applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events should be raised\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n   *\r\n   * @param {!Path} path\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n    return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.shadowingWrite = function (path) {\n    return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window\r\n   *\r\n   * @param {?Node} completeServerData\r\n   * @param {!NamedNode} startPost\r\n   * @param {!number} count\r\n   * @param {boolean} reverse\r\n   * @param {!Index} index\r\n   * @return {!Array.<!NamedNode>}\r\n   */\n\n\n  WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n    return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerCache\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n    return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n  };\n  /**\r\n   * Return a WriteTreeRef for a child.\r\n   *\r\n   * @param {string} childName\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTreeRef.prototype.child = function (childName) {\n    return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n  };\n\n  return WriteTreeRef;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\n\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = ImmutableTree.Empty;\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = new WriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n  /**\r\n   * Apply the data changes for a user-generated set() or transaction() call.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n    // Record pending write.\n    this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n\n    if (!visible) {\n      return [];\n    } else {\n      return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\n    }\n  };\n  /**\r\n   * Apply the data from a user-generated update() call\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n    // Record pending merge.\n    this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\n  };\n  /**\r\n   * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n   *\r\n   * @param revert True if the given write failed and needs to be reverted\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n    if (revert === void 0) {\n      revert = false;\n    }\n\n    var write = this.pendingWriteTree_.getWrite(writeId);\n    var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n\n    if (!needToReevaluate) {\n      return [];\n    } else {\n      var affectedTree_1 = ImmutableTree.Empty;\n\n      if (write.snap != null) {\n        // overwrite\n        affectedTree_1 = affectedTree_1.set(Path.Empty, true);\n      } else {\n        each(write.children, function (pathString, node) {\n          affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\n        });\n      }\n\n      return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\n    }\n  };\n  /**\r\n   * Apply new server data for the specified path..\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n    return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\n  };\n  /**\r\n   * Apply new server data to be merged in at the specified path.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\n  };\n  /**\r\n   * Apply a listen complete for a query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyListenComplete = function (path) {\n    return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\n  };\n  /**\r\n   * Apply new server data for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey != null) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // Query must have been removed already\n      return [];\n    }\n  };\n  /**\r\n   * Apply server data to be merged in for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var changeTree = ImmutableTree.fromObject(changedChildren);\n      var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Apply a listen complete for a tagged query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n    var path = query.path;\n    var serverCache = null;\n    var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n    this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n      var relativePath = Path.relativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n      foundAncestorDefaultView = foundAncestorDefaultView || sp.hasCompleteView();\n    });\n    var syncPoint = this.syncPointTree_.get(path);\n\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      foundAncestorDefaultView = foundAncestorDefaultView || syncPoint.hasCompleteView();\n      serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var serverCacheComplete;\n\n    if (serverCache != null) {\n      serverCacheComplete = true;\n    } else {\n      serverCacheComplete = false;\n      serverCache = ChildrenNode.EMPTY_NODE;\n      var subtree = this.syncPointTree_.subtree(path);\n      subtree.foreachChild(function (childName, childSyncPoint) {\n        var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\n\n        if (completeCache) {\n          serverCache = serverCache.updateImmediateChild(childName, completeCache);\n        }\n      });\n    }\n\n    var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n\n    if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n      // We need to track a tag for this query\n      var queryKey = SyncTree.makeQueryKey_(query);\n      util.assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n      var tag = SyncTree.getNextQueryTag_();\n      this.queryToTagMap.set(queryKey, tag);\n      this.tagToQueryMap.set(tag, queryKey);\n    }\n\n    var writesCache = this.pendingWriteTree_.childWrites(path);\n    var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\n      var view\n      /** @type !View */\n      = syncPoint.viewForQuery(query);\n      events = events.concat(this.setupListener_(query, view));\n    }\n\n    return events;\n  };\n  /**\r\n   * Remove event callback(s).\r\n   *\r\n   * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n   *\r\n   * @param eventRegistration If null, all callbacks are removed.\r\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return Cancel events, if cancelError was provided.\r\n   */\n\n\n  SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var _this = this; // Find the syncPoint first. Then deal with whether or not it has matching listeners\n\n\n    var path = query.path;\n    var maybeSyncPoint = this.syncPointTree_.get(path);\n    var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n    // not loadsAllData().\n\n    if (maybeSyncPoint && (query.queryIdentifier() === 'default' || maybeSyncPoint.viewExistsForQuery(query))) {\n      /**\r\n       * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n       */\n      var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n\n      if (maybeSyncPoint.isEmpty()) {\n        this.syncPointTree_ = this.syncPointTree_.remove(path);\n      }\n\n      var removed = removedAndEvents.removed;\n      cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n      // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n      // properly set up.\n      //\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n\n      var removingDefault = -1 !== removed.findIndex(function (query) {\n        return query.getQueryParams().loadsAllData();\n      });\n      var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n        return parentSyncPoint.hasCompleteView();\n      });\n\n      if (removingDefault && !covered) {\n        var subtree = this.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          var newViews = this.collectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n          for (var i = 0; i < newViews.length; ++i) {\n            var view = newViews[i],\n                newQuery = view.getQuery();\n            var listener = this.createListenerForView_(view);\n            this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n          }\n        }\n      } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          var defaultTag = null;\n          this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n        } else {\n          removed.forEach(function (queryToRemove) {\n            var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\n\n            _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n          });\n        }\n      } // Now, clear all of the tags we're tracking for the removed listens\n\n\n      this.removeTags_(removed);\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n   * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n   * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n   *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n   *\r\n   * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n   *\r\n   * @param path The path to the data we want\r\n   * @param writeIdsToExclude A specific set to be excluded\r\n   */\n\n\n  SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n    var includeHiddenSets = true;\n    var writeTree = this.pendingWriteTree_;\n    var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n      var relativePath = Path.relativePath(pathSoFar, path);\n      var serverCache = syncPoint.getCompleteServerCache(relativePath);\n\n      if (serverCache) {\n        return serverCache;\n      }\n    });\n    return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n  };\n  /**\r\n   * This collapses multiple unfiltered views into a single view, since we only need a single\r\n   * listener for them.\r\n   */\n\n\n  SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n        var completeView = maybeChildSyncPoint.getCompleteView();\n        return [completeView];\n      } else {\n        // No complete view here, flatten any deeper listens into an array\n        var views_1 = [];\n\n        if (maybeChildSyncPoint) {\n          views_1 = maybeChildSyncPoint.getQueryViews();\n        }\n\n        each(childMap, function (_key, childViews) {\n          views_1 = views_1.concat(childViews);\n        });\n        return views_1;\n      }\n    });\n  };\n\n  SyncTree.prototype.removeTags_ = function (queries) {\n    for (var j = 0; j < queries.length; ++j) {\n      var removedQuery = queries[j];\n\n      if (!removedQuery.getQueryParams().loadsAllData()) {\n        // We should have a tag for this\n        var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n        var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\n        this.queryToTagMap.delete(removedQueryKey);\n        this.tagToQueryMap.delete(removedQueryTag);\n      }\n    }\n  };\n  /**\r\n   * Normalizes a query to a query we send the server for listening\r\n   *\r\n   * @return The normalized query\r\n   */\n\n\n  SyncTree.queryForListening_ = function (query) {\n    if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {\n      // We treat queries that load all data as default queries\n      // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n      // from Query\n      return query.getRef();\n    } else {\n      return query;\n    }\n  };\n  /**\r\n   * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n   *\r\n   * @return This method can return events to support synchronous data sources\r\n   */\n\n\n  SyncTree.prototype.setupListener_ = function (query, view) {\n    var path = query.path;\n    var tag = this.tagForQuery_(query);\n    var listener = this.createListenerForView_(view);\n    var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n    var subtree = this.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n    // may need to shadow other listens as well.\n\n    if (tag) {\n      util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n    } else {\n      // Shadow everything at or below this location, this is a default listener.\n      var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n        if (!relativePath.isEmpty() && maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n          return [maybeChildSyncPoint.getCompleteView().getQuery()];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          var queries_1 = [];\n\n          if (maybeChildSyncPoint) {\n            queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) {\n              return view.getQuery();\n            }));\n          }\n\n          each(childMap, function (_key, childQueries) {\n            queries_1 = queries_1.concat(childQueries);\n          });\n          return queries_1;\n        }\n      });\n\n      for (var i = 0; i < queriesToStop.length; ++i) {\n        var queryToStop = queriesToStop[i];\n        this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n      }\n    }\n\n    return events;\n  };\n\n  SyncTree.prototype.createListenerForView_ = function (view) {\n    var _this = this;\n\n    var query = view.getQuery();\n    var tag = this.tagForQuery_(query);\n    return {\n      hashFn: function hashFn() {\n        var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\n        return cache.hash();\n      },\n      onComplete: function onComplete(status) {\n        if (status === 'ok') {\n          if (tag) {\n            return _this.applyTaggedListenComplete(query.path, tag);\n          } else {\n            return _this.applyListenComplete(query.path);\n          }\n        } else {\n          // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n          // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n          var error = errorForServerCode(status, query);\n          return _this.removeEventRegistration(query,\n          /*eventRegistration*/\n          null, error);\n        }\n      }\n    };\n  };\n  /**\r\n   * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n   */\n\n\n  SyncTree.makeQueryKey_ = function (query) {\n    return query.path.toString() + '$' + query.queryIdentifier();\n  };\n  /**\r\n   * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n   */\n\n\n  SyncTree.parseQueryKey_ = function (queryKey) {\n    var splitIndex = queryKey.indexOf('$');\n    util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n    return {\n      queryId: queryKey.substr(splitIndex + 1),\n      path: new Path(queryKey.substr(0, splitIndex))\n    };\n  };\n  /**\r\n   * Return the query associated with the given tag, if we have one\r\n   */\n\n\n  SyncTree.prototype.queryKeyForTag_ = function (tag) {\n    return this.tagToQueryMap.get(tag);\n  };\n  /**\r\n   * Return the tag associated with the given query.\r\n   */\n\n\n  SyncTree.prototype.tagForQuery_ = function (query) {\n    var queryKey = SyncTree.makeQueryKey_(query);\n    return this.queryToTagMap.get(queryKey);\n  };\n  /**\r\n   * Static accessor for query tags.\r\n   */\n\n\n  SyncTree.getNextQueryTag_ = function () {\n    return SyncTree.nextQueryTag_++;\n  };\n  /**\r\n   * A helper method to apply tagged operations\r\n   */\n\n\n  SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n    var syncPoint = this.syncPointTree_.get(queryPath);\n    util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n    var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n    return syncPoint.applyOperation(operation, writesCache,\n    /*serverCache=*/\n    null);\n  };\n  /**\r\n   * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n   *\r\n   * NOTES:\r\n   * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n   *\r\n   * - We call applyOperation() on each SyncPoint passing three things:\r\n   *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n   *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n   *   3. A snapshot Node with cached server data, if we have it.\r\n   *\r\n   * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n   */\n\n\n  SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n    return this.applyOperationHelper_(operation, this.syncPointTree_,\n    /*serverCache=*/\n    null, this.pendingWriteTree_.childWrites(Path.Empty));\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    if (operation.path.isEmpty()) {\n      return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n    } else {\n      var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n      if (serverCache == null && syncPoint != null) {\n        serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n      }\n\n      var events = [];\n      var childName = operation.path.getFront();\n      var childOperation = operation.operationForChild(childName);\n      var childTree = syncPointTree.children.get(childName);\n\n      if (childTree && childOperation) {\n        var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n        var childWritesCache = writesCache.child(childName);\n        events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n\n      if (syncPoint) {\n        events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    var _this = this;\n\n    var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var events = [];\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writesCache.child(childName);\n      var childOperation = operation.operationForChild(childName);\n\n      if (childOperation) {\n        events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n    });\n\n    if (syncPoint) {\n      events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n    }\n\n    return events;\n  };\n  /**\r\n   * Static tracker for next query tag.\r\n   */\n\n\n  SyncTree.nextQueryTag_ = 1;\n  return SyncTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!util.contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return util.deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StatsManager =\n/** @class */\nfunction () {\n  function StatsManager() {}\n\n  StatsManager.getCollection = function (repoInfo) {\n    var hashString = repoInfo.toString();\n\n    if (!this.collections_[hashString]) {\n      this.collections_[hashString] = new StatsCollection();\n    }\n\n    return this.collections_[hashString];\n  };\n\n  StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n    var hashString = repoInfo.toString();\n\n    if (!this.reporters_[hashString]) {\n      this.reporters_[hashString] = creatorFunction();\n    }\n\n    return this.reporters_[hashString];\n  };\n\n  StatsManager.collections_ = {};\n  StatsManager.reporters_ = {};\n  return StatsManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = tslib.__assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n/**\r\n * @constructor\r\n */\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  /**\r\n   * @param collection\r\n   * @param server_\r\n   */\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.includeStat = function (stat) {\n    this.statsToReport_[stat] = true;\n  };\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && util.contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    /**\r\n     * @private\r\n     * @type {!Array.<EventList>}\r\n     */\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     * @private\r\n     * @type {!number}\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n  /**\r\n   * @param {!Array.<Event>} eventDataList The new events to queue.\r\n   */\n\n\n  EventQueue.prototype.queueEvents = function (eventDataList) {\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n    var currList = null;\n\n    for (var i = 0; i < eventDataList.length; i++) {\n      var eventData = eventDataList[i];\n      var eventPath = eventData.getPath();\n\n      if (currList !== null && !eventPath.equals(currList.getPath())) {\n        this.eventLists_.push(currList);\n        currList = null;\n      }\n\n      if (currList === null) {\n        currList = new EventList(eventPath);\n      }\n\n      currList.add(eventData);\n    }\n\n    if (currList) {\n      this.eventLists_.push(currList);\n    }\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n   * for the specified path.\r\n   *\r\n   * It is assumed that the new events are all for the specified path.\r\n   *\r\n   * @param {!Path} path The path to raise events for.\r\n   * @param {!Array.<Event>} eventDataList The new events to raise.\r\n   */\n\n\n  EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.equals(path);\n    });\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n   * locations related to the specified change path (i.e. all ancestors and descendants).\r\n   *\r\n   * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n   *\r\n   * @param {!Path} changedPath The path to raise events for.\r\n   * @param {!Array.<!Event>} eventDataList The events to raise\r\n   */\n\n\n  EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n    });\n  };\n  /**\r\n   * @param {!function(!Path):boolean} predicate\r\n   * @private\r\n   */\n\n\n  EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n    this.recursionDepth_++;\n    var sentAll = true;\n\n    for (var i = 0; i < this.eventLists_.length; i++) {\n      var eventList = this.eventLists_[i];\n\n      if (eventList) {\n        var eventPath = eventList.getPath();\n\n        if (predicate(eventPath)) {\n          this.eventLists_[i].raise();\n          this.eventLists_[i] = null;\n        } else {\n          sentAll = false;\n        }\n      }\n    }\n\n    if (sentAll) {\n      this.eventLists_ = [];\n    }\n\n    this.recursionDepth_--;\n  };\n\n  return EventQueue;\n}();\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\n\n\nvar EventList =\n/** @class */\nfunction () {\n  function EventList(path_) {\n    this.path_ = path_;\n    /**\r\n     * @type {!Array.<Event>}\r\n     * @private\r\n     */\n\n    this.events_ = [];\n  }\n  /**\r\n   * @param {!Event} eventData\r\n   */\n\n\n  EventList.prototype.add = function (eventData) {\n    this.events_.push(eventData);\n  };\n  /**\r\n   * Iterates through the list and raises each event\r\n   */\n\n\n  EventList.prototype.raise = function () {\n    for (var i = 0; i < this.events_.length; i++) {\n      var eventData = this.events_[i];\n\n      if (eventData !== null) {\n        this.events_[i] = null;\n        var eventFn = eventData.getEventRunner();\n\n        if (logger) {\n          log('event: ' + eventData.toString());\n        }\n\n        exceptionGuard(eventFn);\n      }\n    }\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  EventList.prototype.getPath = function () {\n    return this.path_;\n  };\n\n  return EventList;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Array.<string>} allowedEvents_\r\n   */\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   * @param {!string} eventType\r\n   * @param {...*} varArgs\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = tslib.__spread(this.listeners_[eventType]);\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    util.assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @extends {EventEmitter}\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  tslib.__extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  tslib.__extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !util.isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   * @param {number} requestNum\r\n   * @param {Array} data\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function _loop_1() {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function _loop_2(i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId An identifier for this connection, used for logging\r\n   * @param repoInfo The info for the endpoint to send data to.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      return repoInfo.connectionURL(LONG_POLLING, params);\n    };\n  }\n  /**\r\n   *\r\n   * @param {function(Object)} onMessage Callback when messages arrive\r\n   * @param {function()} onDisconnect Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = tslib.__read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2],\n            arg3 = _a[3],\n            arg4 = _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = tslib.__read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (typeof location !== 'undefined' && location.href && location.href.indexOf(FORGE_DOMAIN) !== -1) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (util.isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param {!Object} data The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = util.stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = util.base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   * @param {!string} id\r\n   * @param {!string} pw\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (util.isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   * @param {*} args\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = util.stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!util.isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   * @private\r\n   * @return {Element}\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param {!string} id - The ID of this connection\r\n   * @param {!string} pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param {!string} url - The URL of the script tag.\r\n   * @param {!number} serial - The serial number of the request.\r\n   * @private\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function doNewRequest() {\n      _this.outstandingRequests.delete(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function readyStateCB() {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param {!string} url - The URL for the script tag source.\r\n   * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (util.isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId identifier for this transport\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n   * @return {string} connection url\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!util.isNodeSdk() && typeof location !== 'undefined' && location.href && location.href.indexOf(FORGE_DOMAIN) !== -1) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  };\n  /**\r\n   *\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (util.isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   * @return {boolean}\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = util.jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param {number} frameCount The number of frames we are expecting from the server\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @param {!String} data\r\n   * @return {?String} Any remaining data to be process, or null if there is none\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    util.assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param {Object} data The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = util.stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param {string} str String to send.\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   * @type {number}\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   * @type {number}\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    /**\r\n     * @const\r\n     * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n     */\n    get: function get() {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @param {!RepoInfo} repoInfo\r\n   * @private\r\n   */\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = tslib.__values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n   * initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n   * transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   * @private\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n  /**\r\n   * @return {!string}\r\n   * @private\r\n   */\n\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n          if (conn === _this.rx_) {\n            _this.onPrimaryMessageReceived_(message);\n          } else if (conn === _this.secondaryConn_) {\n            _this.onSecondaryMessageReceived_(message);\n          } else {\n            _this.log_('message on old connection');\n          }\n        }\n    };\n  };\n  /**\r\n   *\r\n   * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {Object} handshake The handshake data returned from the server\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.updateHost(host); // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.conn_.start();\n        this.onConnectionEstablished_(this.conn_, timestamp);\n\n        if (PROTOCOL_VERSION !== version) {\n          warn('Protocol version mismatch detected');\n        } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n        this.tryStartUpgrade_();\n      }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.updateHost(host); // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.close();\n      } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('sending ping on primary.');\n        this.sendData_({\n          t: 'c',\n          d: {\n            t: PING,\n            d: {}\n          }\n        });\n      }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   *\r\n   * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n        if (this.repoInfo_.isCacheableHost()) {\n          PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n          this.repoInfo_.internalHost = this.repoInfo_.host;\n        }\n      } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('Realtime connection lost.');\n      }\n\n    this.close();\n  };\n  /**\r\n   *\r\n   * @param {string} reason\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n        throw 'Connection is not connected';\n      } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n        this.log_('Closing realtime connection.');\n        this.state_ = 2\n        /* DISCONNECTED */\n        ;\n        this.closeConnections_();\n\n        if (this.onDisconnect_) {\n          this.onDisconnect_();\n          this.onDisconnect_ = null;\n        }\n      }\n  };\n  /**\r\n   *\r\n   * @private\r\n   */\n\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, ?string)} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param {string} token The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n  /**\r\n   * @param {Object.<string, *>} stats\r\n   */\n\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  tslib.__extends(PersistentConnection, _super);\n  /**\r\n   * @implements {ServerActions}\r\n   * @param repoInfo_ Data about the namespace we are connecting to\r\n   * @param applicationId_ The Firebase App ID for this project\r\n   * @param onDataUpdate_ A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    /** Map<path, Map<queryId, ListenSpec>> */\n\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !util.isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    _this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(util.stringify(msg));\n    util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query.queryIdentifier();\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    util.assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n    util.assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = util.safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        var indexPath = query.path.toString();\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || util.isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    util.assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + util.stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + util.stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    var _this = this;\n\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n\n      var closeFn_1 = function closeFn_1() {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n\n      var sendRequestFn = function sendRequestFn(msg) {\n        util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false; // First fetch auth token, and establish connection after fetching the token was successful\n\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1,\n          /* onKill= */\n          function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n\n        if (!canceled_1) {\n          if (_this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n\n          closeFn_1();\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (util.isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = tslib.__values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, tslib.__values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (util.isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (util.isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (util.isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return util.isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  tslib.__extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n   * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n   * @param {AuthTokenProvider} authTokenProvider_\r\n   * @implements {ServerActions}\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     *\r\n     * @private {!Object.<string, !Object>}\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n  /**\r\n   * @param {!Query} query\r\n   * @param {?number=} tag\r\n   * @return {string}\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n      return query.path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier()); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = query.getQueryParams().toRestQueryStringParameters();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (util.safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   *\r\n   * @param {!string} pathString\r\n   * @param {!Object.<string, *>} queryStringParameters\r\n   * @param {?function(?number, *=)} callback\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + util.querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = util.jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * A connection to a single data repository.\r\n */\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient, app, authTokenProvider) {\n    var _this = this;\n\n    this.repoInfo_ = repoInfo_;\n    this.app = app;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = new SparseSnapshotTree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null;\n    this.stats_ = StatsManager.getCollection(repoInfo_);\n\n    if (forceRestClient || beingCrawled()) {\n      this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    } else {\n      var authOverride = app.options['databaseAuthVariableOverride']; // Validate authOverride\n\n      if (typeof authOverride !== 'undefined' && authOverride !== null) {\n        if (typeof authOverride !== 'object') {\n          throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n        }\n\n        try {\n          util.stringify(authOverride);\n        } catch (e) {\n          throw new Error('Invalid authOverride provided: ' + e);\n        }\n      }\n\n      this.persistentConnection_ = new PersistentConnection(this.repoInfo_, app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n      this.server_ = this.persistentConnection_;\n    }\n\n    authTokenProvider.addTokenChangeListener(function (token) {\n      _this.server_.refreshAuthToken(token);\n    }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n    this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () {\n      return new StatsReporter(_this.stats_, _this.server_);\n    });\n    this.transactionsInit_(); // Used for .info.\n\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        var infoEvents = [];\n\n        var node = _this.infoData_.getNode(query.path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n\n\n        if (!node.isEmpty()) {\n          infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n          setTimeout(function () {\n            onComplete('ok');\n          }, 0);\n        }\n\n        return infoEvents;\n      },\n      stopListening: function stopListening() {}\n    });\n    this.updateInfo_('connected', false);\n    this.serverSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n          var events = onComplete(status, data);\n\n          _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n        }); // No synchronous events for network-backed sync trees\n\n\n        return [];\n      },\n      stopListening: function stopListening(query, tag) {\n        _this.server_.unlisten(query, tag);\n      }\n    });\n  }\n  /**\r\n   * @return The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n  /**\r\n   * @return The namespace represented by the repo.\r\n   */\n\n\n  Repo.prototype.name = function () {\n    return this.repoInfo_.namespace;\n  };\n  /**\r\n   * @return The time in milliseconds, taking the server offset into account if we have one.\r\n   */\n\n\n  Repo.prototype.serverTime = function () {\n    var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\n    var offset = offsetNode.val() || 0;\n    return new Date().getTime() + offset;\n  };\n  /**\r\n   * Generate ServerValues using some variables from the repo object.\r\n   */\n\n\n  Repo.prototype.generateServerValues = function () {\n    return generateWithValues({\n      timestamp: this.serverTime()\n    });\n  };\n  /**\r\n   * Called by realtime when we get new messages from the server.\r\n   */\n\n\n  Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n    // For testing.\n    this.dataUpdateCount++;\n    var path = new Path(pathString);\n    data = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(pathString, data) : data;\n    var events = [];\n\n    if (tag) {\n      if (isMerge) {\n        var taggedChildren = util.map(data, function (raw) {\n          return nodeFromJSON$1(raw);\n        });\n        events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n      } else {\n        var taggedSnap = nodeFromJSON$1(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n      }\n    } else if (isMerge) {\n      var changedChildren = util.map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    } else {\n      var snap = nodeFromJSON$1(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    }\n\n    var affectedPath = path;\n\n    if (events.length > 0) {\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n  }; // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\n  Repo.prototype.interceptServerData_ = function (callback) {\n    this.interceptServerDataCallback_ = callback;\n  };\n\n  Repo.prototype.onConnectStatus_ = function (connectStatus) {\n    this.updateInfo_('connected', connectStatus);\n\n    if (connectStatus === false) {\n      this.runOnDisconnectEvents_();\n    }\n  };\n\n  Repo.prototype.onServerInfoUpdate_ = function (updates) {\n    var _this = this;\n\n    each(updates, function (key, value) {\n      _this.updateInfo_(key, value);\n    });\n  };\n\n  Repo.prototype.updateInfo_ = function (pathString, value) {\n    var path = new Path('/.info/' + pathString);\n    var newNode = nodeFromJSON$1(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n  };\n\n  Repo.prototype.getNextWriteId_ = function () {\n    return this.nextWriteId_++;\n  };\n\n  Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n    var _this = this;\n\n    this.log_('set', {\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n    var existing = this.serverSyncTree_.calcCompleteEventCache(path);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n    var writeId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n    this.eventQueue_.queueEvents(events);\n    this.server_.put(path.toString(), newNodeUnresolved.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n    var affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath); // We queued the events above, so just flush the queue here\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n  };\n\n  Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    this.log_('update', {\n      path: path.toString(),\n      value: childrenToMerge\n    }); // Start with our existing data and merge each child into it.\n\n    var empty = true;\n    var serverValues = this.generateServerValues();\n    var changedChildren = {};\n    each(childrenToMerge, function (changedKey, changedValue) {\n      empty = false;\n      changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\n    });\n\n    if (!empty) {\n      var writeId_1 = this.getNextWriteId_();\n      var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n      this.eventQueue_.queueEvents(events);\n      this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n        var success = status === 'ok';\n\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n\n        var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n\n        _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n\n        _this.callOnCompleteCallback(onComplete, status, errorReason);\n      });\n      each(childrenToMerge, function (changedPath) {\n        var affectedPath = _this.abortTransactions_(path.child(changedPath));\n\n        _this.rerunTransactions_(affectedPath);\n      }); // We queued the events above, so just flush the queue here\n\n      this.eventQueue_.raiseEventsForChangedPath(path, []);\n    } else {\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    }\n  };\n  /**\r\n   * Applies all of the changes stored up in the onDisconnect_ tree.\r\n   */\n\n\n  Repo.prototype.runOnDisconnectEvents_ = function () {\n    var _this = this;\n\n    this.log_('onDisconnectEvents');\n    var serverValues = this.generateServerValues();\n    var resolvedOnDisconnectTree = new SparseSnapshotTree();\n    this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\n      var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\n      resolvedOnDisconnectTree.remember(path, resolved);\n    });\n    var events = [];\n    resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\n      events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n\n      var affectedPath = _this.abortTransactions_(path);\n\n      _this.rerunTransactions_(affectedPath);\n    });\n    this.onDisconnect_ = new SparseSnapshotTree();\n    this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\n  };\n\n  Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n    var _this = this;\n\n    this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.forget(path);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value, priority);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    if (util.isEmpty(childrenToMerge)) {\n      log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    }\n\n    this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n      if (status === 'ok') {\n        each(childrenToMerge, function (childName, childNode) {\n          var newChildNode = nodeFromJSON$1(childNode);\n\n          _this.onDisconnect_.remember(path.child(childName), newChildNode);\n        });\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.interrupt = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.resume = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.stats = function (showDelta) {\n    if (showDelta === void 0) {\n      showDelta = false;\n    }\n\n    if (typeof console === 'undefined') {\n      return;\n    }\n\n    var stats;\n\n    if (showDelta) {\n      if (!this.statsListener_) {\n        this.statsListener_ = new StatsListener(this.stats_);\n      }\n\n      stats = this.statsListener_.get();\n    } else {\n      stats = this.stats_.get();\n    }\n\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n      return Math.max(currentValue.length, previousValue);\n    }, 0);\n    each(stats, function (stat, value) {\n      var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n      for (var i = stat.length; i < longestName + 2; i++) {\n        paddedStat += ' ';\n      }\n\n      console.log(paddedStat + value);\n    });\n  };\n\n  Repo.prototype.statsIncrementCounter = function (metric) {\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  };\n\n  Repo.prototype.log_ = function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    var prefix = '';\n\n    if (this.persistentConnection_) {\n      prefix = this.persistentConnection_.id + ':';\n    }\n\n    log.apply(void 0, tslib.__spread([prefix], varArgs));\n  };\n\n  Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n    if (callback) {\n      exceptionGuard(function () {\n        if (status === 'ok') {\n          callback(null);\n        } else {\n          var code = (status || 'error').toUpperCase();\n          var message = code;\n\n          if (errorReason) {\n            message += ': ' + errorReason;\n          }\n\n          var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          error.code = code;\n          callback(error);\n        }\n      });\n    }\n  };\n\n  Object.defineProperty(Repo.prototype, \"database\", {\n    get: function get() {\n      return this.__database || (this.__database = new Database(this));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Repo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n  /**\r\n   * @param {!NamedNode} node\r\n   * @return {boolean}\r\n   */\n\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function cmp(a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!Node} snap\r\n   * @param {string} childKey\r\n   * @param {!Node} childSnap\r\n   * @param {!CompleteChildSource} source\r\n   * @param {?ChildChangeAccumulator} changeAccumulator\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function cmp(a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    util.assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n  /**\r\n   * @return {boolean} True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    util.assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    util.assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    util.assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    util.assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   * @return {!number}\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    util.assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n  /**\r\n   * @return {!Index}\r\n   */\n\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   * @private\r\n   */\n\n\n  QueryParams.prototype.copy_ = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limit = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = '';\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToFirst = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToLast = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.startAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.startSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexStartValue_ = indexValue;\n\n    if (key != null) {\n      newParams.startNameSet_ = true;\n      newParams.indexStartName_ = key;\n    } else {\n      newParams.startNameSet_ = false;\n      newParams.indexStartName_ = '';\n    }\n\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.endAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.endSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexEndValue_ = indexValue;\n\n    if (key !== undefined) {\n      newParams.endNameSet_ = true;\n      newParams.indexEndName_ = key;\n    } else {\n      newParams.endNameSet_ = false;\n      newParams.indexEndName_ = '';\n    }\n\n    return newParams;\n  };\n  /**\r\n   * @param {!Index} index\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.orderBy = function (index) {\n    var newParams = this.copy_();\n    newParams.index_ = index;\n    return newParams;\n  };\n  /**\r\n   * @return {!Object}\r\n   */\n\n\n  QueryParams.prototype.getQueryObject = function () {\n    var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n    var obj = {};\n\n    if (this.startSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n\n      if (this.startNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n      }\n    }\n\n    if (this.endSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n\n      if (this.endNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n      }\n    }\n\n    if (this.limitSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n      var viewFrom = this.viewFrom_;\n\n      if (viewFrom === '') {\n        if (this.isViewFromLeft()) {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n        } else {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n        }\n      }\n\n      obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n    } // For now, priority index is the default, so we only specify if it's some other index\n\n\n    if (this.index_ !== PRIORITY_INDEX) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n    }\n\n    return obj;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n  /**\r\n   * @return {!NodeFilter}\r\n   */\n\n\n  QueryParams.prototype.getNodeFilter = function () {\n    if (this.loadsAllData()) {\n      return new IndexedFilter(this.getIndex());\n    } else if (this.hasLimit()) {\n      return new LimitedFilter(this);\n    } else {\n      return new RangedFilter(this);\n    }\n  };\n  /**\r\n   * Returns a set of REST query string parameters representing this query.\r\n   *\r\n   * @return {!Object.<string,*>} query string parameters\r\n   */\n\n\n  QueryParams.prototype.toRestQueryStringParameters = function () {\n    var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n    var qs = {};\n\n    if (this.isDefault()) {\n      return qs;\n    }\n\n    var orderBy;\n\n    if (this.index_ === PRIORITY_INDEX) {\n      orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n    } else if (this.index_ === VALUE_INDEX) {\n      orderBy = REST_CONSTANTS.VALUE_INDEX;\n    } else if (this.index_ === KEY_INDEX) {\n      orderBy = REST_CONSTANTS.KEY_INDEX;\n    } else {\n      util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\n      orderBy = this.index_.toString();\n    }\n\n    qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\n\n    if (this.startSet_) {\n      qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\n\n      if (this.startNameSet_) {\n        qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\n      }\n    }\n\n    if (this.endSet_) {\n      qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\n\n      if (this.endNameSet_) {\n        qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\n      }\n    }\n\n    if (this.limitSet_) {\n      if (this.isViewFromLeft()) {\n        qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n      } else {\n        qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n      }\n    }\n\n    return qs;\n  };\n  /**\r\n   * Wire Protocol Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n\n  QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n    INDEX_START_VALUE: 'sp',\n    INDEX_START_NAME: 'sn',\n    INDEX_END_VALUE: 'ep',\n    INDEX_END_NAME: 'en',\n    LIMIT: 'l',\n    VIEW_FROM: 'vf',\n    VIEW_FROM_LEFT: 'l',\n    VIEW_FROM_RIGHT: 'r',\n    INDEX: 'i'\n  };\n  /**\r\n   * REST Query Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n  QueryParams.REST_QUERY_CONSTANTS_ = {\n    ORDER_BY: 'orderBy',\n    PRIORITY_INDEX: '$priority',\n    VALUE_INDEX: '$value',\n    KEY_INDEX: '$key',\n    START_AT: 'startAt',\n    END_AT: 'endAt',\n    LIMIT_TO_FIRST: 'limitToFirst',\n    LIMIT_TO_LAST: 'limitToLast'\n  };\n  /**\r\n   * Default, empty query parameters\r\n   * @type {!QueryParams}\r\n   * @const\r\n   */\n\n  QueryParams.DEFAULT = new QueryParams();\n  return QueryParams;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  tslib.__extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   *\r\n   * @param {!Repo} repo\r\n   * @param {(!Path)} path\r\n   * @extends {Query}\r\n   */\n\n\n  function Reference(repo, path) {\n    var _this = this;\n\n    if (!(repo instanceof Repo)) {\n      throw new Error('new Reference() no longer supported - use app.database().');\n    } // call Query's constructor, passing in the repo and path.\n\n\n    _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\n    return _this;\n  }\n  /** @return {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    util.validateArgCount('Reference.key', 0, 0, arguments.length);\n\n    if (this.path.isEmpty()) {\n      return null;\n    } else {\n      return this.path.getBack();\n    }\n  };\n  /**\r\n   * @param {!(string|Path)} pathString\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.child = function (pathString) {\n    util.validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (this.path.getFront() === null) {\n        validateRootPathString('Reference.child', 1, pathString, false);\n      } else {\n        validatePathString('Reference.child', 1, pathString, false);\n      }\n    }\n\n    return new Reference(this.repo, this.path.child(pathString));\n  };\n  /** @return {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    util.validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parentPath = this.path.parent();\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  };\n  /** @return {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    util.validateArgCount('Reference.root', 0, 0, arguments.length);\n    var ref = this;\n\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n\n    return ref;\n  };\n  /** @return {!Database} */\n\n\n  Reference.prototype.databaseProp = function () {\n    return this.repo.database;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    util.validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    util.validateCallback('Reference.set', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path, newVal,\n    /*priority=*/\n    null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.update = function (objectToMerge, onComplete) {\n    util.validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n    util.validateCallback('Reference.update', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {string|number|null} newPriority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.remove = function (onComplete) {\n    util.validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    util.validateCallback('Reference.remove', 1, onComplete, true);\n    return this.set(null, onComplete);\n  };\n  /**\r\n   * @param {function(*):*} transactionUpdate\r\n   * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n   * @param {boolean=} applyLocally\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    util.validateCallback('Reference.transaction', 2, onComplete, true); // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    if (applyLocally === undefined) {\n      applyLocally = true;\n    }\n\n    var deferred = new util.Deferred();\n\n    if (typeof onComplete === 'function') {\n      deferred.promise.catch(function () {});\n    }\n\n    var promiseComplete = function promiseComplete(error, committed, snapshot) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n\n    this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n    return deferred.promise;\n  };\n  /**\r\n   * @param {string|number|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    util.validateCallback('Reference.setPriority', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*=} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.push = function (value, onComplete) {\n    util.validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    util.validateCallback('Reference.push', 2, onComplete, true);\n    var now = this.repo.serverTime();\n    var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n\n    var thennablePushRef = this.child(name);\n    var pushRef = this.child(name);\n    var promise;\n\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(function () {\n        return pushRef;\n      });\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise.catch(function () {});\n    }\n\n    return thennablePushRef;\n  };\n  /**\r\n   * @return {!OnDisconnect}\r\n   */\n\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  };\n\n  Object.defineProperty(Reference.prototype, \"database\", {\n    get: function get() {\n      return this.databaseProp();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function get() {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function get() {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nQuery.__referenceConstructor = Reference;\nSyncPoint.__referenceConstructor = Reference;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Node in a Tree.\r\n */\n\nvar TreeNode =\n/** @class */\nfunction () {\n  function TreeNode() {\n    // TODO: Consider making accessors that create children and value lazily or\n    // separate Internal / Leaf 'types'.\n    this.children = {};\n    this.childCount = 0;\n    this.value = null;\n  }\n\n  return TreeNode;\n}();\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {string=} name_ Optional name of the node.\r\n   * @param {Tree=} parent_ Optional parent node.\r\n   * @param {TreeNode=} node_ Optional node to wrap.\r\n   */\n  function Tree(name_, parent_, node_) {\n    if (name_ === void 0) {\n      name_ = '';\n    }\n\n    if (parent_ === void 0) {\n      parent_ = null;\n    }\n\n    if (node_ === void 0) {\n      node_ = new TreeNode();\n    }\n\n    this.name_ = name_;\n    this.parent_ = parent_;\n    this.node_ = node_;\n  }\n  /**\r\n   * Returns a sub-Tree for the given path.\r\n   *\r\n   * @param {!(string|Path)} pathObj Path to look up.\r\n   * @return {!Tree.<T>} Tree for path.\r\n   */\n\n\n  Tree.prototype.subTree = function (pathObj) {\n    // TODO: Require pathObj to be Path?\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n    var child = this,\n        next = path.getFront();\n\n    while (next !== null) {\n      var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\n      child = new Tree(next, child, childNode);\n      path = path.popFront();\n      next = path.getFront();\n    }\n\n    return child;\n  };\n  /**\r\n   * Returns the data associated with this tree node.\r\n   *\r\n   * @return {?T} The data or null if no data exists.\r\n   */\n\n\n  Tree.prototype.getValue = function () {\n    return this.node_.value;\n  };\n  /**\r\n   * Sets data to this tree node.\r\n   *\r\n   * @param {!T} value Value to set.\r\n   */\n\n\n  Tree.prototype.setValue = function (value) {\n    util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n    this.node_.value = value;\n    this.updateParents_();\n  };\n  /**\r\n   * Clears the contents of the tree node (its value and all children).\r\n   */\n\n\n  Tree.prototype.clear = function () {\n    this.node_.value = null;\n    this.node_.children = {};\n    this.node_.childCount = 0;\n    this.updateParents_();\n  };\n  /**\r\n   * @return {boolean} Whether the tree has any children.\r\n   */\n\n\n  Tree.prototype.hasChildren = function () {\n    return this.node_.childCount > 0;\n  };\n  /**\r\n   * @return {boolean} Whether the tree is empty (no value or children).\r\n   */\n\n\n  Tree.prototype.isEmpty = function () {\n    return this.getValue() === null && !this.hasChildren();\n  };\n  /**\r\n   * Calls action for each child of this tree node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachChild = function (action) {\n    var _this = this;\n\n    each(this.node_.children, function (child, childTree) {\n      action(new Tree(child, _this, childTree));\n    });\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n   *   false.\r\n   * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n   *   parent.\r\n   */\n\n\n  Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n    if (includeSelf && !childrenFirst) {\n      action(this);\n    }\n\n    this.forEachChild(function (child) {\n      child.forEachDescendant(action,\n      /*includeSelf=*/\n      true, childrenFirst);\n    });\n\n    if (includeSelf && childrenFirst) {\n      action(this);\n    }\n  };\n  /**\r\n   * Calls action on each ancestor node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n   *   true to abort.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n   * @return {boolean} true if the action callback returned true.\r\n   */\n\n\n  Tree.prototype.forEachAncestor = function (action, includeSelf) {\n    var node = includeSelf ? this : this.parent();\n\n    while (node !== null) {\n      if (action(node)) {\n        return true;\n      }\n\n      node = node.parent();\n    }\n\n    return false;\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n   * is found, action is called on it and traversal does not continue inside the node.\r\n   * Action is *not* called on this node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n    this.forEachChild(function (child) {\n      if (child.getValue() !== null) {\n        action(child);\n      } else {\n        child.forEachImmediateDescendantWithValue(action);\n      }\n    });\n  };\n  /**\r\n   * @return {!Path} The path of this tree node, as a Path.\r\n   */\n\n\n  Tree.prototype.path = function () {\n    return new Path(this.parent_ === null ? this.name_ : this.parent_.path() + '/' + this.name_);\n  };\n  /**\r\n   * @return {string} The name of the tree node.\r\n   */\n\n\n  Tree.prototype.name = function () {\n    return this.name_;\n  };\n  /**\r\n   * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n   */\n\n\n  Tree.prototype.parent = function () {\n    return this.parent_;\n  };\n  /**\r\n   * Adds or removes this child from its parent based on whether it's empty or not.\r\n   *\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateParents_ = function () {\n    if (this.parent_ !== null) {\n      this.parent_.updateChild_(this.name_, this);\n    }\n  };\n  /**\r\n   * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n   *\r\n   * @param {string} childName The name of the child to update.\r\n   * @param {!Tree.<T>} child The child to update.\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateChild_ = function (childName, child) {\n    var childEmpty = child.isEmpty();\n    var childExists = util.contains(this.node_.children, childName);\n\n    if (childEmpty && childExists) {\n      delete this.node_.children[childName];\n      this.node_.childCount--;\n      this.updateParents_();\n    } else if (!childEmpty && !childExists) {\n      this.node_.children[childName] = child.node_;\n      this.node_.childCount++;\n      this.updateParents_();\n    }\n  };\n\n  return Tree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n\n/**\r\n * @enum {number}\r\n */\n\n\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\"; // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n\n  TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\"; // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n\n  TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\"; // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n\n  TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\"; // Temporary state used to mark transactions that need to be aborted.\n\n  TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus || (TransactionStatus = {}));\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nRepo.prototype.transactionsInit_ = function () {\n  /**\r\n   * Stores queues of outstanding transactions for Firebase locations.\r\n   *\r\n   * @type {!Tree.<Array.<!Transaction>>}\r\n   * @private\r\n   */\n  this.transactionQueueTree_ = new Tree();\n};\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\n\n\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n  this.log_('transaction on ' + path); // Add a watch to make sure we get server updates.\n\n  var valueCallback = function valueCallback() {};\n\n  var watchRef = new Reference(this, path);\n  watchRef.on('value', valueCallback);\n\n  var unwatcher = function unwatcher() {\n    watchRef.off('value', valueCallback);\n  }; // Initialize transaction.\n\n\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  }; // Run transaction initially.\n\n  var currentState = this.getLatestState_(path);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n\n    if (transaction.onComplete) {\n      // We just set the input snapshot, so this cast should be safe\n      var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\n      transaction.onComplete(null, false, snapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n    transaction.status = TransactionStatus.RUN;\n    var queueNode = this.transactionQueueTree_.subTree(path);\n    var nodeQueue = queueNode.getValue() || [];\n    nodeQueue.push(transaction);\n    queueNode.setValue(nodeQueue); // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our transaction state, since the user could\n    // start new transactions from the event callbacks.\n\n    var priorityForNode = void 0;\n\n    if (typeof newVal === 'object' && newVal !== null && util.contains(newVal, '.priority')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = util.safeGet(newVal, '.priority');\n      util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    priorityForNode\n    /** @type {null|number|string} */\n    = priorityForNode;\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    this.sendReadyTransactions_();\n  }\n};\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\n  return this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) || ChildrenNode.EMPTY_NODE;\n};\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.sendReadyTransactions_ = function (node) {\n  var _this = this;\n\n  if (node === void 0) {\n    node = this.transactionQueueTree_;\n  } // Before recursing, make sure any completed transactions are removed.\n\n\n  if (!node) {\n    this.pruneCompletedTransactionsBelowNode_(node);\n  }\n\n  if (node.getValue() !== null) {\n    var queue = this.buildTransactionQueue_(node);\n    util.assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === TransactionStatus.RUN;\n    }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n    if (allRun) {\n      this.sendTransactionQueue_(node.path(), queue);\n    }\n  } else if (node.hasChildren()) {\n    node.forEachChild(function (childNode) {\n      _this.sendReadyTransactions_(childNode);\n    });\n  }\n};\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\n  var _this = this; // Mark transactions as sent and increment retry count!\n\n\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = this.getLatestState_(path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    var relativePath = Path.relativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n    snapToSend = snapToSend.updateChild(relativePath\n    /** @type {!Node} */\n    , txn.currentOutputSnapshotRaw);\n  }\n\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path; // Send the put.\n\n  this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    _this.log_('transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n\n    var events = [];\n\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n      // the callback could trigger more transactions or sets.\n      var callbacks = [];\n\n      for (var i = 0; i < queue.length; i++) {\n        queue[i].status = TransactionStatus.COMPLETED;\n        events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this transaction is complete, it should be set\n          var node = queue[i].currentOutputSnapshotResolved;\n          var ref = new Reference(_this, queue[i].path);\n          var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n        }\n\n        queue[i].unwatcher();\n      } // Now remove the completed transactions.\n\n\n      _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path)); // There may be pending transactions that we can now send.\n\n\n      _this.sendReadyTransactions_();\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, events); // Finally, trigger onComplete callbacks.\n\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n          } else {\n            queue[i].status = TransactionStatus.RUN;\n          }\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.NEEDS_ABORT;\n          queue[i].abortReason = status;\n        }\n      }\n\n      _this.rerunTransactions_(path);\n    }\n  }, latestHash);\n};\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.rerunTransactions_ = function (changedPath) {\n  var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n  var path = rootMostTransactionNode.path();\n  var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n  this.rerunTransactionQueue_(queue, path);\n  return path;\n};\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  } // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n  // the callback could trigger more transactions or sets.\n\n\n  var callbacks = [];\n  var events = []; // Ignore all of the sets we're going to re-run.\n\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === TransactionStatus.RUN;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n\n  for (var i = 0; i < queue.length; i++) {\n    var transaction = queue[i];\n    var relativePath = Path.relativePath(path, transaction.path);\n    var abortTransaction = false,\n        abortReason = void 0;\n    util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n    } else if (transaction.status === TransactionStatus.RUN) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n      } else {\n        // This code reruns a transaction\n        var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n        transaction.currentInputSnapshot = currentNode;\n        var newData = queue[i].update(currentNode.val());\n\n        if (newData !== undefined) {\n          validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n          var newDataNode = nodeFromJSON$1(newData);\n          var hasExplicitPriority = typeof newData === 'object' && newData != null && util.contains(newData, '.priority');\n\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          var oldWriteId = transaction.currentWriteId;\n          var serverValues = this.generateServerValues();\n          var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = this.getNextWriteId_(); // Mutates setsToIgnore in place\n\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n          events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        }\n      }\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    events = [];\n\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED; // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n      // So defer the unwatcher until we're done.\n\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          var ref = new Reference(this, queue[i].path); // We set this field immediately, so it's safe to cast to an actual snapshot\n\n          var lastInput\n          /** @type {!Node} */\n          = queue[i].currentInputSnapshot;\n          var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n        } else {\n          callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n        }\n      }\n    }\n  } // Clean up completed transactions.\n\n\n  this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  } // Try to send the transaction result to the server.\n\n\n  this.sendReadyTransactions_();\n};\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\n  var front; // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n\n  var transactionNode = this.transactionQueueTree_;\n  front = path.getFront();\n\n  while (front !== null && transactionNode.getValue() === null) {\n    transactionNode = transactionNode.subTree(front);\n    path = path.popFront();\n    front = path.getFront();\n  }\n\n  return transactionNode;\n};\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n};\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n  var _this = this;\n\n  var nodeQueue = node.getValue();\n\n  if (nodeQueue !== null) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  node.forEachChild(function (child) {\n    _this.aggregateTransactionQueuesForNode_(child, queue);\n  });\n};\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n  var _this = this;\n\n  var queue = node.getValue();\n\n  if (queue) {\n    var to = 0;\n\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n\n    queue.length = to;\n    node.setValue(queue.length > 0 ? queue : null);\n  }\n\n  node.forEachChild(function (childNode) {\n    _this.pruneCompletedTransactionsBelowNode_(childNode);\n  });\n};\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.abortTransactions_ = function (path) {\n  var _this = this;\n\n  var affectedPath = this.getAncestorTransactionNode_(path).path();\n  var transactionNode = this.transactionQueueTree_.subTree(path);\n  transactionNode.forEachAncestor(function (node) {\n    _this.abortTransactionsOnNode_(node);\n  });\n  this.abortTransactionsOnNode_(transactionNode);\n  transactionNode.forEachDescendant(function (node) {\n    _this.abortTransactionsOnNode_(node);\n  });\n  return affectedPath;\n};\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\n  var queue = node.getValue();\n\n  if (queue !== null) {\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n    // can be immediately aborted and removed.\n\n    var events = [];\n    var lastSent = -1;\n\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;else if (queue[i].status === TransactionStatus.SENT) {\n        util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n        lastSent = i; // Mark transaction for abort when it comes back.\n\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n        queue[i].unwatcher();\n        events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n\n        if (queue[i].onComplete) {\n          var snapshot = null;\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n        }\n      }\n    }\n\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      node.setValue(null);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    } // Now fire the callbacks.\n\n\n    this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(app_, authProvider_) {\n    var _this = this;\n\n    this.app_ = app_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.get().then(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n  /**\r\n   * @param {boolean} forceRefresh\r\n   * @return {!Promise<FirebaseAuthTokenData>}\r\n   */\n\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(function () {\n        return listener(null);\n      }, 0);\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.app_.name + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.app_.options) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\n\n\nvar EmulatorAdminTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorAdminTokenProvider() {}\n\n  EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  };\n\n  EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  };\n\n  EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () {};\n\n  EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\n  return EmulatorAdminTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\nvar _staticInstance;\n/**\r\n * Creates and caches Repo instances.\r\n */\n\n\nvar RepoManager =\n/** @class */\nfunction () {\n  function RepoManager() {\n    /**\r\n     * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n     */\n    this.repos_ = {};\n    /**\r\n     * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n     * @private {boolean}\r\n     */\n\n    this.useRestClient_ = false;\n  }\n\n  RepoManager.getInstance = function () {\n    if (!_staticInstance) {\n      _staticInstance = new RepoManager();\n    }\n\n    return _staticInstance;\n  }; // TODO(koss): Remove these functions unless used in tests?\n\n\n  RepoManager.prototype.interrupt = function () {\n    var e_1, _a, e_2, _b;\n\n    try {\n      for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].interrupt();\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  RepoManager.prototype.resume = function () {\n    var e_3, _a, e_4, _b;\n\n    try {\n      for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_4 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].resume();\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n  /**\r\n   * This function should only ever be called to CREATE a new database instance.\r\n   *\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Database}\r\n   */\n\n\n  RepoManager.prototype.databaseFromApp = function (app, authProvider, url, nodeAdmin) {\n    var dbUrl = url || app.options.databaseURL;\n\n    if (dbUrl === undefined) {\n      if (!app.options.projectId) {\n        fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n      }\n\n      log('Using default host for project ', app.options.projectId);\n      dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n    }\n\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    var repoInfo = parsedUrl.repoInfo;\n    var isEmulator;\n    var dbEmulatorHost = undefined;\n\n    if (typeof process !== 'undefined') {\n      dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n    }\n\n    if (dbEmulatorHost) {\n      isEmulator = true;\n      dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n      parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n      repoInfo = parsedUrl.repoInfo;\n    } else {\n      isEmulator = !parsedUrl.repoInfo.secure;\n    }\n\n    var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorAdminTokenProvider() : new FirebaseAuthTokenProvider(app, authProvider);\n    validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n\n    if (!parsedUrl.path.isEmpty()) {\n      fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n    }\n\n    var repo = this.createRepo(repoInfo, app, authTokenProvider);\n    return repo.database;\n  };\n  /**\r\n   * Remove the repo and make sure it is disconnected.\r\n   *\r\n   * @param {!Repo} repo\r\n   */\n\n\n  RepoManager.prototype.deleteRepo = function (repo) {\n    var appRepos = util.safeGet(this.repos_, repo.app.name); // This should never happen...\n\n    if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\n      fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n    }\n\n    repo.interrupt();\n    delete appRepos[repo.repoInfo_.toURLString()];\n  };\n  /**\r\n   * Ensures a repo doesn't already exist and then creates one using the\r\n   * provided app.\r\n   *\r\n   * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Repo} The Repo object for the specified server / repoName.\r\n   */\n\n\n  RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\n    var appRepos = util.safeGet(this.repos_, app.name);\n\n    if (!appRepos) {\n      appRepos = {};\n      this.repos_[app.name] = appRepos;\n    }\n\n    var repo = util.safeGet(appRepos, repoInfo.toURLString());\n\n    if (repo) {\n      fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n    }\n\n    repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\n    appRepos[repoInfo.toURLString()] = repo;\n    return repo;\n  };\n  /**\r\n   * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n   * @param {boolean} forceRestClient\r\n   */\n\n\n  RepoManager.prototype.forceRestClient = function (forceRestClient) {\n    this.useRestClient_ = forceRestClient;\n  };\n\n  return RepoManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   * @param {!Repo} repo_\r\n   */\n  function Database(repo_) {\n    this.repo_ = repo_;\n\n    if (!(repo_ instanceof Repo)) {\n      fatal(\"Don't call new Database() directly - please use firebase.database().\");\n    }\n    /** @type {Reference} */\n\n\n    this.root_ = new Reference(repo_, Path.Empty);\n    this.INTERNAL = new DatabaseInternals(this);\n  }\n\n  Object.defineProperty(Database.prototype, \"app\", {\n    get: function get() {\n      return this.repo_.app;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Database.prototype.ref = function (path) {\n    this.checkDeleted_('ref');\n    util.validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @param {string} url\r\n   * @return {!Reference} Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    /** @const {string} */\n    var apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    util.validateArgCount(apiName, 1, 1, arguments.length);\n    var parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\n    validateUrl(apiName, 1, parsedURL);\n    var repoInfo = parsedURL.repoInfo;\n\n    if (repoInfo.host !== this.repo_.repoInfo_.host) {\n      fatal(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');\n    }\n\n    return this.ref(parsedURL.path.toString());\n  };\n  /**\r\n   * @param {string} apiName\r\n   */\n\n\n  Database.prototype.checkDeleted_ = function (apiName) {\n    if (this.repo_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    util.validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    this.repo_.interrupt();\n  };\n\n  Database.prototype.goOnline = function () {\n    util.validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    this.repo_.resume();\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    },\n    increment: function increment(delta) {\n      return {\n        '.sv': {\n          'increment': delta\n        }\n      };\n    }\n  };\n  return Database;\n}();\n\nvar DatabaseInternals =\n/** @class */\nfunction () {\n  /** @param {!Database} database */\n  function DatabaseInternals(database) {\n    this.database = database;\n  }\n  /** @return {Promise<void>} */\n\n\n  DatabaseInternals.prototype.delete = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      return tslib.__generator(this, function (_a) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.database.checkDeleted_('delete'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        RepoManager.getInstance().deleteRepo(this.database.repo_); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        this.database.repo_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        this.database.root_ = null;\n        this.database.INTERNAL = null;\n        this.database = null;\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  return DatabaseInternals;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\n\n\nvar forceLongPolling = function forceLongPolling() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function forceWebSockets() {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\n\nvar stats = function stats(ref, showDelta) {\n  ref.repo.stats(showDelta);\n};\n\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nvar dataUpdateCount = function dataUpdateCount(ref) {\n  return ref.repo.dataUpdateCount;\n};\n\nvar interceptServerData = function interceptServerData(ref, callback) {\n  return ref.repo.interceptServerData_(callback);\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection;\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n};\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\n\nvar hijackHash = function hijackHash(newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\n\n\nvar ConnectionTarget = RepoInfo;\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\n\nvar queryIdentifier = function queryIdentifier(query) {\n  return query.queryIdentifier();\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\n\n\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n  RepoManager.getInstance().forceRestClient(_forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\nvar name = \"@firebase/database\";\nvar version = \"0.6.13\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new component.Component('database', function (container, url) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (util.isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase__default['default']);\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;"],"sourceRoot":""}