{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/404.js"],"names":["logo","isSafari","require","theme","createMuiTheme","palette","primary","main","secondary","status","danger","responsiveFontSizes","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","backgroundColor","title","footer","position","bottom","textAlign","paddingBottom","appBar","top","children","React","openDrawer","setOpenDrawer","toggleDrawer","useStaticQuery","open","event","classes","style","minHeight","anchor","onClose","onOpen","home","elevation","edge","className","color","aria-label","onClick","display","marginLeft","src","alt","height","navigate"],"mappings":"qHAAA,8LA+BMA,GA/BN,UA+BeC,YAAF,iBAAuEC,EAApF,QAA6CA,EAAhC,SAETC,EAAQC,YAAe,CACzBC,QAAS,CACPC,QAAS,CAAEC,KAAM,WACjBC,UAAW,CAAED,KAAM,YAErBE,OAAQ,CACNC,OAAQ,YAGZP,EAAQQ,YAARR,GAGA,IAAMS,EAAYC,aAAW,kBAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAad,UADH,GAEVe,gBAFU,QAGV,UAAW,CACTA,gBAAiB,UAGrBC,MAAO,CACLJ,SAAU,GAEZK,OAAQ,CACNC,SADM,QAENC,OAFM,EAGNC,UAHM,SAINC,cAJM,GAKNN,gBAAiB,WAEnBO,OAAQ,CACNC,IADM,OAENJ,OAAQ,OA8DZ,IA1De,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,SAAe,EACKC,cADL,GACxBC,EADwB,KACZC,EADY,KAYzBC,GAVOC,yBAAb,cAUqB,SAACC,GAAD,OAAU,cACzBC,eAASA,QAA6BA,eAA1C,UAAiEA,QAIjEJ,QAGIK,EAAUvB,IAEhB,OACE,oCACE,uBAAeT,MAAOA,GACpB,yBAAKiC,MAAO,CAACC,UAAW,uBACtB,6BACE,uBACIC,OADJ,OAEIL,KAFJ,EAGIM,QAASR,GAHb,GAIIS,OAAQT,GAAa,IAErB,uBAAgBU,MAAM,KAE1B,uBAAQpB,SAAR,SAA0Be,MAAO,CAAClB,gBAAiB,eAAgBwB,UAAW,GAC5E,2BACE,uBAAYC,KAAZ,QAAyBC,UAAWT,EAApC,WAAwDU,MAAxD,UAAwEC,aAAxE,OAA0FC,QAAS,kBAAMjB,GAAN,KACjG,sBAFJ,OAIE,yBAAKM,MAAO,CAACY,QAAD,SAAmBC,WAAW,oBAAqBC,IAA/D,EAA0EC,IAA1E,OAAqFC,OAArF,OAAmGL,QAAS,kBAAMM,mBAAN,WAIlH,8BApBJ,IAsBE,6BACE,sBAzBR,W,kCC9FF,wDAaA,UARqB,kBACnB,2BACE,uBAAKlC,MAAM,mBACX,4BAFF,kBAGE,2BAJiB","file":"component---src-pages-404-js-d45d2bb7f551f2b25fe3.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport {isSafari, isMobileSafari} from 'react-device-detect';\n\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport ElementiDrawer from \"../components/ElementiDrawer\"\nimport Footer from \"../components/Footer\"\n\nimport \"./layout.css\"\n\nimport { navigate } from \"gatsby\"\n\nconst logo = !(isSafari || isMobileSafari) ? require(\"../images/logobianco.webp\") : require(\"../images/aeatondo.png\")\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: { main: '#ef6c00' },\n    secondary: { main: '#212121' },\n  },\n  status: {\n    danger: 'orange',\n  },\n});\ntheme = responsiveFontSizes(theme);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    backgroundColor: \"black\",\n    \"&:hover\": {\n      backgroundColor: \"black\"\n    }\n  },\n  title: {\n    flexGrow: 1,\n  },\n  footer: {\n    position: \"fixed\",\n    bottom: 0,\n    textAlign: \"center\",\n    paddingBottom: 10,\n    backgroundColor: \"#ef6c00\",\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n}));\n\nconst Layout = ({ children }) => {\n  const [openDrawer, setOpenDrawer] = React.useState(false);\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  const toggleDrawer = (open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setOpenDrawer(open);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <div style={{minHeight: \"calc(100vh - 64px)\"}} >\n          <div>\n            <SwipeableDrawer\n                anchor=\"left\"\n                open={openDrawer}\n                onClose={toggleDrawer(false)}\n                onOpen={toggleDrawer(true)}\n              >\n                <ElementiDrawer home={false}/>\n            </SwipeableDrawer>\n            <AppBar position=\"static\" style={{backgroundColor: \"transparent\"}} elevation={0}>\n              <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => setOpenDrawer(!openDrawer)}>\n                  <MenuIcon/>\n                </IconButton>\n                <img style={{display:\"inline\", marginLeft:\"calc(49% - 70px)\"}} src={logo} alt=\"logo\" height=\"64px\" onClick={() => navigate(\"/\")}/>\n              </Toolbar>\n            </AppBar>\n          </div>\n          <main>{children}</main>\n        </div>\n        <div>\n          <Footer/>\n        </div>\n      </ThemeProvider>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}