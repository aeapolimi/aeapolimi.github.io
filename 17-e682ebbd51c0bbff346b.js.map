{"version":3,"sources":["webpack:///./node_modules/@firebase/performance/dist/index.cjs.js","webpack:///./node_modules/firebase/performance/dist/index.esm.js"],"names":["Object","defineProperty","exports","value","firebase","tslib","util","logger$1","component","_interopDefaultLegacy","e","_a","apiInstance","windowInstance","firebase__default","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","ErrorFactory","consoleLogger","Logger","logLevel","LogLevel","INFO","settingsServiceInstance","Api","window","this","create","performance","PerformanceObserver","windowLocation","location","navigator","document","cookieEnabled","localStorage","perfMetrics","onFirstInputDelay","prototype","getUrl","href","split","mark","name","measure","measureName","mark1","mark2","getEntriesByType","type","getEntriesByName","getTimeOrigin","timeOrigin","timing","navigationStart","requiredApisAvailable","fetch","Promise","isIndexedDBAvailable","info","setupObserver","entryType","callback","list","_i","getEntries","length","entry","observe","entryTypes","getInstance","undefined","mergeStrings","part1","part2","sizeDiff","resultArray","i","push","charAt","join","iid","VisibilityState","SettingsService","instrumentationEnabled","dataCollectionEnabled","loggingEnabled","tracesSamplingRate","networkRequestsSamplingRate","logEndPointUrl","flTransportEndpointUrl","transportKey","logSource","logTraceAfterSampling","logNetworkAfterSampling","configTimeToLive","getAppId","appId","firebaseAppInstance","options","getProjectId","projectId","getApiKey","apiKey","getFlTransportFullUrl","concat","getIid","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","RegExp","getVisibilityState","visibilityState","VISIBLE","HIDDEN","UNKNOWN","getEffectiveConnectionType","navigatorConnection","connection","effectiveType","DEFAULT_CONFIGS","getConfig","config","expiryString","getItem","expiry","Number","Date","now","configStringified","JSON","parse","getStoredConfig","processConfig","resolve","authTokenPromise","installationsService","getToken","then","authTokenVal","authToken","configEndPoint","request","Request","method","headers","Authorization","FIS_AUTH_PREFIX","body","stringify","app_instance_id","app_instance_id_token","app_id","app_version","sdk_version","response","ok","json","catch","getRemoteConfig","setItem","String","storeConfig","entries","fpr_enabled","fpr_log_source","fpr_log_endpoint_url","fpr_log_transport_key","fpr_vc_network_request_sampling_rate","fpr_vc_trace_sampling_rate","shouldLogAfterSampling","samplingRate","Math","random","initializationPromise","initializationStatus","getInitializationPromise","readyState","addEventListener","handler_1","removeEventListener","iidPromise","getId","iidVal","changeInitializationStatus","logger","remainingTries","queue","isTransportSetup","processQueue","timeOffset","setTimeout","staged","__spreadArrays","log_event","map","evt","source_extension_json_proto3","message","event_time_ms","eventTime","data","flTransportFullUrl","postToFlEndpoint","res","transportWait","nextRequestWaitMillis","requestOffset","isNaN","max","logResponseDetails","Array","isArray","responseAction","sendEventsToFl","request_time_ms","client_info","client_type","js_client_info","log_source","dispatchQueueEvents","addToQueue","sendLog","resource","resourceType","serializer","args","arguments","apply","transportHandler","logTrace","trace","settingsService","isAuto","sendTraceLog","networkRequestMetric","url","networkRequest","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","traceMetric","is_auto","duration_us","durationUs","keys","counters","customAttributes","getAttributes","custom_attributes","trace_metric","serializeTrace","google_app_id","web_app_info","page_url","service_worker_status","serviceWorker","controller","visibility_state","effective_connection_type","application_process_state","oobMetrics","Trace","traceMeasureName","state","api","randomId","floor","traceStartMark","TRACE_START_MARK_PREFIX","traceStopMark","TRACE_STOP_MARK_PREFIX","traceMeasure","TRACE_MEASURE_PREFIX","calculateTraceMetrics","start","traceName","stop","record","startTime","duration","attributes","__assign","metrics","metric","incrementMetric","counter","numAsInteger","putMetric","startsWith","indexOf","isValidMetricName","customMetricName","providedValue","valueAsInteger","getMetric","putAttribute","attr","isValidName","some","prefix","match","isValidCustomAttributeName","isValidValue","isValidCustomAttributeValue","attributeName","attributeValue","getAttribute","removeAttribute","setStartTime","setDuration","perfMeasureEntries","perfMeasureEntry","createOobTrace","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","domInteractive","domContentLoadedEventEnd","loadEventEnd","firstPaint","find","paintObject","firstContentfulPaint","createUserTimingTrace","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","networkRequestUrl","logEndpointUrl","flEndpointUrl","logNetworkRequest","transferSize","setupOobResources","timeoutId_1","fid","clearTimeout","setupOobTraces","resources","resources_1","setupNetworkRequests","measures","measures_1","setupUserTimingTraces","substring","PerformanceController","app","validateIndexedDBOpenable","isAvailable","error","get","set","val","enumerable","configurable","registerPerformance","instance","factoryMethod","installations","setupApi","INTERNAL","registerComponent","Component","container","getProvider","getImmediate","registerVersion"],"mappings":"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","file":"17-e682ebbd51c0bbff346b.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar firebase = require('@firebase/app');\n\nrequire('@firebase/installations');\n\nvar tslib = require('tslib');\n\nvar util = require('@firebase/util');\n\nvar logger$1 = require('@firebase/logger');\n\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n\nvar name = \"@firebase/performance\";\nvar version = \"0.4.1\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\n\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\n\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\n\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\n\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\nvar SERVICE = 'performance';\nvar SERVICE_NAME = 'Performance';\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar _a;\n\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"trace started\"\n/* TRACE_STARTED_BEFORE */\n] = 'Trace {$traceName} was started before.', _a[\"trace stopped\"\n/* TRACE_STOPPED_BEFORE */\n] = 'Trace {$traceName} is not running.', _a[\"no window\"\n/* NO_WINDOW */\n] = 'Window is not available.', _a[\"no app id\"\n/* NO_APP_ID */\n] = 'App id is not available.', _a[\"no project id\"\n/* NO_PROJECT_ID */\n] = 'Project id is not available.', _a[\"no api key\"\n/* NO_API_KEY */\n] = 'Api key is not available.', _a[\"invalid cc log\"\n/* INVALID_CC_LOG */\n] = 'Attempted to queue invalid cc event', _a[\"FB not default\"\n/* FB_NOT_DEFAULT */\n] = 'Performance can only start when Firebase app instance is the default one.', _a[\"RC response not ok\"\n/* RC_NOT_OK */\n] = 'RC response is not ok', _a[\"invalid attribute name\"\n/* INVALID_ATTRIBUTE_NAME */\n] = 'Attribute name {$attributeName} is invalid.', _a[\"invalid attribute value\"\n/* INVALID_ATTRIBUTE_VALUE */\n] = 'Attribute value {$attributeValue} is invalid.', _a[\"invalid custom metric name\"\n/* INVALID_CUSTOM_METRIC_NAME */\n] = 'Custom metric name {$customMetricName} is invalid', _a[\"invalid String merger input\"\n/* INVALID_STRING_MERGER_PARAMETER */\n] = 'Input for String merger is invalid, contact support team to resolve.', _a);\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar apiInstance;\nvar windowInstance;\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\n\nvar Api =\n/** @class */\nfunction () {\n  function Api(window) {\n    this.window = window;\n\n    if (!window) {\n      throw ERROR_FACTORY.create(\"no window\"\n      /* NO_WINDOW */\n      );\n    }\n\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will\n      // throw an exception.\n      this.localStorage = window.localStorage;\n    }\n\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  Api.prototype.getUrl = function () {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  };\n\n  Api.prototype.mark = function (name) {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n\n    this.performance.mark(name);\n  };\n\n  Api.prototype.measure = function (measureName, mark1, mark2) {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n\n    this.performance.measure(measureName, mark1, mark2);\n  };\n\n  Api.prototype.getEntriesByType = function (type) {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n\n    return this.performance.getEntriesByType(type);\n  };\n\n  Api.prototype.getEntriesByName = function (name) {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n\n    return this.performance.getEntriesByName(name);\n  };\n\n  Api.prototype.getTimeOrigin = function () {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return this.performance && (this.performance.timeOrigin || this.performance.timing.navigationStart);\n  };\n\n  Api.prototype.requiredApisAvailable = function () {\n    if (!fetch || !Promise || !this.navigator || !this.navigator.cookieEnabled) {\n      consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\n      return false;\n    }\n\n    if (!util.isIndexedDBAvailable()) {\n      consoleLogger.info('IndexedDB is not supported by current browswer');\n      return false;\n    }\n\n    return true;\n  };\n\n  Api.prototype.setupObserver = function (entryType, callback) {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n\n    var observer = new this.PerformanceObserver(function (list) {\n      for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\n        var entry = _a[_i]; // `entry` is a PerformanceEntry instance.\n\n        callback(entry);\n      }\n    }); // Start observing the entry types you care about.\n\n    observer.observe({\n      entryTypes: [entryType]\n    });\n  };\n\n  Api.getInstance = function () {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n\n    return apiInstance;\n  };\n\n  return Api;\n}();\n\nfunction setupApi(window) {\n  windowInstance = window;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction mergeStrings(part1, part2) {\n  var sizeDiff = part1.length - part2.length;\n\n  if (sizeDiff < 0 || sizeDiff > 1) {\n    throw ERROR_FACTORY.create(\"invalid String merger input\"\n    /* INVALID_STRING_MERGER_PARAMETER */\n    );\n  }\n\n  var resultArray = [];\n\n  for (var i = 0; i < part1.length; i++) {\n    resultArray.push(part1.charAt(i));\n\n    if (part2.length > i) {\n      resultArray.push(part2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar settingsServiceInstance;\n\nvar SettingsService =\n/** @class */\nfunction () {\n  function SettingsService() {\n    // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n    this.instrumentationEnabled = true; // The variable which controls logging of custom traces.\n\n    this.dataCollectionEnabled = true; // Configuration flags set through remote config.\n\n    this.loggingEnabled = false; // Sampling rate between 0 and 1.\n\n    this.tracesSamplingRate = 1;\n    this.networkRequestsSamplingRate = 1; // Address of logging service.\n\n    this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto'; // Performance event transport endpoint URL which should be compatible with proto3.\n    // New Address for transport service, not configurable via Remote Config.\n\n    this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n    this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV'); // Source type for performance event logs.\n\n    this.logSource = 462; // Flags which control per session logging of traces and network requests.\n\n    this.logTraceAfterSampling = false;\n    this.logNetworkAfterSampling = false; // TTL of config retrieved from remote config in hours.\n\n    this.configTimeToLive = 12;\n  }\n\n  SettingsService.prototype.getAppId = function () {\n    var appId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.appId;\n\n    if (!appId) {\n      throw ERROR_FACTORY.create(\"no app id\"\n      /* NO_APP_ID */\n      );\n    }\n\n    return appId;\n  };\n\n  SettingsService.prototype.getProjectId = function () {\n    var projectId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.projectId;\n\n    if (!projectId) {\n      throw ERROR_FACTORY.create(\"no project id\"\n      /* NO_PROJECT_ID */\n      );\n    }\n\n    return projectId;\n  };\n\n  SettingsService.prototype.getApiKey = function () {\n    var apiKey = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.apiKey;\n\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(\"no api key\"\n      /* NO_API_KEY */\n      );\n    }\n\n    return apiKey;\n  };\n\n  SettingsService.prototype.getFlTransportFullUrl = function () {\n    return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\n  };\n\n  SettingsService.getInstance = function () {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n\n    return settingsServiceInstance;\n  };\n\n  return SettingsService;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar iid;\n\nfunction getIidPromise() {\n  var iidPromise = SettingsService.getInstance().installationsService.getId(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  iidPromise.then(function (iidVal) {\n    iid = iidVal;\n  });\n  return iidPromise;\n} // This method should be used after the iid is retrieved by getIidPromise method.\n\n\nfunction getIid() {\n  return iid;\n}\n\nfunction getAuthTokenPromise() {\n  var authTokenPromise = SettingsService.getInstance().installationsService.getToken(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  authTokenPromise.then(function (authTokenVal) {});\n  return authTokenPromise;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityState;\n\n(function (VisibilityState) {\n  VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n  VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\n})(VisibilityState || (VisibilityState = {}));\n\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nfunction getServiceWorkerStatus() {\n  var navigator = Api.getInstance().navigator;\n\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return 2\n      /* CONTROLLED */\n      ;\n    } else {\n        return 3\n        /* UNCONTROLLED */\n        ;\n      }\n  } else {\n      return 1\n      /* UNSUPPORTED */\n      ;\n    }\n}\n\nfunction getVisibilityState() {\n  var document = Api.getInstance().document;\n  var visibilityState = document.visibilityState;\n\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nfunction getEffectiveConnectionType() {\n  var navigator = Api.getInstance().navigator;\n  var navigatorConnection = navigator.connection;\n  var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\n\n  switch (effectiveType) {\n    case 'slow-2g':\n      return 1\n      /* CONNECTION_SLOW_2G */\n      ;\n\n    case '2g':\n      return 2\n      /* CONNECTION_2G */\n      ;\n\n    case '3g':\n      return 3\n      /* CONNECTION_3G */\n      ;\n\n    case '4g':\n      return 4\n      /* CONNECTION_4G */\n      ;\n\n    default:\n      return 0\n      /* UNKNOWN */\n      ;\n  }\n}\n\nfunction isValidCustomAttributeName(name) {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n\n  var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\n    return name.startsWith(prefix);\n  });\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\n\nfunction isValidCustomAttributeValue(value) {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1'; // These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\n\nvar DEFAULT_CONFIGS = {\n  loggingEnabled: true\n};\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nfunction getConfig(iid) {\n  var config = getStoredConfig();\n\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(iid).then(processConfig).then(function (config) {\n    return storeConfig(config);\n  },\n  /** Do nothing for error, use defaults set in settings service. */\n  function () {});\n}\n\nfunction getStoredConfig() {\n  var localStorage = Api.getInstance().localStorage;\n\n  if (!localStorage) {\n    return;\n  }\n\n  var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n\n  var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n\n  if (!configStringified) {\n    return;\n  }\n\n  try {\n    var configResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch (_a) {\n    return;\n  }\n}\n\nfunction storeConfig(config) {\n  var localStorage = Api.getInstance().localStorage;\n\n  if (!config || !localStorage) {\n    return;\n  }\n\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() + SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\n}\n\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(iid) {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise().then(function (authToken) {\n    var projectId = SettingsService.getInstance().getProjectId();\n    var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\n    var request = new Request(configEndPoint, {\n      method: 'POST',\n      headers: {\n        Authorization: FIS_AUTH_PREFIX + \" \" + authToken\n      },\n\n      /* eslint-disable camelcase */\n      body: JSON.stringify({\n        app_instance_id: iid,\n        app_instance_id_token: authToken,\n        app_id: SettingsService.getInstance().getAppId(),\n        app_version: SDK_VERSION,\n        sdk_version: REMOTE_CONFIG_SDK_VERSION\n      })\n      /* eslint-enable camelcase */\n\n    });\n    return fetch(request).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } // In case response is not ok. This will be caught by catch.\n\n\n      throw ERROR_FACTORY.create(\"RC response not ok\"\n      /* RC_NOT_OK */\n      );\n    });\n  }).catch(function () {\n    consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n    return undefined;\n  });\n}\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valid.\r\n */\n\n\nfunction processConfig(config) {\n  if (!config) {\n    return config;\n  }\n\n  var settingsServiceInstance = SettingsService.getInstance();\n  var entries = config.entries || {};\n\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is\n    // known.\n    settingsServiceInstance.loggingEnabled = String(entries.fpr_enabled) === 'true';\n  } else {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\n  }\n\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  }\n\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } // Key from Remote Config has to be non-empty string, otherwsie use local value.\n\n\n  if (entries.fpr_log_transport_key) {\n    settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\n  }\n\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\n  }\n\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\n  } // Set the per session trace and network logging flags.\n\n\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\n  return config;\n}\n\nfunction configValid(expiry) {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate) {\n  return Math.random() <= samplingRate;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar initializationStatus = 1\n/* notInitialized */\n;\nvar initializationPromise;\n\nfunction getInitializationPromise() {\n  initializationStatus = 2\n  /* initializationPending */\n  ;\n  initializationPromise = initializationPromise || initializePerf();\n  return initializationPromise;\n}\n\nfunction isPerfInitialized() {\n  return initializationStatus === 3\n  /* initialized */\n  ;\n}\n\nfunction initializePerf() {\n  return getDocumentReadyComplete().then(function () {\n    return getIidPromise();\n  }).then(function (iid) {\n    return getConfig(iid);\n  }).then(function () {\n    return changeInitializationStatus();\n  }, function () {\n    return changeInitializationStatus();\n  });\n}\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\n\n\nfunction getDocumentReadyComplete() {\n  var document = Api.getInstance().document;\n  return new Promise(function (resolve) {\n    if (document && document.readyState !== 'complete') {\n      var handler_1 = function handler_1() {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler_1);\n          resolve();\n        }\n      };\n\n      document.addEventListener('readystatechange', handler_1);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus() {\n  initializationStatus = 3\n  /* initialized */\n  ;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000; // If end point does not work, the call will be tried for these many times.\n\nvar DEFAULT_REMAINING_TRIES = 3;\nvar remainingTries = DEFAULT_REMAINING_TRIES;\n/* eslint-enable camelcase */\n\nvar queue = [];\nvar isTransportSetup = false;\n\nfunction setupTransportService() {\n  if (!isTransportSetup) {\n    processQueue(INITIAL_SEND_TIME_DELAY_MS);\n    isTransportSetup = true;\n  }\n}\n\nfunction processQueue(timeOffset) {\n  setTimeout(function () {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    } // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n\n\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n\n    dispatchQueueEvents();\n  }, timeOffset);\n}\n\nfunction dispatchQueueEvents() {\n  // Capture a snapshot of the queue and empty the \"official queue\".\n  var staged = tslib.__spreadArrays(queue);\n\n  queue = [];\n  /* eslint-disable camelcase */\n  // We will pass the JSON serialized event to the backend.\n\n  var log_event = staged.map(function (evt) {\n    return {\n      source_extension_json_proto3: evt.message,\n      event_time_ms: String(evt.eventTime)\n    };\n  });\n  var data = {\n    request_time_ms: String(Date.now()),\n    client_info: {\n      client_type: 1,\n      js_client_info: {}\n    },\n    log_source: SettingsService.getInstance().logSource,\n    log_event: log_event\n  };\n  /* eslint-enable camelcase */\n\n  sendEventsToFl(data, staged).catch(function () {\n    // If the request fails for some reason, add the events that were attempted\n    // back to the primary queue to retry later.\n    queue = tslib.__spreadArrays(staged, queue);\n    remainingTries--;\n    consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\n    processQueue(DEFAULT_SEND_INTERVAL_MS);\n  });\n}\n\nfunction sendEventsToFl(data, staged) {\n  return postToFlEndpoint(data).then(function (res) {\n    if (!res.ok) {\n      consoleLogger.info('Call to Firebase backend failed.');\n    }\n\n    return res.json();\n  }).then(function (res) {\n    // Find the next call wait time from the response.\n    var transportWait = Number(res.nextRequestWaitMillis);\n    var requestOffset = DEFAULT_SEND_INTERVAL_MS;\n\n    if (!isNaN(transportWait)) {\n      requestOffset = Math.max(transportWait, requestOffset);\n    } // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\n    // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\n\n\n    var logResponseDetails = res.logResponseDetails;\n\n    if (Array.isArray(logResponseDetails) && logResponseDetails.length > 0 && logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\n      queue = tslib.__spreadArrays(staged, queue);\n      consoleLogger.info(\"Retry transport request later.\");\n    }\n\n    remainingTries = DEFAULT_REMAINING_TRIES; // Schedule the next process.\n\n    processQueue(requestOffset);\n  });\n}\n\nfunction postToFlEndpoint(data) {\n  var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\n  return fetch(flTransportFullUrl, {\n    method: 'POST',\n    body: JSON.stringify(data)\n  });\n}\n\nfunction addToQueue(evt) {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(\"invalid cc log\"\n    /* INVALID_CC_LOG */\n    );\n  } // Add the new event to the queue.\n\n\n  queue = tslib.__spreadArrays(queue, [evt]);\n}\n/** Log handler for cc service to send the performance logs to the server. */\n\n\nfunction transportHandler( // eslint-disable-next-line @typescript-eslint/no-explicit-any\nserializer) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var message = serializer.apply(void 0, args);\n    addToQueue({\n      message: message,\n      eventTime: Date.now()\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/* eslint-enble camelcase */\n\n\nvar logger; // This method is not called before initialization.\n\nfunction sendLog(resource, resourceType) {\n  if (!logger) {\n    logger = transportHandler(serializer);\n  }\n\n  logger(resource, resourceType);\n}\n\nfunction logTrace(trace) {\n  var settingsService = SettingsService.getInstance(); // Do not log if trace is auto generated and instrumentation is disabled.\n\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  } // Do not log if trace is custom and data collection is disabled.\n\n\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  } // Do not log if required apis are not available.\n\n\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  } // Only log the page load auto traces if page is visible.\n\n\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n\n  if (!settingsService.loggingEnabled || !settingsService.logTraceAfterSampling) {\n    return;\n  }\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise().then(function () {\n      return sendTraceLog(trace);\n    }, function () {\n      return sendTraceLog(trace);\n    });\n  }\n}\n\nfunction sendTraceLog(trace) {\n  if (getIid()) {\n    setTimeout(function () {\n      return sendLog(trace, 1\n      /* Trace */\n      );\n    }, 0);\n  }\n}\n\nfunction logNetworkRequest(networkRequest) {\n  var settingsService = SettingsService.getInstance(); // Do not log network requests if instrumentation is disabled.\n\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  } // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\n  // Need to blacklist both old and new endpoints to avoid migration gap.\n\n\n  var networkRequestUrl = networkRequest.url; // Blacklist old log endpoint and new transport endpoint.\n  // Because Performance SDK doesn't instrument requests sent from SDK itself.\n\n  var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\n  var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\n\n  if (networkRequestUrl === logEndpointUrl || networkRequestUrl === flEndpointUrl) {\n    return;\n  }\n\n  if (!settingsService.loggingEnabled || !settingsService.logNetworkAfterSampling) {\n    return;\n  }\n\n  setTimeout(function () {\n    return sendLog(networkRequest, 0\n    /* NetworkRequest */\n    );\n  }, 0);\n}\n\nfunction serializer(resource, resourceType) {\n  if (resourceType === 0\n  /* NetworkRequest */\n  ) {\n      return serializeNetworkRequest(resource);\n    }\n\n  return serializeTrace(resource);\n}\n\nfunction serializeNetworkRequest(networkRequest) {\n  var networkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  var perfMetric = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace) {\n  var traceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = trace.counters;\n  }\n\n  var customAttributes = trace.getAttributes();\n\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = customAttributes;\n  }\n\n  var perfMetric = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo() {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_METRIC_NAME_LENGTH = 100;\nvar RESERVED_AUTO_PREFIX = '_';\nvar oobMetrics = [FIRST_PAINT_COUNTER_NAME, FIRST_CONTENTFUL_PAINT_COUNTER_NAME, FIRST_INPUT_DELAY_COUNTER_NAME];\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\n\nfunction isValidMetricName(name, traceName) {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n\n  return traceName && traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) && oobMetrics.indexOf(name) > -1 || !name.startsWith(RESERVED_AUTO_PREFIX);\n}\n/**\r\n * Converts the provided value to an integer value to be used in case of a metric.\r\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\r\n *\r\n * @returns Converted integer number to be set for the metric.\r\n */\n\n\nfunction convertMetricValueToInteger(providedValue) {\n  var valueAsInteger = Math.floor(providedValue);\n\n  if (valueAsInteger < providedValue) {\n    consoleLogger.info(\"Metric value should be an Integer, setting the value as : \" + valueAsInteger + \".\");\n  }\n\n  return valueAsInteger;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Trace =\n/** @class */\nfunction () {\n  /**\r\n   * @param name The name of the trace.\r\n   * @param isAuto If the trace is auto-instrumented.\r\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n   * is only set when the trace is built for logging when the user directly uses the user timing\r\n   * api (performance.mark and performance.measure).\r\n   */\n  function Trace(name, isAuto, traceMeasureName) {\n    if (isAuto === void 0) {\n      isAuto = false;\n    }\n\n    this.name = name;\n    this.isAuto = isAuto;\n    this.state = 1\n    /* UNINITIALIZED */\n    ;\n    this.customAttributes = {};\n    this.counters = {};\n    this.api = Api.getInstance();\n    this.randomId = Math.floor(Math.random() * 1000000);\n\n    if (!this.isAuto) {\n      this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      this.traceMeasure = traceMeasureName || TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n  /**\r\n   * Starts a trace. The measurement of the duration starts at this point.\r\n   */\n\n\n  Trace.prototype.start = function () {\n    if (this.state !== 1\n    /* UNINITIALIZED */\n    ) {\n        throw ERROR_FACTORY.create(\"trace started\"\n        /* TRACE_STARTED_BEFORE */\n        , {\n          traceName: this.name\n        });\n      }\n\n    this.api.mark(this.traceStartMark);\n    this.state = 2\n    /* RUNNING */\n    ;\n  };\n  /**\r\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n   * is logged.\r\n   */\n\n\n  Trace.prototype.stop = function () {\n    if (this.state !== 2\n    /* RUNNING */\n    ) {\n        throw ERROR_FACTORY.create(\"trace stopped\"\n        /* TRACE_STOPPED_BEFORE */\n        , {\n          traceName: this.name\n        });\n      }\n\n    this.state = 3\n    /* TERMINATED */\n    ;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\n    this.calculateTraceMetrics();\n    logTrace(this);\n  };\n  /**\r\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n   * directly. No need to use start and stop methods.\r\n   * @param startTime Trace start time since epoch in millisec\r\n   * @param duration The duraction of the trace in millisec\r\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n   */\n\n\n  Trace.prototype.record = function (startTime, duration, options) {\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n\n    if (options && options.attributes) {\n      this.customAttributes = tslib.__assign({}, options.attributes);\n    }\n\n    if (options && options.metrics) {\n      for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\n        var metric = _a[_i];\n\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n\n    logTrace(this);\n  };\n  /**\r\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n   * custom metric if one with the given name does not exist. The value will be floored down to an\r\n   * integer.\r\n   * @param counter Name of the custom metric\r\n   * @param numAsInteger Increment by value\r\n   */\n\n\n  Trace.prototype.incrementMetric = function (counter, numAsInteger) {\n    if (numAsInteger === void 0) {\n      numAsInteger = 1;\n    }\n\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, numAsInteger);\n    } else {\n      this.putMetric(counter, this.counters[counter] + numAsInteger);\n    }\n  };\n  /**\r\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n   * given name does not exist. The value will be floored down to an integer.\r\n   * @param counter Name of the custom metric\r\n   * @param numAsInteger Set custom metric to this value\r\n   */\n\n\n  Trace.prototype.putMetric = function (counter, numAsInteger) {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = convertMetricValueToInteger(numAsInteger);\n    } else {\n      throw ERROR_FACTORY.create(\"invalid custom metric name\"\n      /* INVALID_CUSTOM_METRIC_NAME */\n      , {\n        customMetricName: counter\n      });\n    }\n  };\n  /**\r\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n   * not exist will return zero.\r\n   * @param counter\r\n   */\n\n\n  Trace.prototype.getMetric = function (counter) {\n    return this.counters[counter] || 0;\n  };\n  /**\r\n   * Sets a custom attribute of a trace to a certain value.\r\n   * @param attr\r\n   * @param value\r\n   */\n\n\n  Trace.prototype.putAttribute = function (attr, value) {\n    var isValidName = isValidCustomAttributeName(attr);\n    var isValidValue = isValidCustomAttributeValue(value);\n\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    } // Throw appropriate error when the attribute name or value is invalid.\n\n\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(\"invalid attribute name\"\n      /* INVALID_ATTRIBUTE_NAME */\n      , {\n        attributeName: attr\n      });\n    }\n\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(\"invalid attribute value\"\n      /* INVALID_ATTRIBUTE_VALUE */\n      , {\n        attributeValue: value\n      });\n    }\n  };\n  /**\r\n   * Retrieves the value a custom attribute of a trace is set to.\r\n   * @param attr\r\n   */\n\n\n  Trace.prototype.getAttribute = function (attr) {\n    return this.customAttributes[attr];\n  };\n\n  Trace.prototype.removeAttribute = function (attr) {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n\n    delete this.customAttributes[attr];\n  };\n\n  Trace.prototype.getAttributes = function () {\n    return tslib.__assign({}, this.customAttributes);\n  };\n\n  Trace.prototype.setStartTime = function (startTime) {\n    this.startTimeUs = startTime;\n  };\n\n  Trace.prototype.setDuration = function (duration) {\n    this.durationUs = duration;\n  };\n  /**\r\n   * Calculates and assigns the duration and start time of the trace using the measure performance\r\n   * entry.\r\n   */\n\n\n  Trace.prototype.calculateTraceMetrics = function () {\n    var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\n    }\n  };\n  /**\r\n   * @param navigationTimings A single element array which contains the navigationTIming object of\r\n   * the page load\r\n   * @param paintTimings A array which contains paintTiming object of the page load\r\n   * @param firstInputDelay First input delay in millisec\r\n   */\n\n\n  Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\n    var route = Api.getInstance().getUrl();\n\n    if (!route) {\n      return;\n    }\n\n    var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs); // navigationTimings includes only one element.\n\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\n      trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\n      trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\n    }\n\n    var FIRST_PAINT = 'first-paint';\n    var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n\n    if (paintTimings) {\n      var firstPaint = paintTimings.find(function (paintObject) {\n        return paintObject.name === FIRST_PAINT;\n      });\n\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\n      }\n\n      var firstContentfulPaint = paintTimings.find(function (paintObject) {\n        return paintObject.name === FIRST_CONTENTFUL_PAINT;\n      });\n\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\n      }\n\n      if (firstInputDelay) {\n        trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\n      }\n    }\n\n    logTrace(trace);\n  };\n\n  Trace.createUserTimingTrace = function (measureName) {\n    var trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  };\n\n  return Trace;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction createNetworkRequestEntry(entry) {\n  var performanceEntry = entry;\n\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n\n  var timeOrigin = Api.getInstance().getTimeOrigin();\n  var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\n  var timeToResponseInitiatedUs = performanceEntry.responseStart ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000) : undefined;\n  var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000); // Remove the query params from logged network request url.\n\n  var url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  var networkRequest = {\n    url: url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs: startTimeUs,\n    timeToResponseInitiatedUs: timeToResponseInitiatedUs,\n    timeToResponseCompletedUs: timeToResponseCompletedUs\n  };\n  logNetworkRequest(networkRequest);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar FID_WAIT_TIME_MS = 5000;\n\nfunction setupOobResources() {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  } // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n\n\n  setTimeout(function () {\n    return setupOobTraces();\n  }, 0);\n  setTimeout(function () {\n    return setupNetworkRequests();\n  }, 0);\n  setTimeout(function () {\n    return setupUserTimingTraces();\n  }, 0);\n}\n\nfunction setupNetworkRequests() {\n  var api = Api.getInstance();\n  var resources = api.getEntriesByType('resource');\n\n  for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\n    var resource = resources_1[_i];\n    createNetworkRequestEntry(resource);\n  }\n\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\n\nfunction setupOobTraces() {\n  var api = Api.getInstance();\n  var navigationTimings = api.getEntriesByType('navigation');\n  var paintTimings = api.getEntriesByType('paint'); // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var timeoutId_1 = setTimeout(function () {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId_1 = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay(function (fid) {\n      if (timeoutId_1) {\n        clearTimeout(timeoutId_1);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\n\nfunction setupUserTimingTraces() {\n  var api = Api.getInstance(); // Run through the measure performance entries collected up to this point.\n\n  var measures = api.getEntriesByType('measure');\n\n  for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n    var measure = measures_1[_i];\n    createUserTimingTrace(measure);\n  } // Setup an observer to capture the measures from this point on.\n\n\n  api.setupObserver('measure', createUserTimingTrace);\n}\n\nfunction createUserTimingTrace(measure) {\n  var measureName = measure.name; // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n\n  if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) === TRACE_MEASURE_PREFIX) {\n    return;\n  }\n\n  Trace.createUserTimingTrace(measureName);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PerformanceController =\n/** @class */\nfunction () {\n  function PerformanceController(app) {\n    this.app = app;\n\n    if (Api.getInstance().requiredApisAvailable()) {\n      util.validateIndexedDBOpenable().then(function (isAvailable) {\n        if (isAvailable) {\n          setupTransportService();\n          getInitializationPromise().then(setupOobResources, setupOobResources);\n        }\n      }).catch(function (error) {\n        consoleLogger.info(\"Environment doesn't support IndexedDB: \" + error);\n      });\n    }\n  }\n\n  PerformanceController.prototype.trace = function (name) {\n    return new Trace(name);\n  };\n\n  Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\n    get: function get() {\n      return SettingsService.getInstance().instrumentationEnabled;\n    },\n    set: function set(val) {\n      SettingsService.getInstance().instrumentationEnabled = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\n    get: function get() {\n      return SettingsService.getInstance().dataCollectionEnabled;\n    },\n    set: function set(val) {\n      SettingsService.getInstance().dataCollectionEnabled = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return PerformanceController;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nfunction registerPerformance(instance) {\n  var factoryMethod = function factoryMethod(app, installations) {\n    if (app.name !== DEFAULT_ENTRY_NAME) {\n      throw ERROR_FACTORY.create(\"FB not default\"\n      /* FB_NOT_DEFAULT */\n      );\n    }\n\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(\"no window\"\n      /* NO_WINDOW */\n      );\n    }\n\n    setupApi(window);\n    SettingsService.getInstance().firebaseAppInstance = app;\n    SettingsService.getInstance().installationsService = installations;\n    return new PerformanceController(app);\n  }; // Register performance with firebase-app.\n\n\n  instance.INTERNAL.registerComponent(new component.Component('performance', function (container) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate(); // The following call will always succeed because perf has `import '@firebase/installations'`\n\n    var installations = container.getProvider('installations').getImmediate();\n    return factoryMethod(app, installations);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ));\n  instance.registerVersion(name, version);\n}\n\nregisterPerformance(firebase__default['default']);\nexports.registerPerformance = registerPerformance;","import '@firebase/performance';"],"sourceRoot":""}